<com.google.ads.i: void a(com.google.ads.mediation.MediationAdapter)> --> <com.google.ads.mediation.MediationBannerAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras)>
<com.jadn.cc.trace.ExceptionHandler: boolean register(android.content.Context)> --> <com.jadn.cc.trace.ExceptionHandler: java.lang.String[] searchForStackTraces()>
<com.jadn.cc.trace.ExceptionHandler: void submitStackTraces()> --> <com.jadn.cc.trace.ExceptionHandler: java.lang.String[] searchForStackTraces()>
<com.jadn.cc.services.ContentService$3: void start()> --> <com.jadn.cc.util.MailRecordings: void doIt(com.jadn.cc.services.ContentService)>
<com.jadn.cc.services.ContentService: void updateNotification(java.lang.String)> --> <com.jadn.cc.services.ContentService: android.content.Context getBaseContext()>
<com.jadn.cc.services.ContentService: void doDownloadCompletedNotification(int)> --> <com.jadn.cc.services.ContentService: android.content.Context getBaseContext()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> --> <com.google.ads.ae: void a(android.app.Activity)>
<com.jadn.cc.util.Mailer: boolean send()> --> <javax.mail.internet.MimeMessage: void <init>(javax.mail.Session)>
<com.jadn.cc.ui.PodcastList: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.PodcastList$5: void <init>(com.jadn.cc.ui.PodcastList)>
<com.google.ads.internal.a: void a(android.webkit.WebView,java.util.Map)> --> <org.json.JSONObject: java.lang.String toString()>
<com.google.ads.util.AdUtil: java.lang.String a(java.util.Map)> --> <org.json.JSONObject: java.lang.String toString()>
<com.google.ads.util.g$a: void a(android.app.AlertDialog$Builder,java.lang.String,android.webkit.JsResult)> --> <com.google.ads.util.g$a$3: void <init>(android.webkit.JsResult)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void reset(long)>
<myjava.awt.datatransfer.DataFlavor: boolean isFlavorTextType()> --> <myjava.awt.datatransfer.DataFlavor: boolean isUnicodeFlavor()>
<myjava.awt.datatransfer.DataFlavor: java.lang.String getKeyInfo()> --> <myjava.awt.datatransfer.DataFlavor: boolean isUnicodeFlavor()>
<myjava.awt.datatransfer.DataFlavor: boolean equals(myjava.awt.datatransfer.DataFlavor)> --> <myjava.awt.datatransfer.DataFlavor: boolean isUnicodeFlavor()>
<com.jadn.cc.ui.SubscriptionEdit: void start()> --> <com.jadn.cc.ui.SubscriptionEdit: void run()>
<com.jadn.cc.ui.SubscriptionEdit$1: void onClick(android.view.View)> --> <com.jadn.cc.ui.SubscriptionEdit: int[] access$100()>
<com.google.ads.AdView: void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet)> --> <com.google.ads.AdSize: int getWidth()>
<com.google.ads.AdSize: java.lang.String toString()> --> <com.google.ads.AdSize: int getWidth()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.AdSize: int getWidth()>
<com.google.ads.internal.AdWebView: void onMeasure(int,int)> --> <com.google.ads.AdSize: int getWidth()>
<com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)> --> <com.google.ads.AdSize: int getWidth()>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.a: java.util.List c()>
<com.google.ads.AdActivity: void onPause()> --> <com.google.ads.AdActivity: boolean isFinishing()>
<com.google.ads.AdActivity: void onDestroy()> --> <com.google.ads.AdActivity: boolean isFinishing()>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> --> <com.google.ads.AdView: boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.AdView: boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)>
<com.aocate.media.ServiceBackedMediaPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.aocate.media.ServiceBackedMediaPlayer: void access$100(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)>
<com.google.ads.mediation.admob.AdMobAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.InterstitialAd a(android.app.Activity,java.lang.String)>
<com.jadn.cc.ui.PodcastList$6: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.ui.PodcastList: void finish()>
<com.google.ads.util.b: boolean a(java.lang.String,int)> --> <com.google.ads.util.b: boolean a(int)>
<com.aocate.presto.service.IOnInfoListenerCallback_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnInfoListenerCallback_0_8$Stub: boolean onInfo(int,int)>
<com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8$Stub: void <init>()> --> <com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8$Stub: void attachInterface(android.os.IInterface,java.lang.String)>
<com.google.ads.util.AdUtil: int b(android.content.Context,android.util.DisplayMetrics)> --> <com.google.ads.util.e: int b(android.content.Context,android.util.DisplayMetrics)>
<com.jadn.cc.ui.DownloadProgress: void access$000(com.jadn.cc.ui.DownloadProgress)> --> <com.jadn.cc.ui.DownloadProgress: void doDownloads()>
<com.google.ads.util.g$a: boolean a(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean)> --> <com.google.ads.internal.AdWebView: com.google.ads.AdActivity b()>
<com.google.ads.internal.AdWebView$1: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)> --> <com.google.ads.internal.AdWebView: com.google.ads.AdActivity b()>
<com.google.ads.internal.AdWebView: void a()> --> <com.google.ads.internal.AdWebView: com.google.ads.AdActivity b()>
<com.google.ads.AdActivity: void a(com.google.ads.internal.AdWebView,boolean,int,boolean)> --> <com.google.ads.internal.AdWebView: com.google.ads.AdActivity b()>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.AdWebView: com.google.ads.AdActivity b()>
<com.google.ads.r: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.AdWebView: com.google.ads.AdActivity b()>
<com.aocate.media.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)> --> <com.aocate.media.MediaPlayer: android.os.Handler access$302(com.aocate.media.MediaPlayer,android.os.Handler)>
<com.jadn.cc.services.ContentService: void startDownloadingNewPodCasts(int)> --> <com.jadn.cc.services.ContentService$2: void start()>
<org.apache.harmony.awt.datatransfer.DataTransferThread: void start()> --> <org.apache.harmony.awt.datatransfer.DTK: void runEventLoop()>
<com.jadn.cc.services.ContentService: java.lang.String getPodcastEmailSummary()> --> <com.jadn.cc.services.MetaFile: java.lang.String getUrl()>
<com.jadn.cc.services.EnclosureHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> --> <com.jadn.cc.services.MetaNet: void setDescription(java.lang.String)>
<com.jadn.cc.util.MailRecordings: void doIt(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.util.Mailer: void addAttachment(java.lang.String)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void registerOnPitchAdjustmentAvailableChangedCallback(long,com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8)>
<com.google.ads.mediation.admob.AdMobAdapterServerParameters: void <init>()> --> <com.google.ads.mediation.MediationServerParameters: void <init>()>
<com.google.ads.mediation.customevent.CustomEventServerParameters: void <init>()> --> <com.google.ads.mediation.MediationServerParameters: void <init>()>
<com.jadn.cc.ui.OpmlLocator: void start()> --> <com.jadn.cc.ui.OpmlLocator: void sorry(java.lang.String)>
<com.jadn.cc.ui.OpmlLocator: void access$000(com.jadn.cc.ui.OpmlLocator,java.lang.String)> --> <com.jadn.cc.ui.OpmlLocator: void sorry(java.lang.String)>
<com.jadn.cc.ui.Subscriptions: boolean onContextItemSelected(android.view.MenuItem)> --> <com.jadn.cc.services.ContentService: void deleteSubscription(com.jadn.cc.core.Subscription)>
<com.google.ads.ae: void a(android.app.Activity)> --> <com.google.ads.ae$a: void <init>(android.app.Activity)>
<com.jadn.cc.ui.OpmlLocator: void start()> --> <com.jadn.cc.ui.OpmlLocator: void startActivity(android.content.Intent)>
<com.jadn.cc.ui.OpmlLocator$1: void onClick(android.view.View)> --> <com.jadn.cc.ui.OpmlLocator: void startActivity(android.content.Intent)>
<com.google.ads.e$7: void start()> --> <com.google.ads.internal.d: void b(com.google.ads.c)>
<com.aocate.media.MediaPlayer: void start()> --> <com.aocate.media.MediaPlayer: void run()>
<com.aocate.media.AndroidMediaPlayer: void <init>(com.aocate.media.MediaPlayer,android.content.Context)> --> <com.aocate.media.AndroidMediaPlayer$4: void <init>(com.aocate.media.AndroidMediaPlayer)>
<com.google.ads.internal.d: void f()> --> <com.google.ads.m: boolean a()>
<com.google.ads.internal.d: void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean)> --> <com.google.ads.m: boolean a()>
<com.google.ads.internal.d: void x()> --> <com.google.ads.m: boolean a()>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.m: boolean a()>
<com.google.ads.internal.d: void B()> --> <com.google.ads.m: boolean a()>
<com.jadn.cc.services.AlarmService$1: void start()> --> <com.jadn.cc.services.AlarmService: void stopSelf()>
<com.jadn.cc.ui.SubscriptionEdit: java.lang.String access$000(com.jadn.cc.ui.SubscriptionEdit)> --> <com.jadn.cc.ui.SubscriptionEdit: java.lang.String getURL()>
<com.jadn.cc.ui.SubscriptionEdit: void run()> --> <com.jadn.cc.ui.SubscriptionEdit: java.lang.String getURL()>
<com.jadn.cc.services.FileSubscriptionHelper: java.util.List getSubscriptions()> --> <com.jadn.cc.services.FileSubscriptionHelper: java.util.List resetToDemoSubscriptions()>
<com.jadn.cc.services.ContentService: void resetToDemoSubscriptions()> --> <com.jadn.cc.services.FileSubscriptionHelper: java.util.List resetToDemoSubscriptions()>
<com.jadn.cc.util.Updater: void start()> --> <com.jadn.cc.util.Updater: void run()>
<com.jadn.cc.util.Mailer: boolean send()> --> <javax.mail.Transport: void send(javax.mail.Message)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void showInterstitial()> --> <com.google.ads.mediation.customevent.CustomEventInterstitial: void showInterstitial()>
<com.google.ads.ag: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.ag$a: void <init>()>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void setLooping(boolean)>
<com.aocate.media.MediaPlayer: void setLooping(boolean)> --> <com.aocate.media.MediaPlayerImpl: void setLooping(boolean)>
<com.aocate.media.ServiceBackedMediaPlayer: void access$600(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void setOnPreparedCallback(com.aocate.presto.service.IPlayMedia_0_8)>
<com.google.ads.internal.d: void a()> --> <com.google.ads.internal.AdWebView: void <init>(com.google.ads.m,com.google.ads.AdSize)>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.AdWebView: void <init>(com.google.ads.m,com.google.ads.AdSize)>
<com.google.ads.internal.c: void <init>(com.google.ads.internal.d)> --> <com.google.ads.internal.AdWebView: void <init>(com.google.ads.m,com.google.ads.AdSize)>
<com.jadn.cc.ui.CarCast: void onActivityResult(int,int,android.content.Intent)> --> <com.jadn.cc.ui.BaseActivity: void onActivityResult(int,int,android.content.Intent)>
<com.jadn.cc.ui.PodcastList: void onActivityResult(int,int,android.content.Intent)> --> <com.jadn.cc.ui.BaseActivity: void onActivityResult(int,int,android.content.Intent)>
<com.jadn.cc.ui.SearchResults: void onActivityResult(int,int,android.content.Intent)> --> <com.jadn.cc.ui.BaseActivity: void onActivityResult(int,int,android.content.Intent)>
<com.jadn.cc.ui.Subscriptions: void onActivityResult(int,int,android.content.Intent)> --> <com.jadn.cc.ui.BaseActivity: void onActivityResult(int,int,android.content.Intent)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.AdRequest: boolean isTestDevice(android.content.Context)>
<com.google.ads.mediation.MediationAdRequest: void <init>(com.google.ads.AdRequest,android.content.Context,boolean)> --> <com.google.ads.AdRequest: boolean isTestDevice(android.content.Context)>
<com.jadn.cc.ui.DownloadProgress$2: void onClick(android.view.View)> --> <com.jadn.cc.ui.DownloadProgress: java.lang.Object getSystemService(java.lang.String)>
<com.jadn.cc.ui.DownloadProgress$1: void onClick(android.view.View)> --> <com.jadn.cc.ui.DownloadProgress: java.lang.Object getSystemService(java.lang.String)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void setPitchStepsAdjustment(long,float)>
<com.google.ads.util.c: byte[] a(java.lang.String)> --> <com.google.ads.util.c: byte[] a(byte[],int)>
<com.google.ads.util.g$b: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)> --> <com.google.ads.internal.c: void b(boolean)>
<myjava.awt.datatransfer.MimeTypeProcessor: void retrieveParams(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: void access$3(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.util.Hashtable)>
<com.google.ads.util.i: void a(com.google.ads.util.i,com.google.ads.util.i$a)> --> <com.google.ads.util.i: void a(com.google.ads.util.i$a)>
<com.jadn.cc.ui.Subscriptions: void exportOpml()> --> <com.jadn.cc.services.ContentService: void exportOPML(java.io.FileOutputStream)>
<com.google.ads.mediation.admob.AdMobAdapter$b: void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.mediation.MediationInterstitialListener: void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode)>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: void onFailedToReceiveAd()> --> <com.google.ads.mediation.MediationInterstitialListener: void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.EmptyNetworkExtras)> --> <com.google.ads.mediation.MediationInterstitialListener: void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode)>
<com.google.ads.internal.f: void start()> --> <com.google.ads.internal.f: void run()>
<com.google.ads.aa: void start()> --> <com.google.ads.aa: void run()>
<com.aocate.media.ServiceBackedMediaPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.aocate.media.ServiceBackedMediaPlayer: void access$800(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.EmptyNetworkExtras)> --> <com.google.ads.mediation.customevent.CustomEventInterstitial: void requestInterstitialAd(com.google.ads.mediation.customevent.CustomEventInterstitialListener,android.app.Activity,java.lang.String,java.lang.String,com.google.ads.mediation.MediationAdRequest)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.awt.Image getImage(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProxy: java.awt.image.BufferedImage createBufferedImage(org.apache.harmony.awt.datatransfer.RawBitmap)>
<com.google.ads.internal.i: void onPageFinished(android.webkit.WebView,java.lang.String)> --> <com.google.ads.internal.a: void a(android.webkit.WebView)>
<com.google.ads.AdActivity: void a(com.google.ads.internal.AdWebView,boolean,int,boolean)> --> <com.google.ads.internal.a: void a(android.webkit.WebView)>
<myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestByCharset(java.util.List)> --> <myjava.awt.datatransfer.DataFlavor: java.util.List selectBestByAlphabet(java.util.List)>
<com.google.ads.internal.f: void b()> --> <com.google.ads.internal.f$a: java.net.HttpURLConnection a(java.net.URL)>
<com.jadn.cc.ui.Stats: void onContentService()> --> <com.jadn.cc.ui.Stats: java.util.List getSubscriptions()>
<com.google.ads.i: void a(com.google.ads.mediation.MediationAdapter)> --> <com.google.ads.k: void <init>(com.google.ads.h)>
<myjava.awt.datatransfer.DataFlavor: java.lang.String getCharset()> --> <myjava.awt.datatransfer.DataFlavor: boolean isCharsetRedundant()>
<com.google.ads.e: boolean c()> --> <com.google.ads.h: void f()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8$Stub: com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8 asInterface(android.os.IBinder)>
<com.jadn.cc.services.ContentService: java.lang.String getPodcastEmailSummary()> --> <com.jadn.cc.services.ContentService: java.util.List getSubscriptions()>
<com.jadn.cc.services.ContentService: void exportOPML(java.io.FileOutputStream)> --> <com.jadn.cc.services.ContentService: java.util.List getSubscriptions()>
<com.jadn.cc.ui.BaseActivity: java.util.List getSubscriptions()> --> <com.jadn.cc.services.ContentService: java.util.List getSubscriptions()>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.ContentService: java.util.List getSubscriptions()>
<com.google.ads.util.b$a: void <clinit>()> --> <com.google.ads.util.b$a: void <init>(java.lang.String,int,int)>
<com.google.ads.ae$b: void start()> --> <com.google.ads.ae$b: void run()>
<com.jadn.cc.ui.AudioRecorder: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.AudioRecorder: void registerForContextMenu(android.view.View)>
<com.aocate.media.ServiceBackedMediaPlayer: void stop()> --> <com.aocate.presto.service.IPlayMedia_0_8: void stop(long)>
<com.aocate.media.MediaPlayer: void setPlaybackPitch(float)> --> <com.aocate.media.MediaPlayer: float getPitchStepsAdjustment(float)>
<com.google.ads.util.d: void <clinit>()> --> <com.google.ads.util.d: void <init>()>
<com.google.ads.internal.a$1: void <init>()> --> <com.google.ads.o: void <init>()>
<com.jadn.cc.ui.TimePickerPreference: void onDialogClosed(boolean)> --> <com.jadn.cc.ui.TimePickerPreference: boolean persistString(java.lang.String)>
<com.jadn.cc.ui.Downloader: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Downloader: android.view.View findViewById(int)>
<com.jadn.cc.core.CarCastApplication: void setContentServiceListener(com.jadn.cc.core.ContentServiceListener)> --> <com.jadn.cc.core.CarCastApplication: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<com.jadn.cc.ui.PodcastList: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.PodcastList: void setTitle(java.lang.CharSequence)>
<com.jadn.cc.services.ContentService: boolean fullReset()> --> <com.aocate.media.MediaPlayer: void setOnCompletionListener(com.aocate.media.MediaPlayer$OnCompletionListener)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.m,com.google.ads.AdSize)> --> <com.google.ads.internal.AdWebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<com.jadn.cc.core.Subscription: void writeToParcel(android.os.Parcel,int)> --> <com.jadn.cc.core.OrderingPreference: int ordinal()>
<com.google.ads.internal.a$3: void <init>()> --> <com.google.ads.u: void <init>()>
<com.jadn.cc.services.ContentService$2: void start()> --> <com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.g: long q()>
<com.jadn.cc.services.EnclosureHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)> --> <org.xml.sax.helpers.DefaultHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>
<com.jadn.cc.trace.ExceptionHandler: boolean register(android.content.Context)> --> <com.jadn.cc.trace.ExceptionHandler$1: void <init>()>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onPresentScreen()> --> <com.google.ads.mediation.MediationBannerListener: void onPresentScreen(com.google.ads.mediation.MediationBannerAdapter)>
<com.google.ads.mediation.admob.AdMobAdapter$a: void onPresentScreen(com.google.ads.Ad)> --> <com.google.ads.mediation.MediationBannerListener: void onPresentScreen(com.google.ads.mediation.MediationBannerAdapter)>
<com.google.ads.mediation.customevent.CustomEventAdapter: android.view.View getBannerView()> --> <com.google.ads.mediation.customevent.CustomEventAdapter$a: android.view.View a()>
<com.jadn.cc.core.WifiConnectedReceiver: void registerForWifiBroadcasts(android.content.Context)> --> <com.jadn.cc.core.WifiConnectedReceiver: void <init>()>
<com.google.ads.v: void b(java.util.HashMap,java.lang.String,com.google.ads.util.i$c)> --> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.internal.d: void b()> --> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.v: void a(java.util.HashMap,java.lang.String,com.google.ads.util.i$c)> --> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.AdView: void setAdListener(com.google.ads.AdListener)> --> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.InterstitialAd: void setAdListener(com.google.ads.AdListener)> --> <com.google.ads.util.i$c: void a(java.lang.Object)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.EmptyNetworkExtras)> --> <com.google.ads.util.a: void a(java.lang.Object)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.EmptyNetworkExtras)> --> <com.google.ads.util.a: void a(java.lang.Object)>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.z: int a(java.util.HashMap,java.lang.String,int,android.util.DisplayMetrics)>
<com.jadn.cc.ui.PodcastList$5: void onClick(android.view.View)> --> <com.jadn.cc.ui.PodcastList: void showPodcasts()>
<com.jadn.cc.ui.PodcastList: void onActivityResult(int,int,android.content.Intent)> --> <com.jadn.cc.ui.PodcastList: void showPodcasts()>
<com.jadn.cc.ui.PodcastList: void onContentService()> --> <com.jadn.cc.ui.PodcastList: void showPodcasts()>
<com.jadn.cc.ui.PodcastList$10: void onClick(android.view.View)> --> <com.jadn.cc.ui.PodcastList: void showPodcasts()>
<com.jadn.cc.ui.PodcastList$4: void onClick(android.view.View)> --> <com.jadn.cc.ui.PodcastList: void showPodcasts()>
<com.jadn.cc.ui.PodcastList$11$1: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.ui.PodcastList: void showPodcasts()>
<com.jadn.cc.ui.PodcastList$1$1: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.ui.PodcastList: void showPodcasts()>
<com.jadn.cc.ui.PodcastList$2: void onClick(android.view.View)> --> <com.jadn.cc.ui.PodcastList: void showPodcasts()>
<com.jadn.cc.ui.PodcastList$3: void onClick(android.view.View)> --> <com.jadn.cc.ui.PodcastList: void showPodcasts()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void setLooping(long,boolean)>
<com.jadn.cc.ui.PodcastList$7: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.services.DownloadHistory: int eraseHistory()>
<com.jadn.cc.ui.Downloader: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Downloader: void setContentView(int)>
<com.jadn.cc.services.ContentService: void deleteCurrentPodcast()> --> <com.jadn.cc.services.MetaFile: void delete()>
<com.jadn.cc.services.MetaHolder: void delete(int)> --> <com.jadn.cc.services.MetaFile: void delete()>
<com.aocate.media.ServiceBackedMediaPlayer$8: void onSeekComplete()> --> <com.aocate.media.MediaPlayer$OnSeekCompleteListener: void onSeekComplete(com.aocate.media.MediaPlayer)>
<com.aocate.media.AndroidMediaPlayer$6: void onSeekComplete(android.media.MediaPlayer)> --> <com.aocate.media.MediaPlayer$OnSeekCompleteListener: void onSeekComplete(com.aocate.media.MediaPlayer)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getURL(java.awt.datatransfer.DataFlavor)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void setDataSourceString(long,java.lang.String)>
<com.google.ads.e: void a(com.google.ads.h,android.view.View)> --> <com.google.ads.h: com.google.ads.f a()>
<com.google.ads.e: void a(com.google.ads.h,boolean)> --> <com.google.ads.h: com.google.ads.f a()>
<com.google.ads.internal.d: void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)> --> <com.google.ads.b: java.math.BigInteger b()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.b: java.math.BigInteger b()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void unregisterOnCompletionCallback(long,com.aocate.presto.service.IOnCompletionListenerCallback_0_8)>
<com.google.ads.e$1: void start()> --> <com.google.ads.e: java.lang.Object a(com.google.ads.e)>
<com.aocate.media.ServiceBackedMediaPlayer$1: void onServiceDisconnected(android.content.ComponentName)> --> <com.aocate.media.ServiceBackedMediaPlayer: long access$002(com.aocate.media.ServiceBackedMediaPlayer,long)>
<com.aocate.media.ServiceBackedMediaPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.aocate.media.ServiceBackedMediaPlayer: long access$002(com.aocate.media.ServiceBackedMediaPlayer,long)>
<myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor getTextPlainUnicodeFlavor()> --> <org.apache.harmony.awt.datatransfer.DTK: java.lang.String getDefaultCharset()>
<myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestByCharset(java.util.List)> --> <org.apache.harmony.awt.datatransfer.DTK: java.lang.String getDefaultCharset()>
<myjava.awt.datatransfer.DataFlavor: java.lang.String getCharset()> --> <org.apache.harmony.awt.datatransfer.DTK: java.lang.String getDefaultCharset()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean isPlaying(long)>
<com.aocate.media.ServiceBackedMediaPlayer$4: void <init>(com.aocate.media.ServiceBackedMediaPlayer)> --> <com.aocate.presto.service.IOnErrorListenerCallback_0_8$Stub: void <init>()>
<com.jadn.cc.services.ContentService: int onStartCommand(android.content.Intent,int,int)> --> <com.jadn.cc.services.ContentService: void setApplicationContext(android.content.Context)>
<com.jadn.cc.core.CarCastApplication$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.jadn.cc.services.ContentService: void setApplicationContext(android.content.Context)>
<com.google.ads.internal.d: void a(com.google.ads.f,boolean)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.j: void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.d: void e()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onClick()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onReceivedAd(android.view.View)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.k: void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.d: void b(java.lang.String)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.AdWebView$1: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.d: void x()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onDismissScreen()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onFailedToReceiveAd()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.a: void a(android.webkit.WebView,java.lang.String)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: void onReceivedAd()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.d: void d()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.util.g$a: boolean onConsoleMessage(android.webkit.ConsoleMessage)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection,int)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.aa: void start()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.v: void b(java.util.HashMap,java.lang.String,com.google.ads.util.i$c)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.j$a: void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.AdRequest: void <clinit>()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: void onLeaveApplication()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.ab: void start()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.AdActivity: void d()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.i: void start()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.i: void onPageFinished(android.webkit.WebView,java.lang.String)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.c: void start()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.d: void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.AdActivity: void b(java.util.HashMap,com.google.ads.internal.d)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.util.g$b: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onPresentScreen()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: void onDismissScreen()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.h$1: void start()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.d: void a(java.util.LinkedList)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.z: int a(java.util.HashMap,java.lang.String,int,android.util.DisplayMetrics)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.d: void b(com.google.ads.c)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.e$8: void start()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onLeaveApplication()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.e: boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.AdActivity$StaticMethodWrapper: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.ae$a: void start()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.d: void f()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.AdActivity: void a(java.util.HashMap,com.google.ads.internal.d)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: void onPresentScreen()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.internal.c: void a()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: void onFailedToReceiveAd()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.x: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.ae$b: void start()> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.util.b: void a(java.lang.String)>
<com.jadn.cc.ui.TimePickerPreference: void <init>(android.content.Context,android.util.AttributeSet)> --> <com.jadn.cc.ui.TimePickerPreference: void setNegativeButtonText(java.lang.CharSequence)>
<com.google.ads.mediation.admob.AdMobAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.admob.AdMobAdapterExtras: boolean getUseExactAdSize()>
<com.jadn.cc.util.Mailer: void addAttachment(java.lang.String)> --> <javax.mail.BodyPart: void setFileName(java.lang.String)>
<com.jadn.cc.ui.SubscriptionEdit$3: void handleMessage(android.os.Message)> --> <com.jadn.cc.services.EnclosureHandler: java.lang.String getTitle()>
<com.google.ads.e$3: void start()> --> <com.google.ads.e: com.google.ads.h c(com.google.ads.e)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.util.AdUtil: java.lang.String d(android.content.Context)>
<com.google.ads.q: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setBirthday(java.lang.String)> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.AdActivity$StaticMethodWrapper: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.mediation.MediationServerParameters: void load(java.util.Map)> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.util.AdUtil: boolean a(int,int,java.lang.String)> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.internal.c: void start()> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.util.AdUtil: boolean c(android.content.Context)> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.AdActivity: void a(java.lang.String)> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.r: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.k: void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.util.g$a: boolean onConsoleMessage(android.webkit.ConsoleMessage)> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.e: boolean c()> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.internal.c: void b()> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.i: boolean a(java.util.Map)> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.k: void onReceivedAd(com.google.ads.mediation.MediationInterstitialAdapter)> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.AdView: void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet)> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.util.AdUtil: boolean b(android.content.Context)> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.internal.b: void a(java.lang.String)> --> <com.google.ads.util.b: void b(java.lang.String)>
<com.google.ads.internal.d: void y()> --> <com.google.ads.util.b: void b(java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getSerializedObject(java.awt.datatransfer.DataFlavor)>
<com.google.ads.c: java.util.List a(org.json.JSONObject,java.lang.String)> --> <org.json.JSONArray: java.lang.String getString(int)>
<com.google.ads.c: com.google.ads.a a(org.json.JSONObject)> --> <org.json.JSONArray: java.lang.String getString(int)>
<com.jadn.cc.util.MailRecordings: void doIt(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.util.Mailer: boolean send()>
<myjava.awt.datatransfer.DataFlavor: java.lang.String getCharset()> --> <myjava.awt.datatransfer.DataFlavor: boolean isCharsetRequired()>
<com.jadn.cc.util.MailRecordings: void doIt(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.util.Mailer: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>
<com.jadn.cc.ui.DownloadProgress: void onPause()> --> <com.jadn.cc.ui.BaseActivity: void onPause()>
<com.jadn.cc.ui.Search: void onPause()> --> <com.jadn.cc.ui.BaseActivity: void onPause()>
<com.jadn.cc.ui.AudioRecorder: void onPause()> --> <com.jadn.cc.ui.BaseActivity: void onPause()>
<com.jadn.cc.ui.CarCast: void onPause()> --> <com.jadn.cc.ui.BaseActivity: void onPause()>
<com.jadn.cc.ui.Downloader: void onPause()> --> <com.jadn.cc.ui.BaseActivity: void onPause()>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.AdRequest: com.google.ads.AdRequest setTestDevices(java.util.Set)>
<com.google.ads.b: java.math.BigInteger d()> --> <com.google.ads.b: byte[] a(long)>
<com.google.ads.mediation.customevent.CustomEventAdapter: java.lang.Object a(java.lang.String,java.lang.Class,java.lang.String)> --> <com.google.ads.g: java.lang.Object a(java.lang.String,java.lang.Class)>
<com.google.ads.i: void start()> --> <com.google.ads.g: java.lang.Object a(java.lang.String,java.lang.Class)>
<org.apache.harmony.awt.ContextStorage: void <init>()> --> <org.apache.harmony.awt.ContextStorage$ContextLock: void <init>(org.apache.harmony.awt.ContextStorage,org.apache.harmony.awt.ContextStorage$ContextLock)>
<com.google.ads.ae: boolean a(android.content.Context,long)> --> <com.google.ads.ae: boolean a(android.content.Context,long,android.content.SharedPreferences)>
<com.google.ads.util.AdUtil: java.lang.String a(android.location.Location)> --> <com.google.ads.util.AdUtil: java.lang.String b(android.location.Location)>
<com.google.ads.c: com.google.ads.c a(java.lang.String)> --> <com.google.ads.c: java.util.List a(org.json.JSONObject,java.lang.String)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnErrorCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.presto.service.IPlayMedia_0_8: void registerOnErrorCallback(long,com.aocate.presto.service.IOnErrorListenerCallback_0_8)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnPitchAdjustmentAvailableChangedListener(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer$6: void <init>(com.aocate.media.ServiceBackedMediaPlayer)>
<com.google.ads.util.c: byte[] b(byte[],int,int,int)> --> <com.google.ads.util.c$c: void <init>(int,byte[])>
<com.google.ads.aa: void start()> --> <com.google.ads.aa: java.net.HttpURLConnection a(java.net.URL)>
<com.jadn.cc.services.ContentService: java.util.SortedSet moveBottom(java.util.SortedSet)> --> <com.jadn.cc.services.MetaHolder: java.util.SortedSet moveBottom(java.util.SortedSet)>
<com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat: com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat putBitmap(int,android.graphics.Bitmap)> --> <com.jadn.cc.services.RemoteControlClientCompat: boolean access$000()>
<com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat: com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat putString(int,java.lang.String)> --> <com.jadn.cc.services.RemoteControlClientCompat: boolean access$000()>
<com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat: void clear()> --> <com.jadn.cc.services.RemoteControlClientCompat: boolean access$000()>
<com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat: void <init>(com.jadn.cc.services.RemoteControlClientCompat,java.lang.Object)> --> <com.jadn.cc.services.RemoteControlClientCompat: boolean access$000()>
<com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat: void apply()> --> <com.jadn.cc.services.RemoteControlClientCompat: boolean access$000()>
<com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat: com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat putLong(int,long)> --> <com.jadn.cc.services.RemoteControlClientCompat: boolean access$000()>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.MetaNet: java.lang.String getTitle()>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.services.ContentService: void restoreState()>
<com.google.ads.mediation.customevent.CustomEventAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras)> --> <com.google.ads.mediation.customevent.CustomEventAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.EmptyNetworkExtras)>
<com.google.ads.internal.f: void b()> --> <com.google.ads.internal.f: void a(java.net.HttpURLConnection,int)>
<com.google.ads.internal.d: void a(java.util.List,java.lang.String)> --> <com.google.ads.internal.d: void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)>
<com.google.ads.internal.d: void b(com.google.ads.f,java.lang.Boolean)> --> <com.google.ads.internal.d: void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)>
<com.google.ads.internal.d: void a(com.google.ads.f,java.lang.Boolean)> --> <com.google.ads.internal.d: void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)>
<com.google.ads.AdActivity: void a(com.google.ads.internal.AdWebView,boolean,int,boolean)> --> <com.google.ads.AdActivity: boolean requestWindowFeature(int)>
<com.jadn.cc.services.ContentService: void onLostAudioFocus(boolean)> --> <com.jadn.cc.services.ContentService: void bumpForwardSeconds(int)>
<com.jadn.cc.ui.Bumper: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: void bumpForwardSeconds(int)>
<com.jadn.cc.services.ContentService: int onStartCommand(android.content.Intent,int,int)> --> <com.jadn.cc.services.ContentService: void bumpForwardSeconds(int)>
<com.jadn.cc.services.ContentService$1: void onCallStateChanged(int,java.lang.String)> --> <com.jadn.cc.services.ContentService: void bumpForwardSeconds(int)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.EnclosureHandler: void <init>(com.jadn.cc.services.DownloadHistory,java.lang.Boolean)>
<com.jadn.cc.services.EnclosureHandler: void <init>(com.jadn.cc.services.DownloadHistory)> --> <com.jadn.cc.services.EnclosureHandler: void <init>(com.jadn.cc.services.DownloadHistory,java.lang.Boolean)>
<com.google.ads.AdRequest: boolean getPlusOneOptOut()> --> <com.google.ads.AdRequest: com.google.ads.mediation.admob.AdMobAdapterExtras a()>
<com.google.ads.AdRequest: com.google.ads.AdRequest setExtras(java.util.Map)> --> <com.google.ads.AdRequest: com.google.ads.mediation.admob.AdMobAdapterExtras a()>
<com.google.ads.AdRequest: com.google.ads.AdRequest setPlusOneOptOut(boolean)> --> <com.google.ads.AdRequest: com.google.ads.mediation.admob.AdMobAdapterExtras a()>
<com.google.ads.AdRequest: com.google.ads.AdRequest addExtra(java.lang.String,java.lang.Object)> --> <com.google.ads.AdRequest: com.google.ads.mediation.admob.AdMobAdapterExtras a()>
<com.jadn.cc.services.ContentService: void updateRemoteDisplay()> --> <com.jadn.cc.services.MetaFile: java.lang.String getTitle()>
<com.jadn.cc.services.ContentService: java.lang.String currentTitle()> --> <com.jadn.cc.services.MetaFile: java.lang.String getTitle()>
<com.jadn.cc.services.ContentService: java.lang.String getPodcastEmailSummary()> --> <com.jadn.cc.services.MetaFile: java.lang.String getTitle()>
<com.jadn.cc.ui.PodcastList$10: void onClick(android.view.View)> --> <com.jadn.cc.services.MetaFile: java.lang.String getTitle()>
<com.jadn.cc.ui.PodcastList: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.services.MetaFile: java.lang.String getTitle()>
<com.jadn.cc.services.ContentService: void startDownloadingNewPodCasts(int)> --> <com.jadn.cc.services.MetaFile: java.lang.String getTitle()>
<com.jadn.cc.services.ContentService: void tryToRestoreLocation()> --> <com.jadn.cc.services.MetaFile: java.lang.String getTitle()>
<com.jadn.cc.ui.PodcastList: void showPodcasts()> --> <com.jadn.cc.services.MetaFile: java.lang.String getTitle()>
<com.jadn.cc.services.ContentService: java.lang.CharSequence currentSummary()> --> <com.jadn.cc.services.MetaFile: java.lang.String getTitle()>
<com.jadn.cc.ui.PodcastList$11: boolean onLongClick(android.view.View)> --> <com.jadn.cc.services.MetaFile: java.lang.String getTitle()>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> --> <com.google.ads.internal.d: void <init>(com.google.ads.m,boolean)>
<com.google.ads.InterstitialAd: void <init>(android.app.Activity,java.lang.String,boolean)> --> <com.google.ads.internal.d: void <init>(com.google.ads.m,boolean)>
<com.google.ads.AdActivity: void onPause()> --> <com.google.ads.AdActivity: void d()>
<com.google.ads.AdActivity: void onDestroy()> --> <com.google.ads.AdActivity: void d()>
<com.jadn.cc.services.ContentService: void updateRemoteDisplay()> --> <com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat: com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat putString(int,java.lang.String)>
<com.jadn.cc.core.AudioFocusHelper: void onAudioFocusChange(int)> --> <com.jadn.cc.core.MusicFocusable: void onLostAudioFocus(boolean)>
<com.jadn.cc.ui.CarCast: void finish()> --> <com.jadn.cc.ui.CarCast: com.jadn.cc.core.CarCastApplication getCarCastApplication()>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection)> --> <com.google.ads.internal.f: void j(java.net.HttpURLConnection)>
<com.aocate.media.MediaPlayer$1: void onPitchAdjustmentAvailableChanged(com.aocate.media.MediaPlayer,boolean)> --> <com.aocate.media.MediaPlayer$OnPitchAdjustmentAvailableChangedListener: void onPitchAdjustmentAvailableChanged(com.aocate.media.MediaPlayer,boolean)>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayer$OnPitchAdjustmentAvailableChangedListener: void onPitchAdjustmentAvailableChanged(com.aocate.media.MediaPlayer,boolean)>
<com.aocate.media.ServiceBackedMediaPlayer$6: void onPitchAdjustmentAvailableChanged(boolean)> --> <com.aocate.media.MediaPlayer$OnPitchAdjustmentAvailableChangedListener: void onPitchAdjustmentAvailableChanged(com.aocate.media.MediaPlayer,boolean)>
<com.aocate.media.MediaPlayer: boolean isPlaying()> --> <com.aocate.media.MediaPlayerImpl: boolean isPlaying()>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: boolean isPlaying()>
<com.google.ads.m: boolean b()> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void t()> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.m)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void a(android.view.View)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: void start()> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.g$a: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.f: void b()> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.e: boolean a(com.google.ads.c,com.google.ads.internal.d)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void a()> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.g$b: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void b(com.google.ads.c)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void x()> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.e: boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void u()> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.ag: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void s()> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.m,com.google.ads.AdSize)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.g$a: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void B()> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.internal.d: void <init>(com.google.ads.m,boolean)> --> <com.google.ads.util.i$b: java.lang.Object a()>
<com.google.ads.util.c: java.lang.String b(byte[],int)> --> <com.google.ads.util.c: byte[] c(byte[],int)>
<com.google.ads.mediation.admob.AdMobAdapter$b: void onDismissScreen(com.google.ads.Ad)> --> <com.google.ads.mediation.MediationInterstitialListener: void onDismissScreen(com.google.ads.mediation.MediationInterstitialAdapter)>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: void onDismissScreen()> --> <com.google.ads.mediation.MediationInterstitialListener: void onDismissScreen(com.google.ads.mediation.MediationInterstitialAdapter)>
<com.aocate.media.AndroidMediaPlayer$2: void onCompletion(android.media.MediaPlayer)> --> <com.aocate.media.MediaPlayer$OnCompletionListener: void onCompletion(com.aocate.media.MediaPlayer)>
<com.aocate.media.ServiceBackedMediaPlayer$3: void onCompletion()> --> <com.aocate.media.MediaPlayer$OnCompletionListener: void onCompletion(com.aocate.media.MediaPlayer)>
<com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)> --> <com.aocate.media.MediaPlayer$OnCompletionListener: void onCompletion(com.aocate.media.MediaPlayer)>
<com.jadn.cc.services.ContentService: void toggleSubscription(com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: boolean toggleSubscription(com.jadn.cc.core.Subscription)>
<myjava.awt.datatransfer.DataFlavor: java.lang.String getSubType()> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getSubType()>
<myjava.awt.datatransfer.DataFlavor: void init(java.lang.String,java.lang.String,java.lang.ClassLoader)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getSubType()>
<com.google.ads.AdActivity: void d()> --> <com.google.ads.internal.AdVideoView: void e()>
<com.google.ads.c: com.google.ads.c a(java.lang.String)> --> <com.google.ads.c: com.google.ads.a a(org.json.JSONObject)>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.AdActivity: void newAdVideoView(int,int,int,int)>
<com.google.ads.c: com.google.ads.a a(org.json.JSONObject)> --> <org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>
<com.google.ads.c: com.google.ads.c a(java.lang.String)> --> <org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>
<com.jadn.cc.services.ContentService: void updateRemoteDisplay()> --> <com.jadn.cc.services.MetaFile: java.lang.String getDescription()>
<com.jadn.cc.ui.PodcastList: void showPodcasts()> --> <com.jadn.cc.services.MetaFile: java.lang.String getDescription()>
<com.google.ads.j: void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.h: void a(android.view.View)>
<com.google.ads.mediation.admob.AdMobAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.InterstitialAd: void loadAd(com.google.ads.AdRequest)>
<myjava.awt.datatransfer.DataFlavor: boolean isFlavorSerializedObjectType()> --> <myjava.awt.datatransfer.DataFlavor: boolean isRepresentationClassSerializable()>
<com.google.ads.l$a: void <init>()> --> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.MetaNet: java.lang.Boolean getPriority()>
<com.jadn.cc.ui.CarCast: void finish()> --> <com.jadn.cc.services.ContentService: boolean isIdle()>
<com.google.ads.mediation.MediationAdRequest: android.location.Location getLocation()> --> <com.google.ads.AdRequest: android.location.Location getLocation()>
<com.jadn.cc.services.ItunesSearchHelper: void start()> --> <org.json.JSONArray: java.lang.Object get(int)>
<com.jadn.cc.ui.Downloader: void <init>()> --> <com.jadn.cc.ui.Downloader$1: void <init>(com.jadn.cc.ui.Downloader)>
<com.google.ads.e$2: void start()> --> <com.google.ads.internal.d: void a(com.google.ads.f,boolean)>
<com.jadn.cc.ui.AudioRecorder$2: void onClick(android.view.View)> --> <com.jadn.cc.util.RecordingSet: void record()>
<com.jadn.cc.util.MailRecordings: void doIt(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.util.Mailer: void setSubject(java.lang.String)>
<com.google.ads.internal.a: void <clinit>()> --> <com.google.ads.internal.a$3: void <init>()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnInfoListenerCallback_0_8$Stub: com.aocate.presto.service.IOnInfoListenerCallback_0_8 asInterface(android.os.IBinder)>
<com.google.ads.i: void start()> --> <com.google.ads.i: void run()>
<com.jadn.cc.services.MetaFile: void setCurrentPos(int)> --> <com.jadn.cc.services.MetaFile: void setListenedTo()>
<com.jadn.cc.services.ContentService: void onCompletion(com.aocate.media.MediaPlayer)> --> <com.jadn.cc.services.MetaFile: void setListenedTo()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.internal.g: void l()>
<com.jadn.cc.services.AlarmService$1: void start()> --> <com.jadn.cc.services.AlarmService$1: void run()>
<myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestFlavorWCharset(java.util.List)> --> <myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestByCharset(java.util.List)>
<com.jadn.cc.util.Mailer: boolean send()> --> <javax.mail.internet.MimeMessage: void setSentDate(java.util.Date)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.awt.Image getImage(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getURL(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>
<org.apache.harmony.awt.datatransfer.DTK: org.apache.harmony.awt.datatransfer.DTK createDTK()> --> <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: java.io.Reader getReaderForText(myjava.awt.datatransfer.Transferable)> --> <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getFileList(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getPlainText(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getHTML(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getSerializedObject(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String)>
<com.jadn.cc.ui.Downloader$2: void start()> --> <com.jadn.cc.ui.Downloader$2: void run()>
<com.jadn.cc.util.Mailer: void addAttachment(java.lang.String)> --> <javax.mail.BodyPart: void setDataHandler(javax.activation.DataHandler)>
<com.jadn.cc.services.ContentService: void onDestroy()> --> <com.jadn.cc.services.ContentService: void giveUpAudioFocus()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void unregisterOnPitchAdjustmentAvailableChangedCallback(long,com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8)>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection,int)> --> <com.google.ads.util.AdUtil: java.lang.String a(java.lang.Readable)>
<com.google.ads.util.g$b: android.webkit.WebResourceResponse a(java.lang.String,android.content.Context)> --> <com.google.ads.util.AdUtil: java.lang.String a(java.lang.Readable)>
<com.jadn.cc.ui.BumpCast: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: void next()>
<com.google.ads.aa: void start()> --> <com.google.ads.util.b: void d(java.lang.String,java.lang.Throwable)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> --> <com.google.ads.util.b: void d(java.lang.String,java.lang.Throwable)>
<com.google.ads.internal.f: void start()> --> <com.google.ads.util.b: void d(java.lang.String,java.lang.Throwable)>
<com.google.ads.util.AdUtil: org.json.JSONArray a(java.util.Set)> --> <com.google.ads.util.b: void d(java.lang.String,java.lang.Throwable)>
<com.google.ads.internal.f: void h(java.net.HttpURLConnection)> --> <com.google.ads.util.b: void d(java.lang.String,java.lang.Throwable)>
<com.google.ads.internal.AdWebView: void stopLoading()> --> <com.google.ads.util.b: void d(java.lang.String,java.lang.Throwable)>
<com.google.ads.util.AdUtil: java.lang.String a(java.util.Map)> --> <com.google.ads.util.b: void d(java.lang.String,java.lang.Throwable)>
<com.google.ads.internal.f: void e(java.net.HttpURLConnection)> --> <com.google.ads.util.b: void d(java.lang.String,java.lang.Throwable)>
<com.google.ads.util.g$b: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)> --> <com.google.ads.util.b: void d(java.lang.String,java.lang.Throwable)>
<com.google.ads.internal.a: boolean a(android.net.Uri)> --> <com.google.ads.internal.a: boolean c(android.net.Uri)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> --> <com.google.ads.internal.a: boolean c(android.net.Uri)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.g: void a()>
<com.google.ads.internal.g: void <init>()> --> <com.google.ads.internal.g: void a()>
<com.google.ads.AdView: void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet)> --> <com.google.ads.AdView: void addView(android.view.View,int,int)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> --> <com.google.ads.AdView: void addView(android.view.View,int,int)>
<com.google.ads.internal.b: void a(java.lang.String)> --> <com.google.ads.util.b: void a(java.lang.String,java.lang.Throwable)>
<com.google.ads.internal.j: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> --> <com.google.ads.util.b: void a(java.lang.String,java.lang.Throwable)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> --> <com.google.ads.util.b: void a(java.lang.String,java.lang.Throwable)>
<com.google.ads.e$1: void run()> --> <com.google.ads.e: void a(com.google.ads.e,com.google.ads.c,com.google.ads.AdRequest)>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onLeaveApplication()> --> <com.google.ads.mediation.MediationBannerListener: void onLeaveApplication(com.google.ads.mediation.MediationBannerAdapter)>
<com.google.ads.mediation.admob.AdMobAdapter$a: void onLeaveApplication(com.google.ads.Ad)> --> <com.google.ads.mediation.MediationBannerListener: void onLeaveApplication(com.google.ads.mediation.MediationBannerAdapter)>
<com.jadn.cc.ui.Downloader: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.Downloader: android.content.Context getApplicationContext()>
<com.jadn.cc.trace.ExceptionHandler: void submitStackTraces()> --> <org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>
<com.aocate.media.ServiceBackedMediaPlayer$1$1: void <init>(com.aocate.media.ServiceBackedMediaPlayer$1)> --> <com.aocate.presto.service.IDeathCallback_0_8$Stub: void <init>()>
<org.apache.harmony.awt.datatransfer.DataSource: java.lang.String[] getNativeFormats()> --> <org.apache.harmony.awt.datatransfer.DataSource: java.util.List getNativeFormatsList()>
<org.apache.harmony.awt.datatransfer.DataSource: boolean isNativeFormatAvailable(java.lang.String)> --> <org.apache.harmony.awt.datatransfer.DataSource: java.util.List getNativeFormatsList()>
<com.jadn.cc.util.Mailer: void <init>()> --> <javax.activation.MailcapCommandMap: void addMailcap(java.lang.String)>
<com.google.ads.internal.c: void start()> --> <com.google.ads.internal.c: void b()>
<com.google.ads.ae: void <clinit>()> --> <com.google.ads.util.f: java.lang.Object b()>
<com.google.ads.z: void <clinit>()> --> <com.google.ads.util.f: java.lang.Object b()>
<com.google.ads.internal.i: void <clinit>()> --> <com.google.ads.util.f: java.lang.Object b()>
<com.google.ads.internal.AdVideoView: void <clinit>()> --> <com.google.ads.util.f: java.lang.Object b()>
<com.google.ads.AdActivity: void <clinit>()> --> <com.google.ads.util.f: java.lang.Object b()>
<com.google.ads.r: void <clinit>()> --> <com.google.ads.util.f: java.lang.Object b()>
<com.google.ads.o: void <clinit>()> --> <com.google.ads.util.f: java.lang.Object b()>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> --> <com.google.ads.AdView: void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet)>
<com.google.ads.AdView: boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)> --> <com.google.ads.AdView: void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet)>
<com.google.ads.AdView: boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)> --> <com.google.ads.AdView: void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet)>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.AdView: void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet)>
<com.google.ads.util.AdUtil$a: void <clinit>()> --> <com.google.ads.util.AdUtil$a: void <init>(java.lang.String,int)>
<com.jadn.cc.ui.Downloader$2: void start()> --> <com.jadn.cc.ui.Downloader: void fetchLog(java.lang.StringBuilder)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: long startSession(com.aocate.presto.service.IDeathCallback_0_8)>
<com.google.ads.e$6: void start()> --> <com.google.ads.internal.d: void u()>
<com.google.ads.AdActivity: void a(com.google.ads.internal.d)> --> <com.google.ads.internal.d: void u()>
<com.jadn.cc.ui.Downloader: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.Downloader$2: void <init>(com.jadn.cc.ui.Downloader)>
<com.google.ads.internal.f: void k(java.net.HttpURLConnection)> --> <com.google.ads.internal.c: void c(java.lang.String)>
<com.google.ads.AdActivity: void a(com.google.ads.internal.AdWebView,boolean,int,boolean)> --> <com.google.ads.internal.AdWebView: android.view.ViewParent getParent()>
<com.jadn.cc.ui.OpmlImport: void importOpml()> --> <org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>
<com.jadn.cc.services.ContentService$3: void run()> --> <com.jadn.cc.services.ContentService: android.os.PowerManager$WakeLock access$000(com.jadn.cc.services.ContentService)>
<com.jadn.cc.services.ContentService$2: void run()> --> <com.jadn.cc.services.ContentService: android.os.PowerManager$WakeLock access$000(com.jadn.cc.services.ContentService)>
<com.jadn.cc.services.ContentService$2: void start()> --> <com.jadn.cc.services.ContentService: android.os.PowerManager$WakeLock access$000(com.jadn.cc.services.ContentService)>
<com.jadn.cc.services.ContentService$3: void start()> --> <com.jadn.cc.services.ContentService: android.os.PowerManager$WakeLock access$000(com.jadn.cc.services.ContentService)>
<com.jadn.cc.services.ContentService: void onLostAudioFocus(boolean)> --> <com.jadn.cc.services.ContentService: boolean isPlaying()>
<com.jadn.cc.ui.PodcastList$5: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: boolean isPlaying()>
<com.jadn.cc.ui.CarCast: void updatePausePlay()> --> <com.jadn.cc.services.ContentService: boolean isPlaying()>
<com.jadn.cc.ui.PodcastList$10: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: boolean isPlaying()>
<com.jadn.cc.ui.PodcastList$4: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: boolean isPlaying()>
<com.jadn.cc.services.ContentService: boolean isIdle()> --> <com.jadn.cc.services.ContentService: boolean isPlaying()>
<com.jadn.cc.ui.PodcastList$1$1: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.services.ContentService: boolean isPlaying()>
<com.jadn.cc.services.ContentService: int onStartCommand(android.content.Intent,int,int)> --> <com.jadn.cc.services.ContentService: boolean isPlaying()>
<com.jadn.cc.ui.PodcastList$2: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: boolean isPlaying()>
<com.jadn.cc.ui.PodcastList$3: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: boolean isPlaying()>
<com.jadn.cc.services.ContentService: java.lang.String getLocationString()> --> <com.jadn.cc.services.ContentService: boolean isPlaying()>
<com.jadn.cc.ui.PodcastList$11$1: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.services.ContentService: boolean isPlaying()>
<com.jadn.cc.ui.CarCast$4: boolean onTouch(android.view.View,android.view.MotionEvent)> --> <com.jadn.cc.services.ContentService: boolean isPlaying()>
<com.jadn.cc.ui.PodcastList: void showPodcasts()> --> <com.jadn.cc.services.ContentService: boolean isPlaying()>
<com.google.ads.util.g$b: void <init>(com.google.ads.internal.d,java.util.Map,boolean,boolean)> --> <com.google.ads.internal.i: void <init>(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.internal.i: com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean)> --> <com.google.ads.internal.i: void <init>(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.internal.f: void g(java.net.HttpURLConnection)> --> <com.google.ads.internal.c: void a(java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataSnapshot: void <init>(org.apache.harmony.awt.datatransfer.DataProvider)> --> <org.apache.harmony.awt.datatransfer.DataProvider: java.lang.String[] getNativeFormats()>
<org.apache.harmony.awt.datatransfer.DataProxy: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> --> <org.apache.harmony.awt.datatransfer.DataProvider: java.lang.String[] getNativeFormats()>
<com.jadn.cc.ui.CarCast$1: void start()> --> <com.jadn.cc.ui.CarCast$1: void run()>
<com.jadn.cc.core.WifiConnectedReceiver: void onReceive(android.content.Context,android.content.Intent)> --> <com.jadn.cc.core.WifiConnectedReceiver$1: void <init>(com.jadn.cc.core.WifiConnectedReceiver)>
<com.aocate.media.ServiceBackedMediaPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: com.aocate.presto.service.IPlayMedia_0_8 asInterface(android.os.IBinder)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnCompletionCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer$3: void <init>(com.aocate.media.ServiceBackedMediaPlayer)>
<org.apache.harmony.awt.datatransfer.DataSnapshot: void <init>(org.apache.harmony.awt.datatransfer.DataProvider)> --> <org.apache.harmony.awt.datatransfer.DataProvider: org.apache.harmony.awt.datatransfer.RawBitmap getRawBitmap()>
<org.apache.harmony.awt.datatransfer.DataProxy: java.awt.Image getImage(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProvider: org.apache.harmony.awt.datatransfer.RawBitmap getRawBitmap()>
<com.jadn.cc.ui.OpmlImport: void importOpml()> --> <com.jadn.cc.services.ContentService: void deleteAllSubscriptions()>
<com.jadn.cc.ui.Subscriptions$1: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.services.ContentService: void deleteAllSubscriptions()>
<com.jadn.cc.ui.AudioRecorder$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> --> <com.jadn.cc.util.Recording: void play()>
<com.jadn.cc.ui.AudioRecorder: boolean onContextItemSelected(android.view.MenuItem)> --> <com.jadn.cc.util.Recording: void play()>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.AdView: boolean a(java.lang.String,android.util.AttributeSet)>
<com.google.ads.m: void <init>(com.google.ads.l,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h)> --> <com.google.ads.util.i$d: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.AdView: void <init>(android.content.Context,android.util.AttributeSet,int)> --> <com.google.ads.AdView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.jadn.cc.ui.SearchResults: void onActivityResult(int,int,android.content.Intent)> --> <com.jadn.cc.ui.SearchResults: void showResults()>
<com.jadn.cc.ui.SearchResults: void onContentService()> --> <com.jadn.cc.ui.SearchResults: void showResults()>
<com.google.ads.internal.c: void b()> --> <com.google.ads.internal.d: com.google.ads.d h()>
<com.google.ads.c: com.google.ads.c a(java.lang.String)> --> <org.json.JSONObject: boolean has(java.lang.String)>
<com.google.ads.InterstitialAd: boolean isReady()> --> <com.google.ads.internal.d: boolean q()>
<com.google.ads.internal.d: void y()> --> <com.google.ads.internal.d: boolean q()>
<com.google.ads.AdView: boolean isReady()> --> <com.google.ads.internal.d: boolean q()>
<com.aocate.media.MediaPlayer: void setPlaybackSpeed(float)> --> <com.aocate.media.MediaPlayerImpl: void setPlaybackSpeed(float)>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void setPlaybackSpeed(float)>
<com.google.ads.internal.c: void start()> --> <com.google.ads.internal.f: void a(boolean)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnPreparedCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.presto.service.IPlayMedia_0_8: void registerOnPreparedCallback(long,com.aocate.presto.service.IOnPreparedListenerCallback_0_8)>
<com.jadn.cc.services.RemoteControlClientCompat: void <clinit>()> --> <com.jadn.cc.services.RemoteControlClientCompat: java.lang.Class getActualRemoteControlClientClass(java.lang.ClassLoader)>
<com.jadn.cc.services.RemoteControlHelper: void <clinit>()> --> <com.jadn.cc.services.RemoteControlClientCompat: java.lang.Class getActualRemoteControlClientClass(java.lang.ClassLoader)>
<com.google.ads.mediation.admob.AdMobAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.admob.AdMobAdapter$b: void <init>(com.google.ads.mediation.admob.AdMobAdapter,com.google.ads.mediation.admob.AdMobAdapter$1)>
<com.jadn.cc.ui.CarCast: void finish()> --> <com.jadn.cc.ui.BaseActivity: void finish()>
<com.google.ads.internal.d: void u()> --> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.d: void t()> --> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.d: void s()> --> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.util.g$a: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)> --> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.util.g$a: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)> --> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.d: void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean)> --> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.d: void b(com.google.ads.c)> --> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.internal.d: void B()> --> <com.google.ads.util.i$c: java.lang.Object a()>
<com.google.ads.util.g$b: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)> --> <com.google.ads.util.i$c: java.lang.Object a()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void start(long)>
<com.jadn.cc.services.FileSubscriptionHelper: com.jadn.cc.core.Subscription convertProperty(java.lang.String,java.lang.String)> --> <com.jadn.cc.core.Subscription: void <init>(java.lang.String,java.lang.String,int,com.jadn.cc.core.OrderingPreference)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void registerOnErrorCallback(long,com.aocate.presto.service.IOnErrorListenerCallback_0_8)>
<myjava.awt.datatransfer.MimeTypeProcessor$MimeType: boolean equals(myjava.awt.datatransfer.MimeTypeProcessor$MimeType)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getFullType()>
<myjava.awt.datatransfer.DataFlavor: java.util.List fetchTextFlavors(java.util.List,java.lang.String)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getFullType()>
<myjava.awt.datatransfer.DataFlavor: boolean isCharsetRequired()> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getFullType()>
<myjava.awt.datatransfer.DataFlavor: java.lang.String getKeyInfo()> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getFullType()>
<myjava.awt.datatransfer.DataFlavor: boolean isCharsetRedundant()> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getFullType()>
<myjava.awt.datatransfer.MimeTypeProcessor: java.lang.String assemble(myjava.awt.datatransfer.MimeTypeProcessor$MimeType)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getFullType()>
<com.google.ads.util.e: int a(android.content.Context,android.util.DisplayMetrics)> --> <com.google.ads.util.e: int a(android.content.Context,float,int)>
<com.google.ads.util.e: int b(android.content.Context,android.util.DisplayMetrics)> --> <com.google.ads.util.e: int a(android.content.Context,float,int)>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.AdVideoView: void b()>
<com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8$Stub: void onPitchAdjustmentAvailableChanged(boolean)>
<com.jadn.cc.ui.SearchResults: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.SearchResults: void registerForContextMenu(android.view.View)>
<com.aocate.presto.service.IOnPreparedListenerCallback_0_8$Stub: com.aocate.presto.service.IOnPreparedListenerCallback_0_8 asInterface(android.os.IBinder)> --> <com.aocate.presto.service.IOnPreparedListenerCallback_0_8$Stub$Proxy: void <init>(android.os.IBinder)>
<com.google.ads.i: void a(com.google.ads.mediation.MediationAdapter)> --> <com.google.ads.mediation.MediationAdRequest: void <init>(com.google.ads.AdRequest,android.content.Context,boolean)>
<com.jadn.cc.ui.SearchResults: void showResults()> --> <com.jadn.cc.ui.SearchResults: java.util.List getResults()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void pause(long)>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.AdView: boolean isInEditMode()>
<com.google.ads.ag: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.af: boolean a(android.content.Intent,android.content.Context)>
<com.google.ads.af: boolean a(android.content.Context)> --> <com.google.ads.af: boolean a(android.content.Intent,android.content.Context)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void unregisterOnErrorCallback(long,com.aocate.presto.service.IOnErrorListenerCallback_0_8)> --> <com.aocate.presto.service.IOnErrorListenerCallback_0_8: android.os.IBinder asBinder()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void registerOnErrorCallback(long,com.aocate.presto.service.IOnErrorListenerCallback_0_8)> --> <com.aocate.presto.service.IOnErrorListenerCallback_0_8: android.os.IBinder asBinder()>
<com.jadn.cc.services.ContentService: void saveState()> --> <com.jadn.cc.services.ContentService: java.lang.String currentTitle()>
<com.jadn.cc.services.ContentService: com.jadn.cc.core.Location getLocation()> --> <com.jadn.cc.services.ContentService: java.lang.String currentTitle()>
<com.jadn.cc.ui.PodcastList$10: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: java.lang.String currentTitle()>
<com.jadn.cc.ui.CarCast: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.services.ContentService: java.lang.String currentTitle()>
<com.jadn.cc.ui.PodcastList: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.services.ContentService: java.lang.String currentTitle()>
<com.jadn.cc.services.ContentService: void startDownloadingNewPodCasts(int)> --> <com.jadn.cc.services.ContentService: java.lang.String currentTitle()>
<com.jadn.cc.ui.PodcastList: void showPodcasts()> --> <com.jadn.cc.services.ContentService: java.lang.String currentTitle()>
<com.jadn.cc.ui.CarCast: void updateUI()> --> <com.jadn.cc.services.ContentService: java.lang.String currentTitle()>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.services.ContentService: android.content.res.Resources getResources()>
<com.jadn.cc.services.ContentService: boolean editSubscription(com.jadn.cc.core.Subscription,com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: boolean editSubscription(com.jadn.cc.core.Subscription,com.jadn.cc.core.Subscription)>
<org.apache.harmony.awt.datatransfer.DataSource: java.lang.String getText(boolean)> --> <org.apache.harmony.awt.datatransfer.DataSource: boolean isHtmlFlavor(java.awt.datatransfer.DataFlavor)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.m,com.google.ads.AdSize)> --> <com.google.ads.util.h$a: void <init>(com.google.ads.m)>
<com.jadn.cc.services.ContentService: boolean pauseOrPlay()> --> <com.jadn.cc.services.RemoteControlClientCompat: void setPlaybackState(int)>
<com.jadn.cc.services.ContentService: void pauseNow()> --> <com.jadn.cc.services.RemoteControlClientCompat: void setPlaybackState(int)>
<com.jadn.cc.services.ContentService: void play()> --> <com.jadn.cc.services.RemoteControlClientCompat: void setPlaybackState(int)>
<com.jadn.cc.services.ContentService: void play(int)> --> <com.jadn.cc.services.RemoteControlClientCompat: void setPlaybackState(int)>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.services.RemoteControlClientCompat: void setPlaybackState(int)>
<com.google.ads.AdActivity: void d()> --> <com.google.ads.internal.a: void b(android.webkit.WebView)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnPreparedListenerCallback_0_8$Stub: com.aocate.presto.service.IOnPreparedListenerCallback_0_8 asInterface(android.os.IBinder)>
<com.jadn.cc.services.FileSubscriptionHelper: java.util.List getSubscriptions()> --> <com.jadn.cc.services.FileSubscriptionHelper: java.util.List convertProperties(java.util.Properties)>
<com.jadn.cc.services.ContentService: void play()> --> <com.aocate.media.MediaPlayer: void start()>
<com.jadn.cc.services.ContentService: boolean pauseOrPlay()> --> <com.aocate.media.MediaPlayer: void start()>
<com.jadn.cc.services.ContentService: java.lang.String getLocationString()> --> <com.jadn.cc.services.ContentService: java.lang.String getTimeString(int)>
<com.jadn.cc.ui.PodcastList: void showPodcasts()> --> <com.jadn.cc.services.ContentService: java.lang.String getTimeString(int)>
<com.jadn.cc.services.ContentService: java.lang.String getDurationString()> --> <com.jadn.cc.services.ContentService: java.lang.String getTimeString(int)>
<com.google.ads.internal.d: void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)> --> <com.google.ads.b: com.google.ads.b a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.b: com.google.ads.b a()>
<com.jadn.cc.trace.ExceptionHandler: void submitStackTraces()> --> <org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>
<com.jadn.cc.services.ContentService: int currentDuration()> --> <com.jadn.cc.services.MetaFile: int getDuration()>
<com.jadn.cc.services.MetaFile: void setCurrentPos(int)> --> <com.jadn.cc.services.MetaFile: int getDuration()>
<com.jadn.cc.services.ContentService: void updateRemoteDisplay()> --> <com.jadn.cc.services.MetaFile: int getDuration()>
<com.jadn.cc.services.ContentService: void startDownloadingNewPodCasts(int)> --> <com.jadn.cc.services.MetaFile: int getDuration()>
<com.jadn.cc.ui.PodcastList: void showPodcasts()> --> <com.jadn.cc.services.MetaFile: int getDuration()>
<com.jadn.cc.ui.PodcastList: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.services.MetaFile: int getDuration()>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.MediationAdRequest: java.util.Date getBirthday()>
<org.apache.harmony.awt.datatransfer.DataSource: org.apache.harmony.awt.datatransfer.RawBitmap getImageBitmap(java.awt.Image)> --> <org.apache.harmony.awt.datatransfer.DataSource: org.apache.harmony.awt.datatransfer.RawBitmap getImageBitmap32(java.awt.image.BufferedImage)>
<com.jadn.cc.ui.PodcastList: void <init>()> --> <com.jadn.cc.ui.PodcastList$11: void <init>(com.jadn.cc.ui.PodcastList)>
<com.jadn.cc.ui.OpmlImport: void importOpml()> --> <com.jadn.cc.ui.OpmlImport: android.content.Context getApplicationContext()>
<com.google.ads.AdSize: void <init>(int,int)> --> <com.google.ads.AdSize: boolean a()>
<com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)> --> <com.google.ads.AdSize: boolean a()>
<com.jadn.cc.ui.AudioRecorder: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.AudioRecorder$3: void <init>(com.jadn.cc.ui.AudioRecorder)>
<com.jadn.cc.services.ContentService: int currentDuration()> --> <com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()>
<com.jadn.cc.services.ContentService: java.lang.String getCurrentSubscriptionName()> --> <com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()>
<com.jadn.cc.services.ContentService: java.io.File currentFile()> --> <com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()>
<com.jadn.cc.services.ContentService: java.lang.String getPodcastEmailSummary()> --> <com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()>
<com.jadn.cc.services.ContentService: void tryToRestoreLocation()> --> <com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()>
<com.jadn.cc.services.ContentService: void updateRemoteDisplay()> --> <com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()>
<com.jadn.cc.services.ContentService: java.lang.String currentTitle()> --> <com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()>
<com.jadn.cc.services.ContentService: void setCurrentPaused(int)> --> <com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()>
<com.jadn.cc.services.ContentService: java.lang.String getLocationString()> --> <com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()>
<com.jadn.cc.services.ContentService: void next()> --> <com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()>
<com.jadn.cc.services.ContentService: void pauseNow()> --> <com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()>
<com.jadn.cc.services.ContentService: java.lang.CharSequence currentSummary()> --> <com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()>
<com.jadn.cc.services.ContentService: void onCompletion(com.aocate.media.MediaPlayer)> --> <com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()>
<com.aocate.presto.service.IOnInfoListenerCallback_0_8$Stub: void <init>()> --> <com.aocate.presto.service.IOnInfoListenerCallback_0_8$Stub: void attachInterface(android.os.IInterface,java.lang.String)>
<com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)> --> <com.google.ads.AdSize: int b(android.content.Context)>
<com.jadn.cc.services.DownloadHistory: void <init>(android.content.Context)> --> <com.jadn.cc.services.HistoryEntry: void <init>(java.lang.String,java.lang.String)>
<com.jadn.cc.services.DownloadHistory: void add(com.jadn.cc.services.MetaNet)> --> <com.jadn.cc.services.HistoryEntry: void <init>(java.lang.String,java.lang.String)>
<com.aocate.presto.service.IDeathCallback_0_8$Stub: void <init>()> --> <com.aocate.presto.service.IDeathCallback_0_8$Stub: void attachInterface(android.os.IInterface,java.lang.String)>
<com.google.ads.m: boolean b()> --> <com.google.ads.internal.h: boolean a()>
<com.google.ads.i: void a(com.google.ads.mediation.MediationAdapter)> --> <com.google.ads.internal.h: boolean a()>
<com.google.ads.h: void f()> --> <com.google.ads.internal.h: boolean a()>
<com.google.ads.e: boolean a(com.google.ads.c,com.google.ads.internal.d)> --> <com.google.ads.internal.h: boolean a()>
<com.jadn.cc.core.Util: void <clinit>()> --> <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>
<com.jadn.cc.services.ContentService: void <init>()> --> <com.jadn.cc.services.ContentService$LocalBinder: void <init>(com.jadn.cc.services.ContentService)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getHTML(java.awt.datatransfer.DataFlavor)>
<com.jadn.cc.services.ContentService: void deleteUpTo(int)> --> <com.jadn.cc.services.ContentService: android.content.Context getApplicationContext()>
<com.jadn.cc.services.ContentService: void directorySettingsChanged()> --> <com.jadn.cc.services.ContentService: android.content.Context getApplicationContext()>
<com.jadn.cc.services.ContentService: int onStartCommand(android.content.Intent,int,int)> --> <com.jadn.cc.services.ContentService: android.content.Context getApplicationContext()>
<com.jadn.cc.services.ContentService$2: void start()> --> <com.jadn.cc.services.ContentService: android.content.Context getApplicationContext()>
<com.jadn.cc.services.ContentService: void newContentAdded()> --> <com.jadn.cc.services.ContentService: android.content.Context getApplicationContext()>
<com.jadn.cc.services.ContentService: void deleteCurrentPodcast()> --> <com.jadn.cc.services.ContentService: android.content.Context getApplicationContext()>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.services.ContentService: android.content.Context getApplicationContext()>
<com.jadn.cc.services.ContentService: void doDownloadCompletedNotification(int)> --> <com.jadn.cc.services.ContentService: android.content.Context getApplicationContext()>
<com.jadn.cc.services.ContentService: void onCompletion(com.aocate.media.MediaPlayer)> --> <com.jadn.cc.services.ContentService: android.content.Context getApplicationContext()>
<com.google.ads.mediation.customevent.CustomEventAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.EmptyNetworkExtras)> --> <com.google.ads.mediation.customevent.CustomEventAdapter: java.lang.Object a(java.lang.String,java.lang.Class,java.lang.String)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.EmptyNetworkExtras)> --> <com.google.ads.mediation.customevent.CustomEventAdapter: java.lang.Object a(java.lang.String,java.lang.Class,java.lang.String)>
<com.google.ads.c: com.google.ads.a a(org.json.JSONObject)> --> <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.google.ads.c: com.google.ads.c a(java.lang.String)> --> <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> --> <com.google.ads.m: com.google.ads.m a(com.google.ads.Ad,java.lang.String,android.app.Activity,android.view.ViewGroup,com.google.ads.AdSize)>
<com.google.ads.InterstitialAd: void <init>(android.app.Activity,java.lang.String,boolean)> --> <com.google.ads.m: com.google.ads.m a(com.google.ads.Ad,java.lang.String,android.app.Activity,android.view.ViewGroup,com.google.ads.AdSize)>
<com.jadn.cc.services.EnclosureHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> --> <com.jadn.cc.services.DownloadHistory: boolean contains(com.jadn.cc.services.MetaNet)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.DownloadHistory: boolean contains(com.jadn.cc.services.MetaNet)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.c$d: void <init>(com.google.ads.internal.c,java.lang.String)>
<com.jadn.cc.ui.PodcastList: java.util.List getBarButtons()> --> <com.jadn.cc.ui.PodcastList: android.view.View findViewById(int)>
<com.jadn.cc.ui.PodcastList: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.PodcastList: android.view.View findViewById(int)>
<com.jadn.cc.ui.PodcastList: void showPodcasts()> --> <com.jadn.cc.ui.PodcastList: android.view.View findViewById(int)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.MetaNet: int getSize()>
<com.google.ads.internal.a$3: void <init>()> --> <com.google.ads.internal.a$3: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.ads.ae: void a(android.app.Activity,android.webkit.WebView,java.lang.String)> --> <com.google.ads.ae$b: void <init>(android.app.Activity,android.webkit.WebView,java.lang.String)>
<com.jadn.cc.services.ContentService: java.lang.String currentTitle()> --> <com.jadn.cc.services.DownloadHelper: java.lang.String getStatus()>
<com.google.ads.AdView: java.lang.String a(java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean)> --> <com.google.ads.internal.b: void <init>(java.lang.String,boolean,java.lang.Throwable)>
<com.jadn.cc.services.ContentService$3$1: void start()> --> <com.jadn.cc.services.ContentService$3$1: void run()>
<com.jadn.cc.services.ContentService: void bumpForwardSeconds(int)> --> <com.jadn.cc.services.ContentService: void saveState()>
<com.jadn.cc.services.ContentService: void pauseNow()> --> <com.jadn.cc.services.ContentService: void saveState()>
<com.jadn.cc.services.ContentService: void play()> --> <com.jadn.cc.services.ContentService: void saveState()>
<com.jadn.cc.services.ContentService: void next(boolean)> --> <com.jadn.cc.services.ContentService: void saveState()>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.m,com.google.ads.AdSize)> --> <com.google.ads.util.g: void a(android.webkit.WebSettings,com.google.ads.m)>
<com.google.ads.util.AdUtil: java.lang.String c(java.lang.String)> --> <javax.crypto.Cipher: byte[] doFinal(byte[])>
<com.google.ads.mediation.admob.AdMobAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.InterstitialAd: void setAdListener(com.google.ads.AdListener)>
<com.jadn.cc.services.FileSubscriptionHelper: boolean addSubscription(com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: boolean containsSubscriptionURL(java.util.List,java.lang.String)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.EmptyNetworkExtras)> --> <com.google.ads.mediation.customevent.CustomEventBanner: void requestBannerAd(com.google.ads.mediation.customevent.CustomEventBannerListener,android.app.Activity,java.lang.String,java.lang.String,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest)>
<com.jadn.cc.ui.SubscriptionEdit: void testUrl()> --> <com.jadn.cc.services.EnclosureHandler: void <init>(com.jadn.cc.services.DownloadHistory)>
<myjava.awt.datatransfer.MimeTypeProcessor: void retrieveParams(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: void access$4(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.util.Hashtable)>
<com.jadn.cc.services.DownloadHistory: void add(com.jadn.cc.services.MetaNet)> --> <com.jadn.cc.services.MetaNet: java.lang.String getUrl()>
<com.jadn.cc.services.EnclosureHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> --> <com.jadn.cc.services.MetaNet: java.lang.String getUrl()>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.MetaNet: java.lang.String getUrl()>
<com.jadn.cc.services.DownloadHistory: boolean contains(com.jadn.cc.services.MetaNet)> --> <com.jadn.cc.services.MetaNet: java.lang.String getUrl()>
<com.google.ads.internal.f: void d(java.net.HttpURLConnection)> --> <com.google.ads.internal.c: void a(boolean)>
<com.jadn.cc.ui.OpmlImport: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.OpmlImport: android.content.Intent getIntent()>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.services.ContentService$1: void <init>(com.jadn.cc.services.ContentService)>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.c: int b()>
<com.google.ads.x: void <init>()> --> <com.google.ads.x: void <init>(com.google.ads.AdActivity$StaticMethodWrapper)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.g: boolean m()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void unregisterOnInfoCallback(long,com.aocate.presto.service.IOnInfoListenerCallback_0_8)>
<com.google.ads.internal.j$a: void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture)> --> <com.google.ads.internal.j$a$2: void <init>(com.google.ads.internal.j$a,java.lang.String)>
<com.jadn.cc.services.ContentService: int currentPostion()> --> <com.jadn.cc.services.MetaFile: int getCurrentPos()>
<com.jadn.cc.services.ContentService: void tryToRestoreLocation()> --> <com.jadn.cc.services.MetaFile: int getCurrentPos()>
<com.jadn.cc.ui.PodcastList: void showPodcasts()> --> <com.jadn.cc.services.MetaFile: int getCurrentPos()>
<com.jadn.cc.services.ContentService: boolean fullReset()> --> <com.jadn.cc.services.MetaFile: int getCurrentPos()>
<com.jadn.cc.services.ContentService: java.lang.String getLocationString()> --> <com.jadn.cc.services.MetaFile: int getCurrentPos()>
<com.jadn.cc.ui.AudioRecorder$4: void onClick(android.view.View)> --> <com.jadn.cc.ui.AudioRecorder: void access$000(com.jadn.cc.ui.AudioRecorder)>
<com.jadn.cc.ui.AudioRecorder$1: void start()> --> <com.jadn.cc.ui.AudioRecorder: void access$000(com.jadn.cc.ui.AudioRecorder)>
<com.google.ads.internal.a: void a(android.webkit.WebView)> --> <com.google.ads.internal.a: void a(android.webkit.WebView,java.lang.String,java.lang.String)>
<com.google.ads.internal.AdVideoView: void b()> --> <com.google.ads.internal.a: void a(android.webkit.WebView,java.lang.String,java.lang.String)>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.a: void a(android.webkit.WebView,java.lang.String,java.lang.String)>
<com.google.ads.internal.a: void a(android.webkit.WebView,java.util.Map)> --> <com.google.ads.internal.a: void a(android.webkit.WebView,java.lang.String,java.lang.String)>
<com.google.ads.internal.AdVideoView: void onCompletion(android.media.MediaPlayer)> --> <com.google.ads.internal.a: void a(android.webkit.WebView,java.lang.String,java.lang.String)>
<com.google.ads.internal.AdVideoView: void onPrepared(android.media.MediaPlayer)> --> <com.google.ads.internal.a: void a(android.webkit.WebView,java.lang.String,java.lang.String)>
<com.google.ads.internal.a: void b(android.webkit.WebView)> --> <com.google.ads.internal.a: void a(android.webkit.WebView,java.lang.String,java.lang.String)>
<com.google.ads.internal.AdVideoView: void f()> --> <com.google.ads.internal.a: void a(android.webkit.WebView,java.lang.String,java.lang.String)>
<com.google.ads.internal.AdVideoView: boolean onError(android.media.MediaPlayer,int,int)> --> <com.google.ads.internal.a: void a(android.webkit.WebView,java.lang.String,java.lang.String)>
<com.aocate.media.MediaPlayer$4$2: boolean handleMessage(android.os.Message)> --> <com.aocate.media.MediaPlayer: com.aocate.media.AndroidMediaPlayer access$002(com.aocate.media.MediaPlayer,com.aocate.media.AndroidMediaPlayer)>
<com.jadn.cc.ui.Splash: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Splash: void setContentView(int)>
<com.jadn.cc.services.ContentService: void enableNotification()> --> <com.jadn.cc.services.ContentService: void startForegroundCompat(int,android.app.Notification)>
<com.jadn.cc.services.ContentService: java.lang.String encodedDownloadStatus()> --> <com.jadn.cc.services.DownloadHelper: java.lang.String getEncodedStatus()>
<com.jadn.cc.ui.AudioRecorder: void <init>()> --> <com.jadn.cc.ui.AudioRecorder$1: void <init>(com.jadn.cc.ui.AudioRecorder)>
<com.google.ads.AdActivity: android.view.View a(int)> --> <com.google.ads.AdActivity: android.content.res.Resources getResources()>
<com.jadn.cc.ui.AudioRecorder: void showRecordings()> --> <com.jadn.cc.util.Recording: java.lang.String getTimeString()>
<com.jadn.cc.util.MailRecordings: void doIt(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.util.Recording: java.lang.String getTimeString()>
<org.apache.harmony.awt.internal.nls.Messages: void <clinit>()> --> <org.apache.harmony.awt.internal.nls.Messages: java.util.ResourceBundle setLocale(java.util.Locale,java.lang.String)>
<com.google.ads.internal.d: void u()> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.internal.d: void t()> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.internal.d: void s()> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.internal.c: void start()> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.u: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.e: boolean a(com.google.ads.h,java.lang.String)> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.util.g$a: boolean onConsoleMessage(android.webkit.ConsoleMessage)> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.e: void a(com.google.ads.h,android.view.View)> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection,int)> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.w: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.e: void a(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.internal.d: void x()> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.internal.c: void a(java.lang.String,com.google.ads.c,com.google.ads.d)> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.internal.d: void B()> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.internal.d: void y()> --> <com.google.ads.util.b: void c(java.lang.String)>
<com.google.ads.internal.c$e: void start()> --> <com.google.ads.internal.d: void B()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void release(long)>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.f: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> --> <com.google.ads.internal.d: com.google.ads.internal.g l()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.internal.d: com.google.ads.internal.g l()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.d: com.google.ads.internal.g l()>
<com.google.ads.p: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.d: com.google.ads.internal.g l()>
<com.google.ads.internal.d: void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean)> --> <com.google.ads.internal.d: void a(android.view.View)>
<com.google.ads.internal.d: void B()> --> <com.google.ads.internal.d: void a(android.view.View)>
<com.google.ads.internal.b: void a(java.lang.String)> --> <com.google.ads.internal.b: java.lang.String c(java.lang.String)>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> --> <com.google.ads.internal.b: java.lang.String c(java.lang.String)>
<com.google.ads.internal.b: void b(java.lang.String)> --> <com.google.ads.internal.b: java.lang.String c(java.lang.String)>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.internal.b: java.lang.String c(java.lang.String)>
<com.jadn.cc.ui.OpmlImport: void importOpml()> --> <com.jadn.cc.services.ContentService: boolean addSubscription(com.jadn.cc.core.Subscription)>
<com.jadn.cc.ui.SearchResults: void add(int)> --> <com.jadn.cc.services.ContentService: boolean addSubscription(com.jadn.cc.core.Subscription)>
<com.jadn.cc.ui.SubscriptionEdit$1: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: boolean addSubscription(com.jadn.cc.core.Subscription)>
<com.jadn.cc.ui.Search: void <init>()> --> <com.jadn.cc.ui.Search$1: void <init>(com.jadn.cc.ui.Search)>
<com.jadn.cc.services.ContentService$2: void start()> --> <com.jadn.cc.services.ContentService$2: void run()>
<com.google.ads.mediation.admob.AdMobAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.AdSize: boolean isFullWidth()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.AdSize: boolean isFullWidth()>
<com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)> --> <com.google.ads.AdSize: boolean isFullWidth()>
<com.jadn.cc.ui.Subscriptions: void <init>()> --> <com.jadn.cc.ui.BaseActivity: void <init>()>
<com.jadn.cc.ui.Stats: void <init>()> --> <com.jadn.cc.ui.BaseActivity: void <init>()>
<com.jadn.cc.ui.AudioRecorder: void <init>()> --> <com.jadn.cc.ui.BaseActivity: void <init>()>
<com.jadn.cc.ui.Downloader: void <init>()> --> <com.jadn.cc.ui.BaseActivity: void <init>()>
<com.jadn.cc.ui.OpmlImport: void <init>()> --> <com.jadn.cc.ui.BaseActivity: void <init>()>
<com.jadn.cc.ui.SearchResults: void <init>()> --> <com.jadn.cc.ui.BaseActivity: void <init>()>
<com.jadn.cc.ui.DownloadProgress: void <init>()> --> <com.jadn.cc.ui.BaseActivity: void <init>()>
<com.jadn.cc.ui.PodcastList: void <init>()> --> <com.jadn.cc.ui.BaseActivity: void <init>()>
<com.jadn.cc.ui.SubscriptionEdit: void <init>()> --> <com.jadn.cc.ui.BaseActivity: void <init>()>
<com.jadn.cc.ui.Search: void <init>()> --> <com.jadn.cc.ui.BaseActivity: void <init>()>
<com.jadn.cc.ui.CarCast: void <init>()> --> <com.jadn.cc.ui.BaseActivity: void <init>()>
<com.jadn.cc.ui.OpmlLocator: void <init>()> --> <com.jadn.cc.ui.BaseActivity: void <init>()>
<com.google.ads.e: boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long)> --> <com.google.ads.h: void b()>
<com.google.ads.e: void d(com.google.ads.h)> --> <com.google.ads.h: void b()>
<com.google.ads.e: boolean e(com.google.ads.h)> --> <com.google.ads.h: void b()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void registerOnPreparedCallback(long,com.aocate.presto.service.IOnPreparedListenerCallback_0_8)>
<com.aocate.presto.service.IOnErrorListenerCallback_0_8$Stub: com.aocate.presto.service.IOnErrorListenerCallback_0_8 asInterface(android.os.IBinder)> --> <com.aocate.presto.service.IOnErrorListenerCallback_0_8$Stub$Proxy: void <init>(android.os.IBinder)>
<com.jadn.cc.ui.Subscriptions: boolean onContextItemSelected(android.view.MenuItem)> --> <com.jadn.cc.ui.Subscriptions: void reloadSubscriptions()>
<com.jadn.cc.ui.Subscriptions: void onContentService()> --> <com.jadn.cc.ui.Subscriptions: void reloadSubscriptions()>
<com.jadn.cc.ui.Subscriptions$1: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.ui.Subscriptions: void reloadSubscriptions()>
<com.jadn.cc.ui.Subscriptions$2: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.ui.Subscriptions: void reloadSubscriptions()>
<com.jadn.cc.ui.Subscriptions: void onActivityResult(int,int,android.content.Intent)> --> <com.jadn.cc.ui.Subscriptions: void reloadSubscriptions()>
<com.jadn.cc.services.EnclosureHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> --> <com.jadn.cc.services.EnclosureHandler: boolean isAudio(java.lang.String,java.lang.String)>
<com.jadn.cc.util.Mailer: boolean send()> --> <com.jadn.cc.util.Mailer: java.util.Properties _setProperties()>
<com.jadn.cc.ui.OpmlLocator: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.OpmlLocator: void setContentView(int)>
<com.jadn.cc.services.MetaFile: void <init>(java.io.File)> --> <com.jadn.cc.services.MetaFile: java.io.File getMetaPropertiesFile()>
<com.jadn.cc.services.MetaFile: void delete()> --> <com.jadn.cc.services.MetaFile: java.io.File getMetaPropertiesFile()>
<com.jadn.cc.services.MetaFile: void save()> --> <com.jadn.cc.services.MetaFile: java.io.File getMetaPropertiesFile()>
<com.jadn.cc.trace.ExceptionHandler: java.lang.String[] searchForStackTraces()> --> <com.jadn.cc.trace.ExceptionHandler$2: void <init>()>
<com.google.ads.q: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.AdWebView: void a()>
<com.google.ads.util.g$a: void onCloseWindow(android.webkit.WebView)> --> <com.google.ads.internal.AdWebView: void a()>
<com.aocate.media.ServiceBackedMediaPlayer: void access$400(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void setOnInfoCallback(com.aocate.presto.service.IPlayMedia_0_8)>
<com.google.ads.i: void start()> --> <com.google.ads.i: void a(java.lang.String,java.lang.Throwable)>
<com.jadn.cc.ui.PodcastList: void showPodcasts()> --> <com.jadn.cc.ui.PodcastList$8: void <init>(com.jadn.cc.ui.PodcastList,android.content.Context,java.util.List,int,java.lang.String[],int[])>
<com.google.ads.c: com.google.ads.a a(org.json.JSONObject)> --> <org.json.JSONObject: java.util.Iterator keys()>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.AdActivity: void b(java.util.HashMap,com.google.ads.internal.d)>
<com.jadn.cc.ui.Settings: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Settings: void addPreferencesFromResource(int)>
<com.google.ads.internal.b: java.lang.String c(java.lang.String)> --> <com.google.ads.internal.b: java.lang.String getMessage()>
<com.jadn.cc.services.ContentService: int currentDuration()> --> <com.jadn.cc.services.MetaFile: void computeDuration()>
<com.jadn.cc.services.MetaFile: void <init>(java.io.File)> --> <com.jadn.cc.services.MetaFile: void computeDuration()>
<com.jadn.cc.services.MetaFile: void <init>(com.jadn.cc.services.MetaNet,java.io.File)> --> <com.jadn.cc.services.MetaFile: void computeDuration()>
<com.google.ads.internal.c: void start()> --> <com.google.ads.internal.c: void f()>
<com.jadn.cc.services.ContentService: boolean fullReset()> --> <com.jadn.cc.services.ContentService: void applyVariableSpeedProperties()>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.e: java.util.HashMap c()>
<com.aocate.media.ServiceBackedMediaPlayer: boolean isPlaying()> --> <com.aocate.presto.service.IPlayMedia_0_8: boolean isPlaying(long)>
<org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String,char)> --> <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object[])>
<org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String,int)> --> <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object[])>
<org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)> --> <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object[])>
<org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object,java.lang.Object)> --> <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object[])>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> --> <com.google.ads.internal.c: void a(com.google.ads.AdRequest)>
<com.jadn.cc.services.ContentService$PauseReason: void <clinit>()> --> <com.jadn.cc.services.ContentService$PauseReason: void <init>(java.lang.String,int)>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void setDataSource(android.content.Context,android.net.Uri)>
<com.aocate.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)> --> <com.aocate.media.MediaPlayerImpl: void setDataSource(android.content.Context,android.net.Uri)>
<com.google.ads.InterstitialAd: void show()> --> <com.google.ads.internal.d: void y()>
<org.apache.harmony.awt.datatransfer.DTK: org.apache.harmony.awt.datatransfer.DTK getDTK()> --> <org.apache.harmony.awt.ContextStorage: void setDTK(org.apache.harmony.awt.datatransfer.DTK)>
<com.jadn.cc.ui.CarCast: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Bumper: void <init>(com.jadn.cc.ui.CarCast,int)>
<com.google.ads.util.c$b: void <init>(int,byte[])> --> <com.google.ads.util.c$a: void <init>()>
<com.google.ads.util.c$c: void <init>(int,byte[])> --> <com.google.ads.util.c$a: void <init>()>
<com.jadn.cc.util.Mailer: void <init>()> --> <javax.mail.Authenticator: void <init>()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnCompletionListenerCallback_0_8$Stub: com.aocate.presto.service.IOnCompletionListenerCallback_0_8 asInterface(android.os.IBinder)>
<com.google.ads.AdView: void loadAd(com.google.ads.AdRequest)> --> <com.google.ads.AdView: boolean isRefreshing()>
<com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()> --> <com.jadn.cc.services.MetaHolder: com.jadn.cc.services.MetaFile get(int)>
<com.jadn.cc.services.ContentService: int currentPostion()> --> <com.jadn.cc.services.MetaHolder: com.jadn.cc.services.MetaFile get(int)>
<com.jadn.cc.services.ContentService: void moveTo(double)> --> <com.jadn.cc.services.MetaHolder: com.jadn.cc.services.MetaFile get(int)>
<com.jadn.cc.services.ContentService: boolean fullReset()> --> <com.jadn.cc.services.MetaHolder: com.jadn.cc.services.MetaFile get(int)>
<com.jadn.cc.ui.PodcastList$10: void onClick(android.view.View)> --> <com.jadn.cc.services.MetaHolder: com.jadn.cc.services.MetaFile get(int)>
<com.jadn.cc.ui.PodcastList: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.services.MetaHolder: com.jadn.cc.services.MetaFile get(int)>
<com.jadn.cc.services.ContentService: void startDownloadingNewPodCasts(int)> --> <com.jadn.cc.services.MetaHolder: com.jadn.cc.services.MetaFile get(int)>
<com.jadn.cc.services.ContentService: void tryToRestoreLocation()> --> <com.jadn.cc.services.MetaHolder: com.jadn.cc.services.MetaFile get(int)>
<com.jadn.cc.ui.PodcastList: void showPodcasts()> --> <com.jadn.cc.services.MetaHolder: com.jadn.cc.services.MetaFile get(int)>
<com.jadn.cc.ui.PodcastList$11: boolean onLongClick(android.view.View)> --> <com.jadn.cc.services.MetaHolder: com.jadn.cc.services.MetaFile get(int)>
<com.jadn.cc.services.ContentService: void deleteCurrentPodcast()> --> <com.jadn.cc.services.MetaHolder: com.jadn.cc.services.MetaFile get(int)>
<com.google.ads.e$2: void start()> --> <com.google.ads.e$2: void run()>
<com.google.ads.AdActivity: void d()> --> <com.google.ads.internal.AdWebView: void setAdActivity(com.google.ads.AdActivity)>
<com.google.ads.AdActivity: void a(com.google.ads.internal.AdWebView,boolean,int,boolean)> --> <com.google.ads.internal.AdWebView: void setAdActivity(com.google.ads.AdActivity)>
<com.aocate.presto.service.IOnInfoListenerCallback_0_8$Stub: com.aocate.presto.service.IOnInfoListenerCallback_0_8 asInterface(android.os.IBinder)> --> <com.aocate.presto.service.IOnInfoListenerCallback_0_8$Stub$Proxy: void <init>(android.os.IBinder)>
<com.jadn.cc.ui.SearchResults$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> --> <com.jadn.cc.ui.SearchResults: void access$000(com.jadn.cc.ui.SearchResults,int)>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection)> --> <com.google.ads.internal.f: void f(java.net.HttpURLConnection)>
<com.google.ads.u: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.c: void c(boolean)>
<com.google.ads.mediation.admob.AdMobAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.MediationBannerListener: void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode)>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onFailedToReceiveAd()> --> <com.google.ads.mediation.MediationBannerListener: void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.EmptyNetworkExtras)> --> <com.google.ads.mediation.MediationBannerListener: void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode)>
<com.google.ads.mediation.admob.AdMobAdapter$a: void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.mediation.MediationBannerListener: void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode)>
<com.aocate.media.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)> --> <com.aocate.media.MediaPlayer$4$2: void <init>(com.aocate.media.MediaPlayer$4)>
<com.jadn.cc.services.ContentService: void deleteUpTo(int)> --> <com.aocate.media.MediaPlayer: void stop()>
<com.jadn.cc.services.ContentService: void previous()> --> <com.aocate.media.MediaPlayer: void stop()>
<com.jadn.cc.services.ContentService: void next()> --> <com.aocate.media.MediaPlayer: void stop()>
<com.jadn.cc.services.ContentService: void setCurrentPaused(int)> --> <com.aocate.media.MediaPlayer: void stop()>
<com.jadn.cc.services.ContentService: void play(int)> --> <com.aocate.media.MediaPlayer: void stop()>
<com.aocate.media.AndroidMediaPlayer$5: void onPrepared(android.media.MediaPlayer)> --> <com.aocate.media.MediaPlayer$OnPreparedListener: void onPrepared(com.aocate.media.MediaPlayer)>
<com.aocate.media.MediaPlayer$2: void onPrepared(com.aocate.media.MediaPlayer)> --> <com.aocate.media.MediaPlayer$OnPreparedListener: void onPrepared(com.aocate.media.MediaPlayer)>
<com.aocate.media.ServiceBackedMediaPlayer$7: void onPrepared()> --> <com.aocate.media.MediaPlayer$OnPreparedListener: void onPrepared(com.aocate.media.MediaPlayer)>
<com.jadn.cc.ui.AudioRecorder$3: void onClick(android.view.View)> --> <com.jadn.cc.util.RecordingSet: void cancel()>
<com.google.ads.mediation.MediationAdRequest: java.lang.Integer getAgeInYears()> --> <com.google.ads.AdRequest: java.util.Date getBirthday()>
<com.google.ads.mediation.MediationAdRequest: java.util.Date getBirthday()> --> <com.google.ads.AdRequest: java.util.Date getBirthday()>
<com.jadn.cc.util.Mailer: boolean send()> --> <javax.mail.internet.MimeMessage: void setRecipients(javax.mail.Message$RecipientType,javax.mail.Address[])>
<com.google.ads.l: void <init>()> --> <com.google.ads.l$a: void <init>()>
<com.jadn.cc.ui.CarCast: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.CarCast: void startActivityForResult(android.content.Intent,int)>
<com.jadn.cc.ui.CarCast$4: boolean onTouch(android.view.View,android.view.MotionEvent)> --> <com.jadn.cc.ui.CarCast: void startActivityForResult(android.content.Intent,int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.g: long i()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void seekTo(long,int)>
<org.apache.harmony.awt.datatransfer.DTK: void initSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap)> --> <org.apache.harmony.awt.datatransfer.DTK: void appendSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap,java.awt.datatransfer.DataFlavor,java.lang.String)>
<com.jadn.cc.services.ContentService: void moveTo(double)> --> <com.jadn.cc.trace.TraceUtil: void report(java.lang.Throwable)>
<com.jadn.cc.services.ItunesSearchHelper: void start()> --> <com.jadn.cc.trace.TraceUtil: void report(java.lang.Throwable)>
<com.jadn.cc.core.CarCastApplication: void esay(java.lang.Throwable)> --> <com.jadn.cc.trace.TraceUtil: void report(java.lang.Throwable)>
<com.jadn.cc.services.MetaFile: void computeDuration()> --> <com.jadn.cc.trace.TraceUtil: void report(java.lang.Throwable)>
<com.jadn.cc.services.FileSubscriptionHelper: java.util.List getSubscriptions()> --> <com.jadn.cc.trace.TraceUtil: void report(java.lang.Throwable)>
<com.jadn.cc.ui.SearchResults: void showResults()> --> <com.jadn.cc.trace.TraceUtil: void report(java.lang.Throwable)>
<com.jadn.cc.services.ContentService: void play()> --> <com.jadn.cc.trace.TraceUtil: void report(java.lang.Throwable)>
<com.jadn.cc.services.FileSubscriptionHelper: java.util.List getLegacySitesFromFile()> --> <com.jadn.cc.trace.TraceUtil: void report(java.lang.Throwable)>
<com.jadn.cc.services.FileSubscriptionHelper: java.util.List readLegacySites(java.io.InputStream)> --> <com.jadn.cc.trace.TraceUtil: void report(java.lang.Throwable)>
<com.jadn.cc.services.FileSubscriptionHelper: boolean saveSubscriptions(java.util.List)> --> <com.jadn.cc.trace.TraceUtil: void report(java.lang.Throwable)>
<com.jadn.cc.core.CarCastApplication: void report(java.lang.Throwable)> --> <com.jadn.cc.trace.TraceUtil: void report(java.lang.Throwable)>
<com.jadn.cc.services.SearchHelper: void start()> --> <com.jadn.cc.trace.TraceUtil: void report(java.lang.Throwable)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> --> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.jadn.cc.ui.Settings: void onStop()> --> <com.jadn.cc.ui.Settings: android.app.Application getApplication()>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.e: java.lang.String b()>
<com.google.ads.h$2: void run()> --> <com.google.ads.mediation.MediationInterstitialAdapter: void showInterstitial()>
<com.jadn.cc.ui.PodcastList: void showPodcasts()> --> <com.jadn.cc.ui.PodcastList: android.content.Context getApplicationContext()>
<com.jadn.cc.ui.PodcastList$11: boolean onLongClick(android.view.View)> --> <com.jadn.cc.ui.PodcastList: android.content.Context getApplicationContext()>
<com.jadn.cc.ui.PodcastList$10: void onClick(android.view.View)> --> <com.jadn.cc.ui.PodcastList: android.content.Context getApplicationContext()>
<com.jadn.cc.ui.PodcastList: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.PodcastList: android.content.Context getApplicationContext()>
<com.jadn.cc.ui.PodcastList$7: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.ui.PodcastList: android.content.Context getApplicationContext()>
<org.apache.harmony.awt.datatransfer.DataSnapshot: byte[] getSerializedObject(java.lang.String)> --> <org.apache.harmony.awt.datatransfer.DataSnapshot: byte[] getSerializedObject(java.lang.Class)>
<com.google.ads.mediation.admob.AdMobAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.AdSize: com.google.ads.AdSize findBestSize(com.google.ads.AdSize[])>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection)> --> <com.google.ads.internal.f: void d(java.net.HttpURLConnection)>
<com.jadn.cc.services.ContentService: void moveTo(double)> --> <com.aocate.media.MediaPlayer: void prepare()>
<com.jadn.cc.services.ContentService: boolean fullReset()> --> <com.aocate.media.MediaPlayer: void prepare()>
<com.jadn.cc.services.ContentService: void tryToRestoreLocation()> --> <com.aocate.media.MediaPlayer: void prepare()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void registerOnBufferingUpdateCallback(long,com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8)>
<com.google.ads.internal.AdWebView: void onMeasure(int,int)> --> <com.google.ads.internal.AdWebView: void setMeasuredDimension(int,int)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.m,com.google.ads.AdSize)> --> <com.google.ads.internal.AdWebView: void setBackgroundColor(int)>
<com.google.ads.e: boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long)> --> <com.google.ads.h: android.view.View e()>
<com.google.ads.j: void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.h: android.view.View e()>
<com.google.ads.internal.d: void a()> --> <com.google.ads.internal.i: com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.i: com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.internal.c: void <init>(com.google.ads.internal.d)> --> <com.google.ads.internal.i: com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.AdVideoView: void setMediaControllerEnabled(boolean)>
<com.aocate.media.ServiceBackedMediaPlayer: float getCurrentPitchStepsAdjustment()> --> <com.aocate.presto.service.IPlayMedia_0_8: float getCurrentPitchStepsAdjustment(long)>
<com.google.ads.mediation.MediationServerParameters: void load(java.util.Map)> --> <com.google.ads.mediation.MediationServerParameters$MappingException: void <init>(java.lang.String)>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void pause()>
<com.aocate.media.MediaPlayer: void pause()> --> <com.aocate.media.MediaPlayerImpl: void pause()>
<com.jadn.cc.services.MetaHolder: java.util.SortedSet moveUp(java.util.SortedSet)> --> <com.jadn.cc.services.MetaHolder: void swapBack(java.util.SortedSet,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void access$800(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void setOnSpeedAdjustmentAvailableChangedCallback(com.aocate.presto.service.IPlayMedia_0_8)>
<org.apache.harmony.awt.datatransfer.DTK: void appendSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap,java.lang.String[],java.lang.String,java.lang.String)> --> <org.apache.harmony.awt.datatransfer.TextFlavor: void addCharsetClasses(java.awt.datatransfer.SystemFlavorMap,java.lang.String,java.lang.String,java.lang.String)>
<com.aocate.media.MediaPlayer: boolean isPrestoLibraryInstalled()> --> <com.aocate.media.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.services.RemoteControlHelper: void registerRemoteControlClient(android.media.AudioManager,com.jadn.cc.services.RemoteControlClientCompat)>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.AdVideoView: void a(int)>
<com.google.ads.e: boolean a(com.google.ads.e,com.google.ads.h)> --> <com.google.ads.e: boolean e(com.google.ads.h)>
<com.jadn.cc.ui.PodcastList: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.PodcastList: void setContentView(int)>
<com.jadn.cc.ui.PodcastList$9: void onClick(android.view.View)> --> <com.jadn.cc.ui.PodcastList: java.util.List getBarButtons()>
<com.google.ads.internal.f: void c(java.net.HttpURLConnection)> --> <com.google.ads.internal.c: void b(java.lang.String)>
<com.aocate.media.MediaPlayer: void setupMpi(android.content.Context)> --> <com.aocate.media.MediaPlayer: boolean isPrestoLibraryInstalled()>
<com.aocate.media.MediaPlayer: boolean invalidServiceConnectionConfiguration()> --> <com.aocate.media.MediaPlayer: boolean isPrestoLibraryInstalled()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: float getMinSpeedMultiplier(long)>
<com.google.ads.internal.a$1: void <init>()> --> <com.google.ads.z: void <init>()>
<com.google.ads.internal.c: void start()> --> <com.google.ads.internal.d: void b(boolean)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.m,com.google.ads.AdSize)> --> <com.google.ads.util.AdUtil: void a(android.webkit.WebView)>
<com.google.ads.internal.a$3: void <init>()> --> <com.google.ads.t: void <init>()>
<myjava.awt.datatransfer.MimeTypeProcessor: myjava.awt.datatransfer.MimeTypeProcessor$MimeType parse(java.lang.String)> --> <myjava.awt.datatransfer.MimeTypeProcessor: void retrieveParams(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.c: java.util.List h()>
<com.aocate.media.ServiceBackedMediaPlayer: float getMinSpeedMultiplier()> --> <com.aocate.presto.service.IPlayMedia_0_8: float getMinSpeedMultiplier(long)>
<com.google.ads.b: com.google.ads.b a()> --> <com.google.ads.b: void <init>()>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void stop()>
<com.aocate.media.MediaPlayer: void stop()> --> <com.aocate.media.MediaPlayerImpl: void stop()>
<com.google.ads.internal.c: void f()> --> <com.google.ads.internal.c$e: void <init>(com.google.ads.internal.d,java.util.LinkedList,int,boolean,java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: boolean isFlavorTextType()> --> <myjava.awt.datatransfer.DataFlavor: boolean isCharsetSupported(java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: boolean equals(myjava.awt.datatransfer.DataFlavor)> --> <myjava.awt.datatransfer.DataFlavor: boolean isCharsetSupported(java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: java.util.List getFlavors(java.util.List,java.lang.String[])> --> <myjava.awt.datatransfer.DataFlavor: boolean isCharsetSupported(java.lang.String)>
<com.google.ads.util.g$a: void a(android.app.AlertDialog$Builder,android.content.Context,java.lang.String,java.lang.String,android.webkit.JsPromptResult)> --> <com.google.ads.util.g$a$6: void <init>(android.webkit.JsPromptResult,android.widget.EditText)>
<com.jadn.cc.ui.SubscriptionEdit: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.SubscriptionEdit: android.content.Intent getIntent()>
<com.jadn.cc.ui.AudioRecorder: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.AudioRecorder: void setTitle(java.lang.CharSequence)>
<com.google.ads.AdActivity$StaticMethodWrapper: boolean isShowing()> --> <com.google.ads.AdActivity: com.google.ads.AdActivity b()>
<com.jadn.cc.ui.Splash: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Splash: android.view.View findViewById(int)>
<com.google.ads.internal.e: void <init>(java.lang.String,java.util.HashMap)> --> <com.google.ads.internal.e: void <init>(java.lang.String)>
<com.google.ads.internal.d: void y()> --> <com.google.ads.internal.e: void <init>(java.lang.String)>
<com.google.ads.mediation.admob.AdMobAdapterExtras: void <init>(com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.admob.AdMobAdapterExtras: void <init>()>
<com.google.ads.AdRequest: com.google.ads.mediation.admob.AdMobAdapterExtras a()> --> <com.google.ads.mediation.admob.AdMobAdapterExtras: void <init>()>
<com.google.ads.searchads.SearchAdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.mediation.admob.AdMobAdapterExtras: void <init>()>
<com.jadn.cc.services.AlarmService$1: void start()> --> <com.jadn.cc.services.AlarmService: android.content.Context getApplicationContext()>
<com.aocate.media.MediaPlayer: void setupMpi(android.content.Context)> --> <com.aocate.media.ServiceBackedMediaPlayer: void <init>(com.aocate.media.MediaPlayer,android.content.Context,android.content.ServiceConnection)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.g: long e()>
<com.jadn.cc.ui.CarCast: void onResume()> --> <com.jadn.cc.ui.BaseActivity: void onResume()>
<com.jadn.cc.ui.DownloadProgress: void onResume()> --> <com.jadn.cc.ui.BaseActivity: void onResume()>
<com.jadn.cc.ui.Search: void onResume()> --> <com.jadn.cc.ui.BaseActivity: void onResume()>
<com.jadn.cc.ui.AudioRecorder: void onResume()> --> <com.jadn.cc.ui.BaseActivity: void onResume()>
<com.jadn.cc.ui.Downloader: void onResume()> --> <com.jadn.cc.ui.BaseActivity: void onResume()>
<com.jadn.cc.services.ContentService: void startDownloadingNewPodCasts(int)> --> <com.jadn.cc.services.MetaFile: boolean isListenedTo()>
<com.jadn.cc.ui.PodcastList: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.services.MetaFile: boolean isListenedTo()>
<com.jadn.cc.ui.PodcastList: void showPodcasts()> --> <com.jadn.cc.services.MetaFile: boolean isListenedTo()>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.i: void d(boolean)>
<com.jadn.cc.services.ContentService: void next()> --> <com.jadn.cc.services.MetaFile: void save()>
<com.jadn.cc.services.ContentService: void pauseNow()> --> <com.jadn.cc.services.MetaFile: void save()>
<com.jadn.cc.services.MetaFile: void <init>(java.io.File)> --> <com.jadn.cc.services.MetaFile: void save()>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.MetaFile: void save()>
<com.jadn.cc.services.ContentService: void onCompletion(com.aocate.media.MediaPlayer)> --> <com.jadn.cc.services.MetaFile: void save()>
<com.google.ads.i: void a(com.google.ads.mediation.MediationAdapter)> --> <com.google.ads.mediation.MediationInterstitialAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras)>
<com.google.ads.internal.d: void b(com.google.ads.f,java.lang.Boolean)> --> <com.google.ads.f: java.lang.String c()>
<com.google.ads.internal.d: void a(com.google.ads.f,java.lang.Boolean)> --> <com.google.ads.f: java.lang.String c()>
<com.jadn.cc.services.ContentService: java.util.SortedSet moveDown(java.util.SortedSet)> --> <com.jadn.cc.services.MetaHolder: java.util.SortedSet moveDown(java.util.SortedSet)>
<com.google.ads.e$8: void start()> --> <com.google.ads.e$8: void run()>
<com.jadn.cc.ui.SubscriptionEdit: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.SubscriptionEdit: void setContentView(int)>
<com.google.ads.internal.d: void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)> --> <com.google.ads.b: java.math.BigInteger c()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.b: java.math.BigInteger c()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.util.AdUtil: java.lang.String a(android.location.Location)>
<com.google.ads.e: boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long)> --> <com.google.ads.h: void <init>(com.google.ads.e,com.google.ads.internal.h,com.google.ads.f,java.lang.String,com.google.ads.AdRequest,java.util.HashMap)>
<com.aocate.media.ServiceBackedMediaPlayer$7: void <init>(com.aocate.media.ServiceBackedMediaPlayer)> --> <com.aocate.presto.service.IOnPreparedListenerCallback_0_8$Stub: void <init>()>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.MediationAdRequest: boolean isTesting()>
<myjava.awt.datatransfer.DataFlavor: void <init>(java.lang.String,java.lang.String)> --> <myjava.awt.datatransfer.DataFlavor: void init(java.lang.String,java.lang.String,java.lang.ClassLoader)>
<myjava.awt.datatransfer.DataFlavor: void <init>(java.lang.String,java.lang.String,java.lang.ClassLoader)> --> <myjava.awt.datatransfer.DataFlavor: void init(java.lang.String,java.lang.String,java.lang.ClassLoader)>
<myjava.awt.datatransfer.DataFlavor: void <init>(java.lang.String)> --> <myjava.awt.datatransfer.DataFlavor: void init(java.lang.String,java.lang.String,java.lang.ClassLoader)>
<com.aocate.media.MediaPlayer: float getCurrentPitchStepsAdjustment()> --> <com.aocate.media.MediaPlayerImpl: float getCurrentPitchStepsAdjustment()>
<com.jadn.cc.ui.PodcastList$2: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: java.util.SortedSet moveTop(java.util.SortedSet)>
<com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8$Stub: com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8 asInterface(android.os.IBinder)> --> <com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8$Stub$Proxy: void <init>(android.os.IBinder)>
<com.aocate.media.ServiceBackedMediaPlayer: int getCurrentPosition()> --> <com.aocate.presto.service.IPlayMedia_0_8: int getCurrentPosition(long)>
<com.jadn.cc.util.Mailer: void <init>()> --> <javax.activation.CommandMap: void setDefaultCommandMap(javax.activation.CommandMap)>
<com.jadn.cc.ui.CarCast: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.CarCast: void saveLastRun()>
<com.google.ads.mediation.admob.AdMobAdapter$b: void onDismissScreen(com.google.ads.Ad)> --> <com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.mediation.MediationInterstitialListener b(com.google.ads.mediation.admob.AdMobAdapter)>
<com.google.ads.mediation.admob.AdMobAdapter$b: void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.mediation.MediationInterstitialListener b(com.google.ads.mediation.admob.AdMobAdapter)>
<com.google.ads.mediation.admob.AdMobAdapter$b: void onLeaveApplication(com.google.ads.Ad)> --> <com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.mediation.MediationInterstitialListener b(com.google.ads.mediation.admob.AdMobAdapter)>
<com.google.ads.mediation.admob.AdMobAdapter$b: void onPresentScreen(com.google.ads.Ad)> --> <com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.mediation.MediationInterstitialListener b(com.google.ads.mediation.admob.AdMobAdapter)>
<com.google.ads.mediation.admob.AdMobAdapter$b: void onReceiveAd(com.google.ads.Ad)> --> <com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.mediation.MediationInterstitialListener b(com.google.ads.mediation.admob.AdMobAdapter)>
<com.jadn.cc.services.ContentService: void updateRemoteDisplay()> --> <com.jadn.cc.services.RemoteControlClientCompat: com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat editMetadata(boolean)>
<com.google.ads.e: boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long)> --> <com.google.ads.internal.d: com.google.ads.m g()>
<com.google.ads.AdActivity$StaticMethodWrapper: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)> --> <com.google.ads.internal.d: com.google.ads.m g()>
<com.google.ads.ag: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.d: com.google.ads.m g()>
<com.google.ads.internal.c: void <init>(com.google.ads.internal.d)> --> <com.google.ads.internal.d: com.google.ads.m g()>
<com.google.ads.internal.c: void start()> --> <com.google.ads.internal.d: com.google.ads.m g()>
<com.google.ads.internal.f: void b()> --> <com.google.ads.internal.d: com.google.ads.m g()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.d: com.google.ads.m g()>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.d: com.google.ads.m g()>
<com.google.ads.e: boolean a(com.google.ads.c,com.google.ads.internal.d)> --> <com.google.ads.internal.d: com.google.ads.m g()>
<com.google.ads.util.g$b: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)> --> <com.google.ads.internal.d: com.google.ads.m g()>
<com.google.ads.e: boolean c()> --> <com.google.ads.internal.d: com.google.ads.m g()>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.d: com.google.ads.m g()>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.internal.d: com.google.ads.m g()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void registerOnBufferingUpdateCallback(long,com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8)> --> <com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8: android.os.IBinder asBinder()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void unregisterOnBufferingUpdateCallback(long,com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8)> --> <com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8: android.os.IBinder asBinder()>
<myjava.awt.datatransfer.DataFlavor: void <init>(java.lang.String,java.lang.String)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getParameter(java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: void readExternal(java.io.ObjectInput)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getParameter(java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: java.lang.String getCharset()> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getParameter(java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: void init(java.lang.String,java.lang.String,java.lang.ClassLoader)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getParameter(java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: java.lang.String getParameter(java.lang.String)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getParameter(java.lang.String)>
<com.jadn.cc.ui.Search$2: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)> --> <com.jadn.cc.ui.Search: com.jadn.cc.services.ContentService getContentService()>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.AdActivity: void a(java.lang.String)>
<com.google.ads.AdActivity: void b(java.util.HashMap,com.google.ads.internal.d)> --> <com.google.ads.AdActivity: void a(java.lang.String)>
<com.google.ads.AdActivity: void a(com.google.ads.internal.AdWebView,boolean,int,boolean)> --> <com.google.ads.AdActivity: void a(java.lang.String)>
<com.aocate.media.ServiceBackedMediaPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.aocate.media.ServiceBackedMediaPlayer: void access$200(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)>
<com.google.ads.AdActivity: void a(java.util.HashMap,com.google.ads.internal.d)> --> <com.google.ads.AdActivity: void startActivityForResult(android.content.Intent,int)>
<com.google.ads.searchads.SearchAdRequest: void <init>()> --> <com.google.ads.AdRequest: void <init>()>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.AdRequest: void <init>()>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.AdRequest: void <init>()>
<com.google.ads.m: com.google.ads.m a(com.google.ads.Ad,java.lang.String,android.app.Activity,android.view.ViewGroup,com.google.ads.AdSize)> --> <com.google.ads.l: com.google.ads.l a()>
<com.google.ads.internal.c: void start()> --> <com.google.ads.internal.f: void a(java.lang.String)>
<com.jadn.cc.ui.Downloader: void access$000(com.jadn.cc.ui.Downloader,java.lang.StringBuilder,java.lang.String,java.lang.String)> --> <com.jadn.cc.ui.Downloader: void nv(java.lang.StringBuilder,java.lang.String,java.lang.String)>
<com.jadn.cc.ui.Search: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Search: void setContentView(int)>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.c: boolean a()>
<com.google.ads.t: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.d: com.google.ads.internal.c i()>
<com.google.ads.u: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.d: com.google.ads.internal.c i()>
<com.google.ads.internal.i: void onPageFinished(android.webkit.WebView,java.lang.String)> --> <com.google.ads.internal.d: com.google.ads.internal.c i()>
<com.google.ads.util.g$b: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)> --> <com.google.ads.internal.d: com.google.ads.internal.c i()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void unregisterOnSeekCompleteCallback(long,com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void unregisterOnPreparedCallback(long,com.aocate.presto.service.IOnPreparedListenerCallback_0_8)>
<com.jadn.cc.ui.CarCast: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.CarCast: void startActivity(android.content.Intent)>
<com.jadn.cc.ui.CarCast: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.CarCast: void startActivity(android.content.Intent)>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.AdWebView: void loadUrl(java.lang.String)>
<com.google.ads.e: boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long)> --> <com.google.ads.h: boolean d()>
<com.google.ads.util.g$a: void a(android.app.AlertDialog$Builder,java.lang.String,android.webkit.JsResult)> --> <com.google.ads.util.g$a$1: void <init>(android.webkit.JsResult)>
<com.jadn.cc.ui.PodcastList: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.PodcastList$2: void <init>(com.jadn.cc.ui.PodcastList)>
<com.jadn.cc.ui.CarCast: void <init>()> --> <com.jadn.cc.ui.CarCast$1: void <init>(com.jadn.cc.ui.CarCast)>
<com.google.ads.internal.d: void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean)> --> <com.google.ads.internal.d: void a(com.google.ads.f,java.lang.Boolean)>
<com.google.ads.internal.d: void y()> --> <com.google.ads.internal.d: void a(com.google.ads.f,java.lang.Boolean)>
<com.jadn.cc.ui.CarCast$3: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: int getCount()>
<com.google.ads.AdView: boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)> --> <com.google.ads.util.AdUtil: boolean b(android.content.Context)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> --> <com.google.ads.util.AdUtil: boolean b(android.content.Context)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void unregisterOnPreparedCallback(long,com.aocate.presto.service.IOnPreparedListenerCallback_0_8)> --> <com.aocate.presto.service.IOnPreparedListenerCallback_0_8: android.os.IBinder asBinder()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void registerOnPreparedCallback(long,com.aocate.presto.service.IOnPreparedListenerCallback_0_8)> --> <com.aocate.presto.service.IOnPreparedListenerCallback_0_8: android.os.IBinder asBinder()>
<com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()> --> <com.aocate.media.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)>
<com.aocate.media.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)> --> <com.aocate.media.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)>
<com.google.ads.util.a: void b(boolean)> --> <com.google.ads.util.a: void c(boolean,java.lang.String)>
<com.google.ads.util.a: void a(boolean)> --> <com.google.ads.util.a: void c(boolean,java.lang.String)>
<com.google.ads.util.a: void a(boolean,java.lang.String)> --> <com.google.ads.util.a: void c(boolean,java.lang.String)>
<com.google.ads.util.a: void a(java.lang.Object)> --> <com.google.ads.util.a: void c(boolean,java.lang.String)>
<com.google.ads.util.a: void b(java.lang.Object)> --> <com.google.ads.util.a: void c(boolean,java.lang.String)>
<com.google.ads.util.a: void a(java.lang.String)> --> <com.google.ads.util.a: void c(boolean,java.lang.String)>
<com.google.ads.util.a: void b(boolean,java.lang.String)> --> <com.google.ads.util.a: void c(boolean,java.lang.String)>
<com.google.ads.util.a: void a(java.lang.Object,java.lang.Object)> --> <com.google.ads.util.a: void c(boolean,java.lang.String)>
<com.jadn.cc.ui.SubscriptionEdit: void testUrl()> --> <com.jadn.cc.ui.SubscriptionEdit: android.content.Context getApplicationContext()>
<com.jadn.cc.ui.SubscriptionEdit$1: void onClick(android.view.View)> --> <com.jadn.cc.ui.SubscriptionEdit: android.content.Context getApplicationContext()>
<com.google.ads.h$1: void start()> --> <com.google.ads.mediation.MediationAdapter: void destroy()>
<com.google.ads.internal.d: void <init>(com.google.ads.m,boolean)> --> <com.google.ads.d: void <init>()>
<com.jadn.cc.ui.FeedbackHelp: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.FeedbackHelp: void setContentView(int)>
<com.jadn.cc.ui.Settings: void onStop()> --> <com.jadn.cc.core.CarCastApplication: void directorySettingsChanged()>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnErrorCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: float getMinSpeedMultiplier()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void start()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void pause()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setDataSource(android.content.Context,android.net.Uri)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: boolean canSetSpeed()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void seekTo(int)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: int getServiceVersionCode()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setEnableSpeedAdjustment(boolean)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setLooping(boolean)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: boolean isLooping()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void reset()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnPitchAdjustmentAvailableChangedListener(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void prepareAsync()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: float getCurrentSpeedMultiplier()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnSpeedAdjustmentAvailableChangedCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: float getMaxSpeedMultiplier()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setVolume(float,float)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnBufferingUpdateCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void release()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setSpeedAdjustmentAlgorithm(int)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setPlaybackSpeed(float)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void <init>(com.aocate.media.MediaPlayer,android.content.Context,android.content.ServiceConnection)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: int getDuration()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setPlaybackPitch(float)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnSeekCompleteCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnPreparedCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: int getCurrentPosition()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setPitchStepsAdjustment(float)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: float getCurrentPitchStepsAdjustment()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void prepare()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: java.lang.String getServiceVersionName()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void stop()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnInfoCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: boolean isPlaying()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnCompletionCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setAudioStreamType(int)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: boolean canSetPitch()> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void setDataSource(java.lang.String)> --> <com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)>
<com.google.ads.c: com.google.ads.a a(org.json.JSONObject)> --> <org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>
<com.jadn.cc.services.ContentService: int currentProgress()> --> <com.aocate.media.MediaPlayer: int getCurrentPosition()>
<com.jadn.cc.services.ContentService: void next()> --> <com.aocate.media.MediaPlayer: int getCurrentPosition()>
<com.jadn.cc.services.ContentService: void setCurrentPaused(int)> --> <com.aocate.media.MediaPlayer: int getCurrentPosition()>
<com.jadn.cc.services.ContentService: void bumpForwardSeconds(int)> --> <com.aocate.media.MediaPlayer: int getCurrentPosition()>
<com.jadn.cc.services.ContentService: void pauseNow()> --> <com.aocate.media.MediaPlayer: int getCurrentPosition()>
<com.jadn.cc.services.ContentService: java.lang.String getLocationString()> --> <com.aocate.media.MediaPlayer: int getCurrentPosition()>
<com.aocate.media.MediaPlayer: void setupMpi(android.content.Context)> --> <com.aocate.media.MediaPlayer$4: void <init>(com.aocate.media.MediaPlayer)>
<com.aocate.media.ServiceBackedMediaPlayer: float getMinSpeedMultiplier()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void start()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void pause()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void setDataSource(android.content.Context,android.net.Uri)> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: boolean canSetSpeed()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void seekTo(int)> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: int getServiceVersionCode()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void setEnableSpeedAdjustment(boolean)> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void setLooping(boolean)> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: boolean isLooping()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void reset()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void prepareAsync()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: float getCurrentSpeedMultiplier()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: float getMaxSpeedMultiplier()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void setVolume(float,float)> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void release()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void setSpeedAdjustmentAlgorithm(int)> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void setPlaybackSpeed(float)> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void <init>(com.aocate.media.MediaPlayer,android.content.Context,android.content.ServiceConnection)> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: int getDuration()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void setPlaybackPitch(float)> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: int getCurrentPosition()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void setPitchStepsAdjustment(float)> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: float getCurrentPitchStepsAdjustment()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void prepare()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: java.lang.String getServiceVersionName()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void stop()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: boolean isPlaying()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void setAudioStreamType(int)> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: boolean canSetPitch()> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.aocate.media.ServiceBackedMediaPlayer: void setDataSource(java.lang.String)> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean ConnectPlayMediaService()>
<com.google.ads.internal.c$a: void start()> --> <com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.a: java.util.HashMap d()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> --> <com.google.ads.d: com.google.ads.c b()>
<com.aocate.media.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)> --> <com.aocate.media.MediaPlayer: android.os.Handler access$300(com.aocate.media.MediaPlayer)>
<com.aocate.media.ServiceBackedMediaPlayer: void seekTo(int)> --> <com.aocate.presto.service.IPlayMedia_0_8: void seekTo(long,int)>
<com.jadn.cc.core.Util: void downloadPodcast(java.lang.String,com.jadn.cc.services.EnclosureHandler)> --> <javax.xml.parsers.SAXParser: void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)>
<com.jadn.cc.core.Util: void findAvailablePodcasts(java.lang.String,com.jadn.cc.services.EnclosureHandler)> --> <javax.xml.parsers.SAXParser: void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)>
<com.google.ads.j: void onDismissScreen(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.e: void b(com.google.ads.h)>
<com.google.ads.k: void onDismissScreen(com.google.ads.mediation.MediationInterstitialAdapter)> --> <com.google.ads.e: void b(com.google.ads.h)>
<com.google.ads.AdRequest$ErrorCode: void <clinit>()> --> <com.google.ads.AdRequest$ErrorCode: void <init>(java.lang.String,int,java.lang.String)>
<com.google.ads.internal.c: void f(java.lang.String)> --> <com.google.ads.internal.c$c: void <init>(com.google.ads.internal.c,android.webkit.WebView,java.lang.String,java.lang.String)>
<com.google.ads.internal.c: void e()> --> <com.google.ads.internal.c$c: void <init>(com.google.ads.internal.c,android.webkit.WebView,java.lang.String,java.lang.String)>
<org.apache.harmony.awt.datatransfer.DTK: org.apache.harmony.awt.datatransfer.DTK getDTK()> --> <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.datatransfer.DTK getDTK()>
<com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8$Stub: com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8 asInterface(android.os.IBinder)> --> <com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8$Stub$Proxy: void <init>(android.os.IBinder)>
<com.google.ads.e$1: void start()> --> <com.google.ads.e: java.lang.Thread a(com.google.ads.e,java.lang.Thread)>
<com.aocate.media.MediaPlayer: void prepareAsync()> --> <com.aocate.media.MediaPlayer: boolean invalidServiceConnectionConfiguration()>
<com.aocate.media.MediaPlayer: void prepare()> --> <com.aocate.media.MediaPlayer: boolean invalidServiceConnectionConfiguration()>
<com.aocate.media.MediaPlayer: void setDataSource(java.lang.String)> --> <com.aocate.media.MediaPlayer: boolean invalidServiceConnectionConfiguration()>
<com.aocate.media.MediaPlayer: void start()> --> <com.aocate.media.MediaPlayer: boolean invalidServiceConnectionConfiguration()>
<com.aocate.media.MediaPlayer: void stop()> --> <com.aocate.media.MediaPlayer: boolean invalidServiceConnectionConfiguration()>
<com.aocate.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)> --> <com.aocate.media.MediaPlayer: boolean invalidServiceConnectionConfiguration()>
<com.aocate.media.MediaPlayer: void pause()> --> <com.aocate.media.MediaPlayer: boolean invalidServiceConnectionConfiguration()>
<com.google.ads.mediation.admob.AdMobAdapter: void destroy()> --> <com.google.ads.InterstitialAd: void stopLoading()>
<com.google.ads.internal.j$a: void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture)> --> <com.google.ads.internal.j$a$1: void <init>(com.google.ads.internal.j$a)>
<com.google.ads.internal.d: void b(com.google.ads.c)> --> <com.google.ads.c: java.lang.String c()>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.c: java.lang.String c()>
<com.google.ads.AdView: boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)> --> <com.google.ads.util.AdUtil: boolean c(android.content.Context)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> --> <com.google.ads.util.AdUtil: boolean c(android.content.Context)>
<com.google.ads.AdView: void destroy()> --> <com.google.ads.internal.d: void b()>
<com.aocate.media.ServiceBackedMediaPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.aocate.presto.service.IPlayMedia_0_8: long startSession(com.aocate.presto.service.IDeathCallback_0_8)>
<com.jadn.cc.services.ContentService: int onStartCommand(android.content.Intent,int,int)> --> <com.jadn.cc.services.ContentService: boolean pauseOrPlay()>
<com.jadn.cc.ui.CarCast$3: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: boolean pauseOrPlay()>
<com.jadn.cc.services.ContentService$1: void onCallStateChanged(int,java.lang.String)> --> <com.jadn.cc.services.ContentService: boolean pauseOrPlay()>
<com.jadn.cc.ui.PodcastList$10: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: boolean pauseOrPlay()>
<com.google.ads.internal.i: com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean)> --> <com.google.ads.util.g$b: void <init>(com.google.ads.internal.d,java.util.Map,boolean,boolean)>
<com.google.ads.internal.c: void start()> --> <com.google.ads.internal.c: void e()>
<com.google.ads.c: com.google.ads.a a(org.json.JSONObject)> --> <org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<com.jadn.cc.services.ItunesSearchHelper: void start()> --> <org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<com.google.ads.c: com.google.ads.c a(java.lang.String)> --> <org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<com.jadn.cc.services.ContentService: java.lang.String startSearch(java.lang.String)> --> <com.jadn.cc.services.ItunesSearchHelper: void <init>(java.lang.String)>
<com.aocate.media.ServiceBackedMediaPlayer$8: void <init>(com.aocate.media.ServiceBackedMediaPlayer)> --> <com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8$Stub: void <init>()>
<com.jadn.cc.ui.CarCast: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.CarCast$3: void <init>(com.jadn.cc.ui.CarCast,android.widget.ImageButton)>
<com.aocate.media.ServiceBackedMediaPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.aocate.media.ServiceBackedMediaPlayer: void access$700(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)>
<com.jadn.cc.ui.Stats: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Stats: void setContentView(int)>
<com.google.ads.internal.d: void a(com.google.ads.c)> --> <com.google.ads.c: int e()>
<com.google.ads.h$2: void start()> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.AdActivity$StaticMethodWrapper: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.AdActivity: void a(java.lang.String,java.lang.Throwable)> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void a(java.lang.String,java.lang.Throwable)> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.internal.c: void start()> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.ae$a: void start()> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.j: void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.util.g$b: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.internal.AdWebView$1: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.h$1: void start()> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.internal.c: void b()> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.internal.AdWebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.internal.f: void start()> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void showInterstitial()> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.internal.AdWebView: void destroy()> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.ae$b: void start()> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.h: void f()> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.internal.c: void a(java.lang.String,com.google.ads.c,com.google.ads.d)> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.i: void a(java.lang.String,java.lang.Throwable)> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.google.ads.internal.AdWebView: void loadUrl(java.lang.String)> --> <com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void setVolume(float,float)>
<com.aocate.media.MediaPlayer: void setVolume(float,float)> --> <com.aocate.media.MediaPlayerImpl: void setVolume(float,float)>
<com.google.ads.e$4: void start()> --> <com.google.ads.e$4: void run()>
<com.google.ads.internal.a: void a(android.webkit.WebView,java.util.Map)> --> <org.json.JSONObject: void <init>(java.util.Map)>
<com.google.ads.util.AdUtil: boolean c()> --> <com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)>
<com.jadn.cc.ui.Settings: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Settings: void setTitle(java.lang.CharSequence)>
<com.jadn.cc.ui.DownloadProgress: void onContentService()> --> <com.jadn.cc.services.ContentService: java.lang.String encodedDownloadStatus()>
<com.jadn.cc.ui.DownloadProgress: void run()> --> <com.jadn.cc.services.ContentService: java.lang.String encodedDownloadStatus()>
<com.aocate.media.MediaPlayer: float getMinSpeedMultiplier()> --> <com.aocate.media.MediaPlayerImpl: float getMinSpeedMultiplier()>
<com.google.ads.internal.d: void b(com.google.ads.f,java.lang.Boolean)> --> <com.google.ads.f: java.util.List e()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnErrorListenerCallback_0_8$Stub: com.aocate.presto.service.IOnErrorListenerCallback_0_8 asInterface(android.os.IBinder)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras)> --> <com.google.ads.mediation.customevent.CustomEventAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.EmptyNetworkExtras)>
<com.jadn.cc.ui.AudioRecorder: boolean onContextItemSelected(android.view.MenuItem)> --> <com.jadn.cc.util.RecordingSet: void delete(com.jadn.cc.util.Recording)>
<com.google.ads.e$5: void start()> --> <com.google.ads.e$5: void run()>
<com.jadn.cc.util.Mailer: void <init>()> --> <javax.activation.CommandMap: javax.activation.CommandMap getDefaultCommandMap()>
<com.google.ads.i: void a(com.google.ads.mediation.MediationAdapter)> --> <com.google.ads.i$a: void <init>(java.lang.String)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.v: void b(java.util.HashMap,java.lang.String,com.google.ads.util.i$c)>
<com.google.ads.j: void onClick(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.h: com.google.ads.e i()>
<com.google.ads.k: void onLeaveApplication(com.google.ads.mediation.MediationInterstitialAdapter)> --> <com.google.ads.h: com.google.ads.e i()>
<com.google.ads.k: void onPresentScreen(com.google.ads.mediation.MediationInterstitialAdapter)> --> <com.google.ads.h: com.google.ads.e i()>
<com.google.ads.j: void onDismissScreen(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.h: com.google.ads.e i()>
<com.google.ads.k: void onDismissScreen(com.google.ads.mediation.MediationInterstitialAdapter)> --> <com.google.ads.h: com.google.ads.e i()>
<com.google.ads.j: void onPresentScreen(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.h: com.google.ads.e i()>
<com.google.ads.j: void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.h: com.google.ads.e i()>
<com.google.ads.j: void onLeaveApplication(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.h: com.google.ads.e i()>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.MediationAdRequest: java.util.Set getKeywords()>
<com.jadn.cc.services.AlarmService$1: void run()> --> <com.jadn.cc.services.AlarmService: java.lang.Object getSystemService(java.lang.String)>
<org.apache.harmony.awt.datatransfer.DTK: void <init>()> --> <org.apache.harmony.awt.datatransfer.DataTransferThread: void <init>(org.apache.harmony.awt.datatransfer.DTK)>
<com.jadn.cc.ui.CarCast: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.CarCast$2: void <init>(com.jadn.cc.ui.CarCast)>
<com.google.ads.h$1: void start()> --> <com.google.ads.h$1: void run()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> --> <com.google.ads.d: boolean a()>
<com.google.ads.e: boolean c()> --> <com.google.ads.util.a: void a(boolean)>
<com.google.ads.h: void f()> --> <com.google.ads.util.a: void a(boolean)>
<com.google.ads.j: void onClick(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.util.a: void a(boolean)>
<com.google.ads.internal.d: void y()> --> <com.google.ads.util.a: void a(boolean)>
<com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8$Stub: void <init>()> --> <com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8$Stub: void attachInterface(android.os.IInterface,java.lang.String)>
<org.apache.harmony.awt.datatransfer.DTK: org.apache.harmony.awt.datatransfer.NativeClipboard getNativeClipboard()> --> <org.apache.harmony.awt.datatransfer.DTK: org.apache.harmony.awt.datatransfer.NativeClipboard newNativeClipboard()>
<com.google.ads.AdView: java.util.Set b(java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean)> --> <com.google.ads.AdView: java.lang.String a(java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean)>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.AdView: java.lang.String a(java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean)>
<myjava.awt.datatransfer.DataFlavor: boolean isFlavorSerializedObjectType()> --> <myjava.awt.datatransfer.DataFlavor: boolean isMimeTypeSerializedObject()>
<com.google.ads.internal.d: void a(com.google.ads.c)> --> <com.google.ads.internal.d: void a(float)>
<com.google.ads.internal.f: void h(java.net.HttpURLConnection)> --> <com.google.ads.internal.d: void a(float)>
<com.google.ads.internal.d: void v()> --> <com.google.ads.internal.d: void A()>
<com.google.ads.internal.a$1: void <init>()> --> <com.google.ads.s: void <init>()>
<com.google.ads.p: void <init>()> --> <com.google.ads.s: void <init>()>
<com.google.ads.internal.a$1: void <init>()> --> <com.google.ads.p: void <init>()>
<com.google.ads.internal.d: void s()> --> <com.google.ads.AdListener: void onDismissScreen(com.google.ads.Ad)>
<com.google.ads.j: void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.util.a: void a(java.lang.Object,java.lang.Object)>
<com.google.ads.j: void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.util.a: void a(java.lang.Object,java.lang.Object)>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.util.a: void a(java.lang.Object,java.lang.Object)>
<com.google.ads.k: void onReceivedAd(com.google.ads.mediation.MediationInterstitialAdapter)> --> <com.google.ads.util.a: void a(java.lang.Object,java.lang.Object)>
<com.google.ads.k: void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.util.a: void a(java.lang.Object,java.lang.Object)>
<com.google.ads.internal.d: void z()> --> <com.google.ads.internal.c: void a()>
<com.jadn.cc.ui.Subscriptions: void onCreate(android.os.Bundle)> --> <com.jadn.cc.core.ExternalMediaStatus: com.jadn.cc.core.ExternalMediaStatus getExternalMediaStatus()>
<com.jadn.cc.ui.SubscriptionEdit$1: void onClick(android.view.View)> --> <com.jadn.cc.core.ExternalMediaStatus: com.jadn.cc.core.ExternalMediaStatus getExternalMediaStatus()>
<com.jadn.cc.services.AlarmService$1: void start()> --> <com.jadn.cc.core.ExternalMediaStatus: com.jadn.cc.core.ExternalMediaStatus getExternalMediaStatus()>
<com.aocate.media.ServiceBackedMediaPlayer: void release()> --> <com.aocate.presto.service.IPlayMedia_0_8: void release(long)>
<com.google.ads.util.AdUtil: void h(android.content.Context)> --> <com.google.ads.util.AdUtil$UserActivityReceiver: void <init>()>
<com.jadn.cc.services.ItunesSearchHelper: void <init>(java.lang.String)> --> <com.jadn.cc.services.SearchHelper: void <init>(java.lang.String)>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.d: void t()>
<com.google.ads.e$4: void start()> --> <com.google.ads.internal.d: void t()>
<com.jadn.cc.ui.TimePickerPreference: void onSetInitialValue(boolean,java.lang.Object)> --> <com.jadn.cc.ui.TimePickerPreference: int getMinute(java.lang.String)>
<com.jadn.cc.services.EnclosureHandler: void <init>(com.jadn.cc.services.DownloadHistory,java.lang.Boolean)> --> <org.xml.sax.helpers.DefaultHandler: void <init>()>
<com.google.ads.internal.c: void start()> --> <com.google.ads.internal.d: long n()>
<com.google.ads.internal.a: boolean a(android.net.Uri)> --> <com.google.ads.internal.a: boolean b(android.net.Uri)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> --> <com.google.ads.internal.a: boolean b(android.net.Uri)>
<com.google.ads.util.AdUtil: org.json.JSONArray a(java.util.Set)> --> <org.json.JSONArray: void <init>()>
<com.jadn.cc.core.Location: com.jadn.cc.core.Location save(java.io.File,java.lang.String)> --> <com.jadn.cc.core.Location: void <init>(java.lang.String)>
<com.jadn.cc.core.Location: com.jadn.cc.core.Location load(java.io.File)> --> <com.jadn.cc.core.Location: void <init>(java.lang.String)>
<com.jadn.cc.services.ContentService: com.jadn.cc.core.Location getLocation()> --> <com.jadn.cc.core.Location: void <init>(java.lang.String)>
<com.jadn.cc.trace.ExceptionHandler: void submitStackTraces()> --> <org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnSeekCompleteCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer$8: void <init>(com.aocate.media.ServiceBackedMediaPlayer)>
<myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.Object clone()> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: void <init>(java.lang.String,java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: void <init>(java.lang.Class,java.lang.String)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: void <init>(java.lang.String,java.lang.String)>
<com.jadn.cc.services.MetaHolder$1: int compare(java.lang.Object,java.lang.Object)> --> <com.jadn.cc.services.MetaHolder$1: int compare(java.io.File,java.io.File)>
<com.jadn.cc.ui.Splash: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Splash: void setTitle(java.lang.CharSequence)>
<com.jadn.cc.core.Subscription: int compareTo(java.lang.Object)> --> <com.jadn.cc.core.Subscription: int compareTo(com.jadn.cc.core.Subscription)>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.d: boolean p()>
<com.google.ads.searchads.SearchAdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)>
<com.google.ads.internal.c: void start()> --> <com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)>
<com.jadn.cc.ui.PodcastList$3: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: java.util.SortedSet moveUp(java.util.SortedSet)>
<com.jadn.cc.ui.Search$1: void start()> --> <com.jadn.cc.util.Updater: void allDone()>
<com.jadn.cc.ui.DownloadProgress: void onPause()> --> <com.jadn.cc.util.Updater: void allDone()>
<com.jadn.cc.ui.Search: void onPause()> --> <com.jadn.cc.util.Updater: void allDone()>
<com.jadn.cc.ui.AudioRecorder: void onPause()> --> <com.jadn.cc.util.Updater: void allDone()>
<com.jadn.cc.ui.CarCast: void onPause()> --> <com.jadn.cc.util.Updater: void allDone()>
<com.jadn.cc.ui.Downloader: void onPause()> --> <com.jadn.cc.util.Updater: void allDone()>
<com.google.ads.internal.AdVideoView$a: void start()> --> <com.google.ads.internal.AdVideoView: void f()>
<com.jadn.cc.ui.OpmlLocator$1: void onClick(android.view.View)> --> <com.jadn.cc.ui.OpmlLocator: void access$000(com.jadn.cc.ui.OpmlLocator,java.lang.String)>
<com.jadn.cc.ui.OpmlImport: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.OpmlImport: android.view.View findViewById(int)>
<com.jadn.cc.ui.Search: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Search$2: void <init>(com.jadn.cc.ui.Search,android.widget.Button,android.widget.TextView)>
<com.google.ads.util.g$a: void a(android.app.AlertDialog$Builder,android.content.Context,java.lang.String,java.lang.String,android.webkit.JsPromptResult)> --> <com.google.ads.util.g$a$4: void <init>(android.webkit.JsPromptResult)>
<com.google.ads.AdView: void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet)> --> <com.google.ads.AdView: int a(android.content.Context,int)>
<com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8$Stub: void onSeekComplete()>
<com.jadn.cc.ui.Subscriptions: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.Subscriptions$1: void <init>(com.jadn.cc.ui.Subscriptions)>
<com.jadn.cc.ui.Subscriptions: boolean onCreateOptionsMenu(android.view.Menu)> --> <com.jadn.cc.ui.Subscriptions: android.view.MenuInflater getMenuInflater()>
<com.google.ads.util.i$b: java.lang.String toString()> --> <com.google.ads.util.i$a: java.lang.String toString()>
<com.google.ads.util.i$c: java.lang.String toString()> --> <com.google.ads.util.i$a: java.lang.String toString()>
<com.google.ads.searchads.SearchAdRequest$BorderType: void <clinit>()> --> <com.google.ads.searchads.SearchAdRequest$BorderType: void <init>(java.lang.String,int,java.lang.String)>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection)> --> <com.google.ads.internal.f: void k(java.net.HttpURLConnection)>
<com.google.ads.mediation.admob.AdMobAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)>
<com.google.ads.mediation.admob.AdMobAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)>
<com.aocate.media.ServiceBackedMediaPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.aocate.media.ServiceBackedMediaPlayer: long access$000(com.aocate.media.ServiceBackedMediaPlayer)>
<com.aocate.media.ServiceBackedMediaPlayer: void setAudioStreamType(int)> --> <com.aocate.presto.service.IPlayMedia_0_8: void setAudioStreamType(long,int)>
<com.jadn.cc.core.OrderingPreference: void <clinit>()> --> <com.jadn.cc.core.OrderingPreference: void <init>(java.lang.String,int)>
<com.google.ads.mediation.admob.AdMobAdapter$a: void <init>(com.google.ads.mediation.admob.AdMobAdapter,com.google.ads.mediation.admob.AdMobAdapter$1)> --> <com.google.ads.mediation.admob.AdMobAdapter$a: void <init>(com.google.ads.mediation.admob.AdMobAdapter)>
<com.jadn.cc.trace.ExceptionHandler: void submitStackTraces()> --> <org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<com.jadn.cc.ui.AudioRecorder$4: void onClick(android.view.View)> --> <com.jadn.cc.util.RecordingSet: void save()>
<com.google.ads.internal.f: void b(java.net.HttpURLConnection)> --> <com.google.ads.internal.c: void e(java.lang.String)>
<com.jadn.cc.services.ContentService: void applyVariableSpeedProperties()> --> <com.aocate.media.MediaPlayer: void setUseService(boolean)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnErrorCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer$4: void <init>(com.aocate.media.ServiceBackedMediaPlayer)>
<com.google.ads.AdView: java.lang.String a(java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean)> --> <com.google.ads.internal.b: void <init>(java.lang.String,boolean)>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.internal.b: void <init>(java.lang.String,boolean)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.EmptyNetworkExtras)> --> <com.google.ads.mediation.customevent.CustomEventAdapter$b: void <init>(com.google.ads.mediation.customevent.CustomEventAdapter,com.google.ads.mediation.MediationInterstitialListener)>
<com.aocate.presto.service.IOnPreparedListenerCallback_0_8$Stub: void <init>()> --> <com.aocate.presto.service.IOnPreparedListenerCallback_0_8$Stub: void attachInterface(android.os.IInterface,java.lang.String)>
<com.google.ads.AdActivity: void moveAdVideoView(int,int,int,int)> --> <com.google.ads.internal.AdVideoView: void requestLayout()>
<com.aocate.media.MediaPlayer: void prepareAsync()> --> <com.aocate.media.MediaPlayerImpl: void prepareAsync()>
<com.jadn.cc.ui.BumpCast: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: void previous()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8$Stub: com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8 asInterface(android.os.IBinder)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void unregisterOnCompletionCallback(long,com.aocate.presto.service.IOnCompletionListenerCallback_0_8)> --> <com.aocate.presto.service.IOnCompletionListenerCallback_0_8: android.os.IBinder asBinder()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void registerOnCompletionCallback(long,com.aocate.presto.service.IOnCompletionListenerCallback_0_8)> --> <com.aocate.presto.service.IOnCompletionListenerCallback_0_8: android.os.IBinder asBinder()>
<myjava.awt.datatransfer.DataFlavor: java.lang.String getMimeType()> --> <myjava.awt.datatransfer.MimeTypeProcessor: java.lang.String assemble(myjava.awt.datatransfer.MimeTypeProcessor$MimeType)>
<com.google.ads.ag: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.ag$c: void <init>(com.google.ads.internal.d)>
<com.jadn.cc.services.SearchHelper: void start()> --> <com.jadn.cc.services.SearchHelper: void run()>
<com.google.ads.InterstitialAd: void <init>(android.app.Activity,java.lang.String)> --> <com.google.ads.InterstitialAd: void <init>(android.app.Activity,java.lang.String,boolean)>
<com.jadn.cc.util.Updater: void <init>(android.os.Handler,java.lang.Runnable)> --> <com.jadn.cc.util.Updater: void start()>
<com.google.ads.AdSize: com.google.ads.AdSize findBestSize(com.google.ads.AdSize[])> --> <com.google.ads.AdSize: boolean isSizeAppropriate(int,int)>
<com.jadn.cc.core.Subscription$1: java.lang.Object createFromParcel(android.os.Parcel)> --> <com.jadn.cc.core.Subscription$1: com.jadn.cc.core.Subscription createFromParcel(android.os.Parcel)>
<com.google.ads.k: void onPresentScreen(com.google.ads.mediation.MediationInterstitialAdapter)> --> <com.google.ads.e: void a(com.google.ads.h)>
<com.google.ads.j: void onPresentScreen(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.e: void a(com.google.ads.h)>
<com.google.ads.util.c: byte[] b(byte[],int,int,int)> --> <com.google.ads.util.c$c: boolean a(byte[],int,int,boolean)>
<com.google.ads.mediation.admob.AdMobAdapter: void showInterstitial()> --> <com.google.ads.InterstitialAd: void show()>
<com.google.ads.h: void f()> --> <com.google.ads.h$2: void <init>(com.google.ads.h,com.google.ads.mediation.MediationInterstitialAdapter)>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.services.ContentService: void initDirs()>
<com.jadn.cc.services.ContentService: void directorySettingsChanged()> --> <com.jadn.cc.services.ContentService: void initDirs()>
<com.jadn.cc.services.ContentService: void enableNotification()> --> <com.jadn.cc.services.ContentService: java.lang.CharSequence getText(int)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void showInterstitial()> --> <com.google.ads.util.a: void b(java.lang.Object)>
<com.google.ads.mediation.customevent.CustomEventAdapter: android.view.View getBannerView()> --> <com.google.ads.util.a: void b(java.lang.Object)>
<com.google.ads.h$1: void start()> --> <com.google.ads.util.a: void b(java.lang.Object)>
<com.google.ads.e: void <init>(com.google.ads.internal.d)> --> <com.google.ads.util.a: void b(java.lang.Object)>
<com.google.ads.i: void a(com.google.ads.mediation.MediationAdapter)> --> <com.google.ads.h: void j()>
<com.aocate.media.MediaPlayer$State: void <clinit>()> --> <com.aocate.media.MediaPlayer$State: void <init>(java.lang.String,int)>
<com.jadn.cc.services.ContentService: int currentDuration()> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: void deleteUpTo(int)> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: java.lang.String getCurrentSubscriptionName()> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: int currentPostion()> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: java.lang.String getPodcastEmailSummary()> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: boolean fullReset()> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: void deletePodcast(int)> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.ui.PodcastList: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: java.lang.String getWhereString()> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: void tryToRestoreLocation()> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: void deleteCurrentPodcast()> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: void doDownloadCompletedNotification(int)> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: com.jadn.cc.services.MetaFile currentMeta()> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: java.lang.String currentTitle()> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: void next(boolean)> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: int getCount()> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: void previous()> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: void startDownloadingNewPodCasts(int)> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: void bumpForwardSeconds(int)> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.ui.PodcastList: void showPodcasts()> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.jadn.cc.services.ContentService: java.lang.CharSequence currentSummary()> --> <com.jadn.cc.services.MetaHolder: int getSize()>
<com.google.ads.internal.d: void b(com.google.ads.c)> --> <com.google.ads.internal.d: void a(java.util.List,java.lang.String)>
<com.google.ads.internal.AdVideoView: void a()> --> <com.google.ads.internal.AdVideoView$a: void a()>
<myjava.awt.datatransfer.MimeTypeProcessor: void retrieveParam(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor: java.lang.String retrieveQuoted(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)>
<com.jadn.cc.ui.Downloader: boolean onCreateOptionsMenu(android.view.Menu)> --> <com.jadn.cc.ui.Downloader: android.view.MenuInflater getMenuInflater()>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.InterstitialAd a(android.app.Activity,java.lang.String)> --> <com.google.ads.InterstitialAd: void <init>(android.app.Activity,java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataProxy: boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProxy: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void setDataSource(java.lang.String)>
<com.aocate.media.MediaPlayer: void setDataSource(java.lang.String)> --> <com.aocate.media.MediaPlayerImpl: void setDataSource(java.lang.String)>
<myjava.awt.datatransfer.MimeTypeProcessor: myjava.awt.datatransfer.MimeTypeProcessor$MimeType parse(java.lang.String)> --> <myjava.awt.datatransfer.MimeTypeProcessor$StringPosition: void <init>(myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.AdWebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.jadn.cc.services.ContentService: void saveState()> --> <com.jadn.cc.core.Location: com.jadn.cc.core.Location save(java.io.File,java.lang.String)>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.services.RemoteControlClientCompat: void <init>(android.app.PendingIntent)>
<com.jadn.cc.services.ContentService: void giveUpAudioFocus()> --> <com.jadn.cc.core.AudioFocusHelper: boolean abandonFocus()>
<com.aocate.media.ServiceBackedMediaPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.aocate.media.ServiceBackedMediaPlayer: void access$500(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)>
<com.jadn.cc.services.AlarmService: void <init>()> --> <com.jadn.cc.services.AlarmService$1: void <init>(com.jadn.cc.services.AlarmService)>
<com.jadn.cc.services.ContentService: void updateRemoteDisplay()> --> <com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat: com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat putBitmap(int,android.graphics.Bitmap)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean canSetSpeed(long)>
<com.google.ads.util.AdUtil: java.lang.String c(java.lang.String)> --> <com.google.ads.util.c: java.lang.String b(byte[],int)>
<com.google.ads.e$1: void start()> --> <com.google.ads.e$1: void run()>
<com.jadn.cc.ui.OpmlImport: void importOpml()> --> <org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>
<com.google.ads.internal.d: void b(com.google.ads.c)> --> <com.google.ads.c: java.util.List i()>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.c: java.util.List i()>
<com.jadn.cc.util.Mailer: void addAttachment(java.lang.String)> --> <javax.mail.internet.MimeBodyPart: void <init>()>
<com.jadn.cc.util.Mailer: boolean send()> --> <javax.mail.internet.MimeBodyPart: void <init>()>
<myjava.awt.datatransfer.DataFlavor: boolean isFlavorJavaFileListType()> --> <myjava.awt.datatransfer.DataFlavor: boolean isMimeTypeEqual(myjava.awt.datatransfer.DataFlavor)>
<com.jadn.cc.services.ContentService: java.lang.CharSequence currentSummary()> --> <com.jadn.cc.services.ContentService: boolean isDownloading()>
<com.jadn.cc.services.ContentService: java.lang.String currentTitle()> --> <com.jadn.cc.services.ContentService: boolean isDownloading()>
<com.google.ads.internal.d: void a(com.google.ads.c)> --> <com.google.ads.internal.d: void f()>
<com.google.ads.internal.f: void h(java.net.HttpURLConnection)> --> <com.google.ads.internal.d: void f()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> --> <com.google.ads.AdActivity: boolean isShowing()>
<com.aocate.presto.service.IOnCompletionListenerCallback_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnCompletionListenerCallback_0_8$Stub: void onCompletion()>
<com.google.ads.o: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.a: void a(android.webkit.WebView,java.util.Map)>
<com.jadn.cc.ui.SubscriptionEdit: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.SubscriptionEdit$1: void <init>(com.jadn.cc.ui.SubscriptionEdit)>
<com.jadn.cc.ui.OpmlImport: void importOpml()> --> <com.jadn.cc.ui.OpmlImport: android.content.ContentResolver getContentResolver()>
<com.google.ads.AdView: void <init>(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)>
<com.google.ads.internal.d: void y()> --> <com.google.ads.e: boolean c()>
<com.aocate.media.AndroidMediaPlayer$3: boolean onError(android.media.MediaPlayer,int,int)> --> <com.aocate.media.MediaPlayer$OnErrorListener: boolean onError(com.aocate.media.MediaPlayer,int,int)>
<com.aocate.media.ServiceBackedMediaPlayer: void error(int,int)> --> <com.aocate.media.MediaPlayer$OnErrorListener: boolean onError(com.aocate.media.MediaPlayer,int,int)>
<com.aocate.media.ServiceBackedMediaPlayer$4: boolean onError(int,int)> --> <com.aocate.media.MediaPlayer$OnErrorListener: boolean onError(com.aocate.media.MediaPlayer,int,int)>
<com.google.ads.h: void b()> --> <com.google.ads.util.a: void a(boolean,java.lang.String)>
<com.google.ads.h: boolean d()> --> <com.google.ads.util.a: void a(boolean,java.lang.String)>
<com.google.ads.h: android.view.View e()> --> <com.google.ads.util.a: void a(boolean,java.lang.String)>
<com.jadn.cc.util.Mailer: void <init>()> --> <javax.mail.internet.MimeMultipart: void <init>()>
<myjava.awt.datatransfer.MimeTypeProcessor: void retrieveType(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: void access$1(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.lang.String)>
<com.jadn.cc.services.ContentService$3: void start()> --> <com.jadn.cc.services.ContentService$3: void doWarning(android.app.Activity,java.lang.String)>
<com.jadn.cc.services.ContentService$3: void doWarning(android.app.Activity,java.lang.String)> --> <com.jadn.cc.services.ContentService$3$1: void <init>(com.jadn.cc.services.ContentService$3,java.lang.String)>
<com.aocate.media.AndroidMediaPlayer: void start()> --> <com.aocate.media.AndroidMediaPlayer: void run()>
<com.jadn.cc.ui.PodcastList: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.PodcastList$6: void <init>(com.jadn.cc.ui.PodcastList)>
<com.aocate.media.MediaPlayer: int getServiceVersionCode()> --> <com.aocate.media.ServiceBackedMediaPlayer: int getServiceVersionCode()>
<com.google.ads.mediation.admob.AdMobAdapter: void destroy()> --> <com.google.ads.AdView: void destroy()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void registerOnInfoCallback(long,com.aocate.presto.service.IOnInfoListenerCallback_0_8)>
<com.jadn.cc.ui.CarCast: void updateUI()> --> <com.jadn.cc.services.ContentService: com.jadn.cc.core.MediaMode getMediaMode()>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.AdVideoView: void c()>
<com.google.ads.c: com.google.ads.a a(org.json.JSONObject)> --> <org.json.JSONObject: int length()>
<com.jadn.cc.ui.BaseActivity: void onResume()> --> <com.jadn.cc.ui.BaseActivity: com.jadn.cc.core.CarCastApplication getCarCastApplication()>
<com.google.ads.internal.a$1: void <init>()> --> <com.google.ads.ag: void <init>()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.g: void d()>
<com.google.ads.internal.c: void a(java.lang.String,com.google.ads.c,com.google.ads.d)> --> <com.google.ads.d: void a(com.google.ads.c,int)>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection)> --> <com.google.ads.internal.f: void g(java.net.HttpURLConnection)>
<com.google.ads.e$8: void run()> --> <com.google.ads.e: boolean a(com.google.ads.e,com.google.ads.h)>
<com.google.ads.util.AdUtil: boolean a(com.google.ads.util.d)> --> <com.google.ads.util.d: boolean equals(java.lang.Object)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.c: java.lang.String d()>
<com.jadn.cc.services.ContentService: void setApplicationContext(android.content.Context)> --> <com.aocate.media.MediaPlayer: void <init>(android.content.Context,boolean)>
<com.aocate.media.MediaPlayer: void <init>(android.content.Context)> --> <com.aocate.media.MediaPlayer: void <init>(android.content.Context,boolean)>
<com.jadn.cc.core.Util: void downloadPodcast(java.lang.String,com.jadn.cc.services.EnclosureHandler)> --> <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>
<com.jadn.cc.core.Util: void findAvailablePodcasts(java.lang.String,com.jadn.cc.services.EnclosureHandler)> --> <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>
<com.google.ads.e: void a(com.google.ads.h)> --> <com.google.ads.e$4: void <init>(com.google.ads.e)>
<com.aocate.media.ServiceBackedMediaPlayer: void <init>(com.aocate.media.MediaPlayer,android.content.Context,android.content.ServiceConnection)> --> <com.aocate.media.ServiceBackedMediaPlayer$1: void <init>(com.aocate.media.ServiceBackedMediaPlayer,android.content.ServiceConnection)>
<com.google.ads.c: com.google.ads.c a(java.lang.String)> --> <com.google.ads.c: void <init>(java.lang.String,java.lang.String,java.util.List,java.lang.Integer,java.lang.Integer,java.util.List,java.util.List,java.util.List)>
<com.jadn.cc.services.ContentService: void deleteUpTo(int)> --> <com.jadn.cc.services.ContentService: java.io.File currentFile()>
<com.jadn.cc.services.ContentService: void moveTo(double)> --> <com.jadn.cc.services.ContentService: java.io.File currentFile()>
<com.jadn.cc.services.ContentService: void directorySettingsChanged()> --> <com.jadn.cc.services.ContentService: java.io.File currentFile()>
<com.jadn.cc.services.ContentService: boolean fullReset()> --> <com.jadn.cc.services.ContentService: java.io.File currentFile()>
<com.jadn.cc.services.ContentService: void tryToRestoreLocation()> --> <com.jadn.cc.services.ContentService: java.io.File currentFile()>
<com.jadn.cc.services.ContentService: void newContentAdded()> --> <com.jadn.cc.services.ContentService: java.io.File currentFile()>
<com.jadn.cc.services.ContentService: void deleteCurrentPodcast()> --> <com.jadn.cc.services.ContentService: java.io.File currentFile()>
<com.jadn.cc.services.ContentService: void doDownloadCompletedNotification(int)> --> <com.jadn.cc.services.ContentService: java.io.File currentFile()>
<com.google.ads.internal.d: void a(com.google.ads.f,boolean)> --> <com.google.ads.internal.d: void b(com.google.ads.f,java.lang.Boolean)>
<org.apache.harmony.awt.internal.nls.Messages: java.util.ResourceBundle setLocale(java.util.Locale,java.lang.String)> --> <org.apache.harmony.awt.internal.nls.Messages$1: void <init>(java.lang.String,java.util.Locale,java.lang.ClassLoader)>
<com.google.ads.AdActivity: void d()> --> <com.google.ads.internal.AdWebView: void setIsExpandedMraid(boolean)>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.AdWebView: void setIsExpandedMraid(boolean)>
<com.google.ads.internal.e: void <init>(android.os.Bundle)> --> <com.google.ads.internal.e: java.util.HashMap a(java.io.Serializable)>
<com.jadn.cc.ui.Search$1: void start()> --> <com.jadn.cc.ui.Search: android.content.Context getApplicationContext()>
<com.google.ads.AdActivity$StaticMethodWrapper: boolean isShowing()> --> <com.google.ads.AdActivity: java.lang.Object a()>
<com.google.ads.AdActivity$StaticMethodWrapper: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)> --> <com.google.ads.AdActivity: java.lang.Object a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.g: java.lang.String p()>
<com.jadn.cc.ui.PodcastList$11: boolean onLongClick(android.view.View)> --> <com.jadn.cc.ui.PodcastList$11$1: void <init>(com.jadn.cc.ui.PodcastList$11,com.jadn.cc.ui.PodcastList$Tag)>
<com.jadn.cc.services.ContentService: java.lang.String getLocationString()> --> <com.jadn.cc.services.ContentService: com.jadn.cc.core.Location getLocation()>
<com.jadn.cc.core.Config: java.io.File getCarCastPath(java.lang.String)> --> <com.jadn.cc.core.Config: java.io.File getCarCastRoot()>
<com.jadn.cc.core.Config: java.io.File getPodcastsRoot()> --> <com.jadn.cc.core.Config: java.io.File getCarCastRoot()>
<com.jadn.cc.ui.Stats: void onContentService()> --> <com.jadn.cc.ui.Stats: void setTitle(java.lang.CharSequence)>
<com.google.ads.mediation.admob.AdMobAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdView a(android.app.Activity,com.google.ads.AdSize,java.lang.String)>
<myjava.awt.datatransfer.MimeTypeProcessor: myjava.awt.datatransfer.MimeTypeProcessor$MimeType parse(java.lang.String)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: void <init>()>
<com.jadn.cc.ui.BaseActivity: com.jadn.cc.core.CarCastApplication getCarCastApplication()> --> <com.jadn.cc.ui.BaseActivity: android.app.Application getApplication()>
<com.google.ads.internal.d: void s()> --> <com.google.ads.internal.g: void o()>
<com.jadn.cc.ui.SubscriptionEdit$1: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: boolean editSubscription(com.jadn.cc.core.Subscription,com.jadn.cc.core.Subscription)>
<com.jadn.cc.ui.TimePickerPreference: android.view.View onCreateDialogView()> --> <com.jadn.cc.ui.TimePickerPreference: android.content.Context getContext()>
<com.jadn.cc.ui.FeedbackHelp: void qanda(android.view.View)> --> <com.jadn.cc.ui.FeedbackHelp: void startActivity(android.content.Intent)>
<com.jadn.cc.ui.FeedbackHelp: void quickTour(android.view.View)> --> <com.jadn.cc.ui.FeedbackHelp: void startActivity(android.content.Intent)>
<com.jadn.cc.ui.FeedbackHelp: void ccwebsite(android.view.View)> --> <com.jadn.cc.ui.FeedbackHelp: void startActivity(android.content.Intent)>
<com.jadn.cc.ui.FeedbackHelp: void email(android.view.View)> --> <com.jadn.cc.ui.FeedbackHelp: void startActivity(android.content.Intent)>
<com.google.ads.c: com.google.ads.c a(java.lang.String)> --> <org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<com.jadn.cc.ui.PodcastList: void <init>()> --> <com.jadn.cc.ui.PodcastList$10: void <init>(com.jadn.cc.ui.PodcastList)>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.AdRequest: com.google.ads.AdRequest addTestDevice(java.lang.String)>
<com.jadn.cc.ui.OpmlLocator: void start()> --> <com.jadn.cc.ui.OpmlLocator: void run()>
<com.google.ads.AdActivity$StaticMethodWrapper: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)> --> <com.google.ads.util.i$d: java.lang.Object a()>
<com.google.ads.ag: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.util.i$d: java.lang.Object a()>
<com.google.ads.internal.c: void <init>(com.google.ads.internal.d)> --> <com.google.ads.util.i$d: java.lang.Object a()>
<com.google.ads.internal.c: void start()> --> <com.google.ads.util.i$d: java.lang.Object a()>
<com.google.ads.util.i$d: java.lang.String toString()> --> <com.google.ads.util.i$d: java.lang.Object a()>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.util.i$d: java.lang.Object a()>
<com.google.ads.internal.d: void A()> --> <com.google.ads.util.i$d: java.lang.Object a()>
<com.google.ads.internal.d: void w()> --> <com.google.ads.util.i$d: java.lang.Object a()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> --> <com.google.ads.util.i$d: java.lang.Object a()>
<com.jadn.cc.services.EnclosureHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> --> <com.jadn.cc.services.MetaNet: void setTitle(java.lang.String)>
<com.jadn.cc.core.CarCastApplication$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.jadn.cc.core.CarCastApplication: android.content.Context getApplicationContext()>
<com.google.ads.i: void start()> --> <com.google.ads.i: void a(com.google.ads.mediation.MediationAdapter)>
<com.jadn.cc.services.AlarmHostService: void onStart(android.content.Intent,int)> --> <com.jadn.cc.services.AlarmHostService: java.lang.Object getSystemService(java.lang.String)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.m,com.google.ads.AdSize)> --> <com.google.ads.internal.AdWebView$1: void <init>(com.google.ads.internal.AdWebView)>
<com.google.ads.internal.c$1: void start()> --> <com.google.ads.internal.d: void a(com.google.ads.c)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.MetaNet: java.lang.String getSubscription()>
<com.jadn.cc.services.DownloadHistory: void add(com.jadn.cc.services.MetaNet)> --> <com.jadn.cc.services.MetaNet: java.lang.String getSubscription()>
<com.jadn.cc.services.DownloadHistory: boolean contains(com.jadn.cc.services.MetaNet)> --> <com.jadn.cc.services.MetaNet: java.lang.String getSubscription()>
<com.google.ads.ab: void start()> --> <com.google.ads.internal.d: void x()>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.services.RemoteControlClientCompat: void setTransportControlFlags(int)>
<com.jadn.cc.ui.DownloadProgress: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.DownloadProgress$1: void <init>(com.jadn.cc.ui.DownloadProgress)>
<com.jadn.cc.ui.AudioRecorder: void showRecordings()> --> <com.jadn.cc.util.Recording: java.lang.String getDurationString()>
<com.jadn.cc.util.MailRecordings: void doIt(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.util.Recording: java.lang.String getDurationString()>
<com.jadn.cc.ui.SearchResults: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.SearchResults: void setTitle(java.lang.CharSequence)>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: void onDismissScreen()> --> <com.google.ads.mediation.customevent.CustomEventAdapter$b: java.lang.String a()>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: void onFailedToReceiveAd()> --> <com.google.ads.mediation.customevent.CustomEventAdapter$b: java.lang.String a()>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: void onReceivedAd()> --> <com.google.ads.mediation.customevent.CustomEventAdapter$b: java.lang.String a()>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: void onPresentScreen()> --> <com.google.ads.mediation.customevent.CustomEventAdapter$b: java.lang.String a()>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: void onLeaveApplication()> --> <com.google.ads.mediation.customevent.CustomEventAdapter$b: java.lang.String a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.g: long h()>
<com.google.ads.i: void a(com.google.ads.mediation.MediationAdapter)> --> <com.google.ads.mediation.MediationServerParameters: void load(java.util.Map)>
<com.google.ads.AdActivity: void b(java.util.HashMap,com.google.ads.internal.d)> --> <com.google.ads.AdActivity: void a(java.lang.String,java.lang.Throwable)>
<com.google.ads.AdActivity: void a(java.util.HashMap,com.google.ads.internal.d)> --> <com.google.ads.AdActivity: void a(java.lang.String,java.lang.Throwable)>
<com.google.ads.e: void a(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.e$1: void <init>(com.google.ads.e,com.google.ads.c,com.google.ads.AdRequest)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnSpeedAdjustmentAvailableChangedCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.presto.service.IPlayMedia_0_8: void registerOnSpeedAdjustmentAvailableChangedCallback(long,com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8)>
<com.google.ads.mediation.admob.AdMobAdapter$b: void <init>(com.google.ads.mediation.admob.AdMobAdapter,com.google.ads.mediation.admob.AdMobAdapter$1)> --> <com.google.ads.mediation.admob.AdMobAdapter$b: void <init>(com.google.ads.mediation.admob.AdMobAdapter)>
<com.jadn.cc.ui.CarCast: void updateUI()> --> <com.jadn.cc.services.ContentService: int currentProgress()>
<com.google.ads.i: void a(com.google.ads.mediation.MediationAdapter)> --> <com.google.ads.h: void a(com.google.ads.mediation.MediationAdapter)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> --> <com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)>
<com.google.ads.internal.d: void a(java.lang.String)> --> <com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> --> <com.google.ads.util.AdUtil: java.util.HashMap b(android.net.Uri)>
<com.jadn.cc.util.RecordingSet: void save()> --> <com.jadn.cc.util.RecordingSet: void updateNotification()>
<com.jadn.cc.ui.CarCast: void onResume()> --> <com.jadn.cc.util.RecordingSet: void updateNotification()>
<myjava.awt.datatransfer.MimeTypeProcessor: void retrieveParams(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor: void retrieveParam(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)>
<com.jadn.cc.services.ContentService: void onDestroy()> --> <com.jadn.cc.services.ContentService: void disableNotification()>
<com.jadn.cc.services.ContentService: void pauseNow()> --> <com.jadn.cc.services.ContentService: void disableNotification()>
<com.jadn.cc.services.ContentService: void next(boolean)> --> <com.jadn.cc.services.ContentService: void disableNotification()>
<com.jadn.cc.services.ContentService: void onCompletion(com.aocate.media.MediaPlayer)> --> <com.jadn.cc.services.ContentService: void disableNotification()>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.AdRequest: com.google.ads.AdRequest setKeywords(java.util.Set)>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.AdRequest: com.google.ads.AdRequest setKeywords(java.util.Set)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.m,com.google.ads.AdSize)> --> <com.google.ads.internal.AdWebView: void setScrollBarStyle(int)>
<com.google.ads.l: void <init>()> --> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.m: void <init>(com.google.ads.l,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h)> --> <com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.jadn.cc.services.ContentService$3$1: void run()> --> <com.jadn.cc.services.ContentService: android.app.Application getApplication()>
<com.jadn.cc.services.ContentService: void applyVariableSpeedProperties()> --> <com.aocate.media.MediaPlayer: void setEnableSpeedAdjustment(boolean)>
<com.google.ads.ae$c: void run()> --> <com.google.ads.ae: void a(android.webkit.WebView,boolean)>
<com.google.ads.AdActivity: void onActivityResult(int,int,android.content.Intent)> --> <com.google.ads.ae: void a(android.webkit.WebView,boolean)>
<myjava.awt.datatransfer.DataFlavor: java.lang.Object clone()> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.Object clone()>
<com.jadn.cc.services.RemoteControlClientCompat: com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat editMetadata(boolean)> --> <com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat: void <init>(com.jadn.cc.services.RemoteControlClientCompat,java.lang.Object,com.jadn.cc.services.RemoteControlClientCompat$1)>
<com.jadn.cc.ui.BaseActivity: void onResume()> --> <com.jadn.cc.core.CarCastApplication: void setContentServiceListener(com.jadn.cc.core.ContentServiceListener)>
<myjava.awt.datatransfer.MimeTypeProcessor$StringPosition: void <init>(myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor$StringPosition: void <init>()>
<com.jadn.cc.ui.CarCast: void onCreate(android.os.Bundle)> --> <com.jadn.cc.trace.ExceptionHandler: void setTraceData(android.content.Context)>
<com.jadn.cc.trace.ExceptionHandler: boolean register(android.content.Context)> --> <com.jadn.cc.trace.ExceptionHandler: void setTraceData(android.content.Context)>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection)> --> <com.google.ads.internal.f: void c(java.net.HttpURLConnection)>
<com.aocate.media.MediaPlayer: void setPitchStepsAdjustment(float)> --> <com.aocate.media.MediaPlayerImpl: void setPitchStepsAdjustment(float)>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void setPitchStepsAdjustment(float)>
<com.aocate.media.ServiceBackedMediaPlayer: void prepareAsync()> --> <com.aocate.presto.service.IPlayMedia_0_8: void prepareAsync(long)>
<com.google.ads.AdRequest: com.google.ads.AdRequest addExtra(java.lang.String,java.lang.Object)> --> <com.google.ads.mediation.admob.AdMobAdapterExtras: com.google.ads.mediation.admob.AdMobAdapterExtras setExtras(java.util.Map)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setExtras(java.util.Map)> --> <com.google.ads.mediation.admob.AdMobAdapterExtras: com.google.ads.mediation.admob.AdMobAdapterExtras setExtras(java.util.Map)>
<com.google.ads.internal.AdVideoView$a: void start()> --> <com.google.ads.internal.AdVideoView$a: void run()>
<com.google.ads.internal.f: void i(java.net.HttpURLConnection)> --> <com.google.ads.util.AdUtil: int a()>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.util.AdUtil: int a()>
<com.google.ads.internal.c$a: void start()> --> <com.google.ads.internal.c$a: void run()>
<com.jadn.cc.services.ContentService: void play()> --> <com.jadn.cc.services.ContentService: void tryToGetAudioFocus()>
<myjava.awt.datatransfer.DataFlavor: boolean equals(java.lang.Object)> --> <myjava.awt.datatransfer.DataFlavor: boolean equals(myjava.awt.datatransfer.DataFlavor)>
<myjava.awt.datatransfer.DataFlavor: boolean isFlavorTextType()> --> <myjava.awt.datatransfer.DataFlavor: boolean equals(myjava.awt.datatransfer.DataFlavor)>
<myjava.awt.datatransfer.DataFlavor: boolean match(myjava.awt.datatransfer.DataFlavor)> --> <myjava.awt.datatransfer.DataFlavor: boolean equals(myjava.awt.datatransfer.DataFlavor)>
<com.jadn.cc.services.ContentService: java.lang.String startSearch(java.lang.String)> --> <com.jadn.cc.services.SearchHelper: void start()>
<com.jadn.cc.ui.SearchResults: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.SearchResults: void setContentView(int)>
<org.apache.harmony.awt.datatransfer.DataSource: java.lang.String getURL()> --> <org.apache.harmony.awt.datatransfer.DataSource: java.lang.String getText()>
<com.google.ads.searchads.SearchAdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.searchads.SearchAdRequest$BorderType: java.lang.String toString()>
<com.jadn.cc.services.ContentService: void moveTo(double)> --> <com.aocate.media.MediaPlayer: void setDataSource(java.lang.String)>
<com.jadn.cc.services.ContentService: boolean fullReset()> --> <com.aocate.media.MediaPlayer: void setDataSource(java.lang.String)>
<com.jadn.cc.services.ContentService: void tryToRestoreLocation()> --> <com.aocate.media.MediaPlayer: void setDataSource(java.lang.String)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void prepareAsync(long)>
<com.google.ads.c: com.google.ads.internal.h j()> --> <com.google.ads.internal.h: com.google.ads.internal.h a(com.google.ads.AdSize)>
<myjava.awt.datatransfer.MimeTypeProcessor: java.lang.String retrieveToken(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor: boolean isMeaningfulChar(char)>
<myjava.awt.datatransfer.MimeTypeProcessor: int getNextMeaningfulIndex(java.lang.String,int)> --> <myjava.awt.datatransfer.MimeTypeProcessor: boolean isMeaningfulChar(char)>
<com.jadn.cc.services.ContentService: java.lang.String getCurrentSubscriptionName()> --> <com.jadn.cc.services.MetaFile: java.lang.String getFeedName()>
<com.jadn.cc.services.ContentService: void updateRemoteDisplay()> --> <com.jadn.cc.services.MetaFile: java.lang.String getFeedName()>
<com.jadn.cc.services.ContentService: java.lang.String getPodcastEmailSummary()> --> <com.jadn.cc.services.MetaFile: java.lang.String getFeedName()>
<com.jadn.cc.ui.PodcastList: void showPodcasts()> --> <com.jadn.cc.services.MetaFile: java.lang.String getFeedName()>
<com.jadn.cc.services.ContentService: java.lang.CharSequence currentSummary()> --> <com.jadn.cc.services.MetaFile: java.lang.String getFeedName()>
<com.jadn.cc.ui.AudioRecorder: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.AudioRecorder$2: void <init>(com.jadn.cc.ui.AudioRecorder)>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.AdActivity: void a(com.google.ads.internal.AdWebView,boolean,int,boolean)>
<com.google.ads.internal.AdWebView: void onMeasure(int,int)> --> <com.google.ads.internal.AdWebView: android.content.Context getContext()>
<com.jadn.cc.services.EnclosureHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> --> <com.jadn.cc.services.MetaNet: void <init>(java.lang.String,java.net.URL,int,java.lang.String,java.lang.Boolean)>
<org.apache.harmony.awt.datatransfer.DTK: void initSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap)> --> <org.apache.harmony.awt.datatransfer.DTK: void appendSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap,java.lang.String[],java.lang.String,java.lang.String)>
<com.jadn.cc.ui.Subscriptions: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Subscriptions: void setContentView(int)>
<com.jadn.cc.ui.SearchResults: boolean onCreateOptionsMenu(android.view.Menu)> --> <com.jadn.cc.ui.SearchResults: android.view.MenuInflater getMenuInflater()>
<org.apache.harmony.awt.datatransfer.FlavorsComparator: int compare(java.lang.Object,java.lang.Object)> --> <org.apache.harmony.awt.datatransfer.FlavorsComparator: int compare(java.awt.datatransfer.DataFlavor,java.awt.datatransfer.DataFlavor)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.mediation.admob.AdMobAdapterExtras: boolean getPlusOneOptOut()>
<com.google.ads.AdRequest: boolean getPlusOneOptOut()> --> <com.google.ads.mediation.admob.AdMobAdapterExtras: boolean getPlusOneOptOut()>
<com.jadn.cc.services.ItunesSearchHelper: void start()> --> <org.json.JSONObject: void <init>(java.lang.String)>
<com.google.ads.c: com.google.ads.c a(java.lang.String)> --> <org.json.JSONObject: void <init>(java.lang.String)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.ContentService: void newContentAdded()>
<com.aocate.presto.service.IDeathCallback_0_8$Stub: com.aocate.presto.service.IDeathCallback_0_8 asInterface(android.os.IBinder)> --> <com.aocate.presto.service.IDeathCallback_0_8$Stub$Proxy: void <init>(android.os.IBinder)>
<com.google.ads.mediation.MediationAdRequest: com.google.ads.AdRequest$Gender getGender()> --> <com.google.ads.AdRequest: com.google.ads.AdRequest$Gender getGender()>
<com.google.ads.internal.d: void x()> --> <com.google.ads.internal.d: void a(com.google.ads.AdRequest)>
<com.google.ads.InterstitialAd: void loadAd(com.google.ads.AdRequest)> --> <com.google.ads.internal.d: void a(com.google.ads.AdRequest)>
<com.google.ads.AdView: void loadAd(com.google.ads.AdRequest)> --> <com.google.ads.internal.d: void a(com.google.ads.AdRequest)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void unregisterOnInfoCallback(long,com.aocate.presto.service.IOnInfoListenerCallback_0_8)> --> <com.aocate.presto.service.IOnInfoListenerCallback_0_8: android.os.IBinder asBinder()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void registerOnInfoCallback(long,com.aocate.presto.service.IOnInfoListenerCallback_0_8)> --> <com.aocate.presto.service.IOnInfoListenerCallback_0_8: android.os.IBinder asBinder()>
<com.google.ads.j: void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.e: void a(com.google.ads.h,android.view.View)>
<com.google.ads.internal.d: void x()> --> <com.google.ads.util.AdUtil: boolean d()>
<com.google.ads.util.i$a: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)> --> <com.google.ads.util.i: void a(com.google.ads.util.i,com.google.ads.util.i$a)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> --> <com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)>
<com.google.ads.util.AdUtil: org.json.JSONArray a(java.util.Set)> --> <com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)>
<com.google.ads.util.AdUtil: java.lang.String a(java.util.Map)> --> <com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)>
<com.jadn.cc.core.WifiConnectedReceiver$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.jadn.cc.services.ContentService$LocalBinder: com.jadn.cc.services.ContentService getService()>
<com.jadn.cc.services.AlarmService$1$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.jadn.cc.services.ContentService$LocalBinder: com.jadn.cc.services.ContentService getService()>
<com.jadn.cc.core.CarCastApplication$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.jadn.cc.services.ContentService$LocalBinder: com.jadn.cc.services.ContentService getService()>
<com.jadn.cc.ui.PodcastList$1: void onClick(android.view.View)> --> <com.jadn.cc.ui.PodcastList$1$1: void <init>(com.jadn.cc.ui.PodcastList$1)>
<com.jadn.cc.ui.AudioRecorder: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.util.MailRecordings: boolean isAudioSendingConfigured(com.jadn.cc.services.ContentService)>
<com.jadn.cc.util.MailRecordings: void doIt(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.util.MailRecordings: boolean isAudioSendingConfigured(com.jadn.cc.services.ContentService)>
<com.jadn.cc.trace.ExceptionHandler$1: void run()> --> <com.jadn.cc.trace.ExceptionHandler: void submitStackTraces()>
<com.aocate.media.ServiceBackedMediaPlayer: void setVolume(float,float)> --> <com.aocate.presto.service.IPlayMedia_0_8: void setVolume(long,float,float)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void unregisterOnBufferingUpdateCallback(long,com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8)>
<com.google.ads.u: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.c: void d(java.lang.String)>
<com.jadn.cc.services.FileSubscriptionHelper: com.jadn.cc.core.Subscription convertProperty(java.lang.String,java.lang.String)> --> <com.jadn.cc.core.OrderingPreference: com.jadn.cc.core.OrderingPreference valueOf(java.lang.String)>
<com.jadn.cc.services.ContentService$AudioFocus: void <clinit>()> --> <com.jadn.cc.services.ContentService$AudioFocus: void <init>(java.lang.String,int)>
<com.jadn.cc.ui.CarCast$2: boolean onTouch(android.view.View,android.view.MotionEvent)> --> <com.jadn.cc.services.ContentService: void moveTo(double)>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.AdRequest: com.google.ads.AdRequest setNetworkExtras(com.google.ads.mediation.NetworkExtras)>
<com.google.ads.AdRequest: com.google.ads.mediation.admob.AdMobAdapterExtras a()> --> <com.google.ads.AdRequest: com.google.ads.AdRequest setNetworkExtras(com.google.ads.mediation.NetworkExtras)>
<com.google.ads.internal.a$1: void <init>()> --> <com.google.ads.q: void <init>()>
<com.google.ads.internal.f: void j(java.net.HttpURLConnection)> --> <com.google.ads.internal.d: void b(long)>
<org.apache.harmony.awt.datatransfer.DataSource: java.util.List getNativeFormatsList()> --> <org.apache.harmony.awt.datatransfer.DataSource: java.awt.datatransfer.DataFlavor[] getDataFlavors()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.util.AdUtil: java.lang.String a(java.util.Map)>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.AdVideoView: void setSrc(java.lang.String)>
<com.google.ads.internal.d: void b(com.google.ads.c)> --> <com.google.ads.AdListener: void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.AdListener: void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode)>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.AdVideoView: void a(android.view.MotionEvent)>
<com.jadn.cc.ui.SubscriptionEdit: void testUrl()> --> <com.jadn.cc.services.DownloadHistory: void <init>(android.content.Context)>
<com.jadn.cc.ui.Subscriptions: boolean onContextItemSelected(android.view.MenuItem)> --> <com.jadn.cc.services.DownloadHistory: void <init>(android.content.Context)>
<com.jadn.cc.ui.Stats: void onContentService()> --> <com.jadn.cc.services.DownloadHistory: void <init>(android.content.Context)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.DownloadHistory: void <init>(android.content.Context)>
<com.jadn.cc.ui.PodcastList$7: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.services.DownloadHistory: void <init>(android.content.Context)>
<com.google.ads.e: boolean a(com.google.ads.c,com.google.ads.internal.d)> --> <com.google.ads.c: com.google.ads.internal.h j()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void setSpeedAdjustmentAlgorithm(long,int)>
<myjava.awt.datatransfer.DataFlavor: java.lang.String getDefaultRepresentationClassAsString()> --> <myjava.awt.datatransfer.DataFlavor: java.lang.Class getDefaultRepresentationClass()>
<com.jadn.cc.services.ContentService: void restoreState()> --> <com.jadn.cc.core.Location: com.jadn.cc.core.Location load(java.io.File)>
<com.jadn.cc.ui.DownloadProgress$3: void onClick(android.view.View)> --> <com.jadn.cc.ui.DownloadProgress: void startActivity(android.content.Intent)>
<com.jadn.cc.util.Mailer: void addAttachment(java.lang.String)> --> <javax.mail.Multipart: void addBodyPart(javax.mail.BodyPart)>
<com.jadn.cc.util.Mailer: boolean send()> --> <javax.mail.Multipart: void addBodyPart(javax.mail.BodyPart)>
<com.google.ads.ag: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.ae: void a(android.app.Activity,android.webkit.WebView,java.lang.String)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void setVolume(long,float,float)>
<com.google.ads.b: void <init>()> --> <com.google.ads.b: java.math.BigInteger d()>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.ServiceBackedMediaPlayer: boolean isConnected()>
<myjava.awt.datatransfer.MimeTypeProcessor: myjava.awt.datatransfer.MimeTypeProcessor$MimeType parse(java.lang.String)> --> <myjava.awt.datatransfer.MimeTypeProcessor: void retrieveType(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> --> <com.google.ads.AdActivity: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)>
<com.google.ads.ag$c: void onClick(android.content.DialogInterface,int)> --> <com.google.ads.AdActivity: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)>
<com.google.ads.ag: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.AdActivity: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)>
<com.google.ads.internal.d: void y()> --> <com.google.ads.AdActivity: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)>
<com.jadn.cc.ui.CarCast: void onResume()> --> <com.jadn.cc.util.Updater: void <init>(android.os.Handler,java.lang.Runnable)>
<com.jadn.cc.ui.DownloadProgress: void onResume()> --> <com.jadn.cc.util.Updater: void <init>(android.os.Handler,java.lang.Runnable)>
<com.jadn.cc.ui.AudioRecorder: void onResume()> --> <com.jadn.cc.util.Updater: void <init>(android.os.Handler,java.lang.Runnable)>
<com.jadn.cc.ui.AudioRecorder: void onCreate(android.os.Bundle)> --> <com.jadn.cc.util.Updater: void <init>(android.os.Handler,java.lang.Runnable)>
<com.jadn.cc.ui.Search$2: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)> --> <com.jadn.cc.util.Updater: void <init>(android.os.Handler,java.lang.Runnable)>
<com.jadn.cc.ui.Search$3: void onClick(android.view.View)> --> <com.jadn.cc.util.Updater: void <init>(android.os.Handler,java.lang.Runnable)>
<com.jadn.cc.ui.Downloader: void onResume()> --> <com.jadn.cc.util.Updater: void <init>(android.os.Handler,java.lang.Runnable)>
<com.jadn.cc.ui.Stats: void onContentService()> --> <com.jadn.cc.ui.Stats: android.view.View findViewById(int)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.util.AdUtil: com.google.ads.util.AdUtil$a g(android.content.Context)>
<com.jadn.cc.services.ContentService: void deleteUpTo(int)> --> <com.aocate.media.MediaPlayer: boolean isPlaying()>
<com.jadn.cc.services.ContentService: boolean pauseOrPlay()> --> <com.aocate.media.MediaPlayer: boolean isPlaying()>
<com.jadn.cc.services.ContentService: void setCurrentPaused(int)> --> <com.aocate.media.MediaPlayer: boolean isPlaying()>
<com.jadn.cc.services.ContentService: void deletePodcast(int)> --> <com.aocate.media.MediaPlayer: boolean isPlaying()>
<com.jadn.cc.services.ContentService: void previous()> --> <com.aocate.media.MediaPlayer: boolean isPlaying()>
<com.jadn.cc.services.ContentService: void next()> --> <com.aocate.media.MediaPlayer: boolean isPlaying()>
<com.jadn.cc.services.ContentService$1: void onCallStateChanged(int,java.lang.String)> --> <com.aocate.media.MediaPlayer: boolean isPlaying()>
<com.jadn.cc.services.ContentService: void bumpForwardSeconds(int)> --> <com.aocate.media.MediaPlayer: boolean isPlaying()>
<com.jadn.cc.services.ContentService: boolean isPlaying()> --> <com.aocate.media.MediaPlayer: boolean isPlaying()>
<com.jadn.cc.services.ContentService: void pauseNow()> --> <com.aocate.media.MediaPlayer: boolean isPlaying()>
<com.jadn.cc.services.ContentService: void play(int)> --> <com.aocate.media.MediaPlayer: boolean isPlaying()>
<com.google.ads.internal.c$1: void run()> --> <com.google.ads.internal.c: com.google.ads.internal.d a(com.google.ads.internal.c)>
<com.google.ads.internal.c$e: void start()> --> <com.google.ads.internal.c$e: void run()>
<com.jadn.cc.ui.SearchResults: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.SearchResults$1: void <init>(com.jadn.cc.ui.SearchResults)>
<com.jadn.cc.ui.CarCast: void updateUI()> --> <com.jadn.cc.services.ContentService: java.lang.String getDurationString()>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayer$State: java.lang.String toString()>
<com.aocate.media.MediaPlayer: void prepare()> --> <com.aocate.media.MediaPlayer$State: java.lang.String toString()>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.AdView: java.util.Set b(java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean)>
<com.aocate.media.MediaPlayer$4$1: void start()> --> <com.aocate.media.MediaPlayer: void access$200(com.aocate.media.MediaPlayer,com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)>
<com.aocate.media.MediaPlayer$4$2: boolean handleMessage(android.os.Message)> --> <com.aocate.media.MediaPlayer: void access$200(com.aocate.media.MediaPlayer,com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnPitchAdjustmentAvailableChangedListener(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.presto.service.IPlayMedia_0_8: void registerOnPitchAdjustmentAvailableChangedCallback(long,com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void prepare(long)>
<com.google.ads.internal.d: void y()> --> <com.google.ads.internal.d: java.lang.Boolean C()>
<myjava.awt.datatransfer.DataFlavor: java.util.List sortTextFlavorsByType(java.util.List)> --> <myjava.awt.datatransfer.DataFlavor: java.util.List fetchTextFlavors(java.util.List,java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: java.lang.String toString()> --> <myjava.awt.datatransfer.DataFlavor: java.lang.String getMimeType()>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.MediationAdRequest: com.google.ads.AdRequest$Gender getGender()>
<com.aocate.media.ServiceBackedMediaPlayer: void access$700(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void setOnSeekCompleteCallback(com.aocate.presto.service.IPlayMedia_0_8)>
<com.jadn.cc.services.ItunesSearchHelper: void start()> --> <org.json.JSONObject: java.lang.Object get(java.lang.String)>
<com.jadn.cc.core.Util: void downloadPodcast(java.lang.String,com.jadn.cc.services.EnclosureHandler)> --> <org.xml.sax.InputSource: void <init>(java.io.InputStream)>
<com.jadn.cc.core.Util: void findAvailablePodcasts(java.lang.String,com.jadn.cc.services.EnclosureHandler)> --> <org.xml.sax.InputSource: void <init>(java.io.InputStream)>
<org.apache.harmony.awt.datatransfer.DataTransferThread: void start()> --> <org.apache.harmony.awt.datatransfer.DataTransferThread: void run()>
<com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8$Stub: void <init>()> --> <com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8$Stub: void attachInterface(android.os.IInterface,java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.AdSize: java.lang.String toString()>
<com.google.ads.e$7: void run()> --> <com.google.ads.e: com.google.ads.internal.d b(com.google.ads.e)>
<com.google.ads.e$5: void run()> --> <com.google.ads.e: com.google.ads.internal.d b(com.google.ads.e)>
<com.google.ads.e$6: void run()> --> <com.google.ads.e: com.google.ads.internal.d b(com.google.ads.e)>
<com.google.ads.e$2: void run()> --> <com.google.ads.e: com.google.ads.internal.d b(com.google.ads.e)>
<com.google.ads.e$3: void run()> --> <com.google.ads.e: com.google.ads.internal.d b(com.google.ads.e)>
<com.google.ads.e$4: void run()> --> <com.google.ads.e: com.google.ads.internal.d b(com.google.ads.e)>
<com.google.ads.e$8: void start()> --> <com.google.ads.e: com.google.ads.internal.d b(com.google.ads.e)>
<com.google.ads.internal.c$c: void start()> --> <com.google.ads.internal.c$c: void run()>
<org.apache.harmony.awt.datatransfer.DataTransferThread: void run()> --> <org.apache.harmony.awt.datatransfer.DTK: void initDragAndDrop()>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdView a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> --> <com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> --> <com.google.ads.internal.a: boolean a(android.net.Uri)>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> --> <com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)>
<com.google.ads.AdActivity: void d()> --> <com.google.ads.internal.d: void a()>
<com.google.ads.internal.d: void <init>(com.google.ads.m,boolean)> --> <com.google.ads.internal.d: void a()>
<com.jadn.cc.core.Subscription: void <init>(java.lang.String,java.lang.String)> --> <com.jadn.cc.core.Subscription: void <init>(java.lang.String,java.lang.String,int,com.jadn.cc.core.OrderingPreference,boolean,boolean)>
<com.jadn.cc.services.FileSubscriptionHelper: com.jadn.cc.core.Subscription convertProperty(java.lang.String,java.lang.String)> --> <com.jadn.cc.core.Subscription: void <init>(java.lang.String,java.lang.String,int,com.jadn.cc.core.OrderingPreference,boolean,boolean)>
<com.jadn.cc.core.Subscription: void <init>(java.lang.String,java.lang.String,int,com.jadn.cc.core.OrderingPreference)> --> <com.jadn.cc.core.Subscription: void <init>(java.lang.String,java.lang.String,int,com.jadn.cc.core.OrderingPreference,boolean,boolean)>
<com.jadn.cc.ui.SubscriptionEdit$1: void onClick(android.view.View)> --> <com.jadn.cc.core.Subscription: void <init>(java.lang.String,java.lang.String,int,com.jadn.cc.core.OrderingPreference,boolean,boolean)>
<com.jadn.cc.core.Subscription$1: com.jadn.cc.core.Subscription createFromParcel(android.os.Parcel)> --> <com.jadn.cc.core.Subscription: void <init>(java.lang.String,java.lang.String,int,com.jadn.cc.core.OrderingPreference,boolean,boolean)>
<com.google.ads.internal.d: void <init>(com.google.ads.m,boolean)> --> <com.google.ads.internal.g: void <init>()>
<com.aocate.media.ServiceBackedMediaPlayer: void access$500(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void setOnPitchAdjustmentAvailableChangedListener(com.aocate.presto.service.IPlayMedia_0_8)>
<com.aocate.media.ServiceBackedMediaPlayer: void setPlaybackSpeed(float)> --> <com.aocate.presto.service.IPlayMedia_0_8: void setPlaybackSpeed(long,float)>
<com.jadn.cc.util.RecordingSet: java.util.List getRecordings()> --> <com.jadn.cc.util.Recording: void <init>(java.io.File)>
<com.google.ads.internal.d: void b(com.google.ads.f,java.lang.Boolean)> --> <com.google.ads.f: java.lang.String b()>
<com.google.ads.internal.d: void a(com.google.ads.f,java.lang.Boolean)> --> <com.google.ads.f: java.lang.String b()>
<com.jadn.cc.services.FileSubscriptionHelper: boolean removeSubscription(com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: java.util.List getSubscriptions()>
<com.jadn.cc.services.FileSubscriptionHelper: boolean addSubscription(com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: java.util.List getSubscriptions()>
<com.jadn.cc.services.FileSubscriptionHelper: boolean toggleSubscription(com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: java.util.List getSubscriptions()>
<com.jadn.cc.services.FileSubscriptionHelper: boolean editSubscription(com.jadn.cc.core.Subscription,com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: java.util.List getSubscriptions()>
<com.jadn.cc.services.ContentService: java.util.List getSubscriptions()> --> <com.jadn.cc.services.FileSubscriptionHelper: java.util.List getSubscriptions()>
<com.google.ads.AdActivity$StaticMethodWrapper: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)> --> <com.google.ads.AdActivity: com.google.ads.internal.d b(com.google.ads.internal.d)>
<com.jadn.cc.services.MetaHolder: void loadMeta(java.io.File)> --> <com.jadn.cc.services.MetaHolder: boolean isPriority(java.io.File)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: java.lang.String getVersionName()>
<com.google.ads.internal.a$1: void <init>()> --> <com.google.ads.r: void <init>()>
<com.google.ads.c: java.util.List a(org.json.JSONObject,java.lang.String)> --> <org.json.JSONArray: int length()>
<com.jadn.cc.services.ItunesSearchHelper: void start()> --> <org.json.JSONArray: int length()>
<com.google.ads.c: com.google.ads.c a(java.lang.String)> --> <org.json.JSONArray: int length()>
<com.google.ads.c: com.google.ads.a a(org.json.JSONObject)> --> <org.json.JSONArray: int length()>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection)> --> <com.google.ads.internal.f: void b(java.net.HttpURLConnection)>
<com.google.ads.l: void <clinit>()> --> <com.google.ads.l: void <init>()>
<com.jadn.cc.ui.PodcastList$10: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: void play(int)>
<com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String)> --> <com.google.ads.util.i$a: void <init>(com.google.ads.util.i,java.lang.String,com.google.ads.util.i$1)>
<com.google.ads.internal.a: void <clinit>()> --> <com.google.ads.internal.a: void <init>()>
<com.jadn.cc.ui.CarCast: void finish()> --> <com.jadn.cc.core.CarCastApplication: void stopContentService()>
<com.jadn.cc.services.ContentService: void next()> --> <com.jadn.cc.services.ContentService: void next(boolean)>
<com.jadn.cc.services.ContentService: void onCompletion(com.aocate.media.MediaPlayer)> --> <com.jadn.cc.services.ContentService: void next(boolean)>
<com.google.ads.internal.a$1: void <init>()> --> <com.google.ads.x: void <init>()>
<com.jadn.cc.ui.Subscriptions: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Subscriptions: android.view.View findViewById(int)>
<com.jadn.cc.services.AlarmService$1$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.jadn.cc.services.ContentService: void startDownloadingNewPodCasts(int)>
<com.jadn.cc.ui.DownloadProgress: void doDownloads()> --> <com.jadn.cc.services.ContentService: void startDownloadingNewPodCasts(int)>
<com.google.ads.internal.d: void B()> --> <com.google.ads.internal.d: void w()>
<com.google.ads.internal.d: void y()> --> <com.google.ads.internal.d: void w()>
<com.jadn.cc.ui.SubscriptionEdit: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.SubscriptionEdit: void testUrl()>
<com.jadn.cc.ui.SubscriptionEdit: void access$200(com.jadn.cc.ui.SubscriptionEdit)> --> <com.jadn.cc.ui.SubscriptionEdit: void testUrl()>
<com.google.ads.internal.f: void run()> --> <com.google.ads.internal.f: void b()>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> --> <com.google.ads.internal.j: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)>
<com.aocate.presto.service.IOnErrorListenerCallback_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnErrorListenerCallback_0_8$Stub: boolean onError(int,int)>
<com.jadn.cc.util.MailRecordings: boolean isAudioSendingConfigured(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.util.MailRecordings: boolean empty(java.lang.String)>
<com.jadn.cc.ui.Subscriptions: boolean onContextItemSelected(android.view.MenuItem)> --> <com.jadn.cc.services.ContentService: void toggleSubscription(com.jadn.cc.core.Subscription)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: int getCurrentPosition(long)>
<com.aocate.media.AndroidMediaPlayer: void <init>(com.aocate.media.MediaPlayer,android.content.Context)> --> <com.aocate.media.AndroidMediaPlayer$2: void <init>(com.aocate.media.AndroidMediaPlayer)>
<com.jadn.cc.ui.BaseActivity: void onContentServiceChanged(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.ui.BaseActivity: void onContentService()>
<com.google.ads.internal.d: void <init>(com.google.ads.m,boolean)> --> <com.google.ads.util.AdUtil: void h(android.content.Context)>
<com.jadn.cc.ui.CarCast: void onResume()> --> <com.jadn.cc.ui.CarCast: android.view.Window getWindow()>
<com.google.ads.AdView: void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet)> --> <com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)>
<com.google.ads.internal.h: com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context)> --> <com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)>
<com.google.ads.internal.f: void i(java.net.HttpURLConnection)> --> <com.google.ads.util.AdUtil: int b()>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.util.AdUtil: int b()>
<com.aocate.media.MediaPlayer: boolean isLooping()> --> <com.aocate.media.MediaPlayerImpl: boolean isLooping()>
<com.google.ads.internal.c: void <init>(com.google.ads.internal.d)> --> <com.google.ads.internal.f: void <init>(com.google.ads.internal.c,com.google.ads.internal.d)>
<com.jadn.cc.ui.Subscriptions: void reloadSubscriptions()> --> <com.jadn.cc.ui.Subscriptions: java.util.List getSubscriptions()>
<com.google.ads.AdActivity: void newAdVideoView(int,int,int,int)> --> <com.google.ads.internal.i: void b(boolean)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.util.AdUtil: java.lang.String e(android.content.Context)>
<com.google.ads.util.g$a: void a(android.app.AlertDialog$Builder,android.content.Context,java.lang.String,java.lang.String,android.webkit.JsPromptResult)> --> <com.google.ads.util.g$a$5: void <init>(android.webkit.JsPromptResult)>
<com.jadn.cc.services.ContentService: void deleteUpTo(int)> --> <com.jadn.cc.services.ContentService: void tryToRestoreLocation()>
<com.jadn.cc.services.ContentService: void restoreState()> --> <com.jadn.cc.services.ContentService: void tryToRestoreLocation()>
<com.jadn.cc.util.Mailer: boolean send()> --> <javax.mail.internet.MimeMessage: void setContent(javax.mail.Multipart)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setPlusOneOptOut(boolean)> --> <com.google.ads.mediation.admob.AdMobAdapterExtras: com.google.ads.mediation.admob.AdMobAdapterExtras setPlusOneOptOut(boolean)>
<com.google.ads.internal.j: android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d)> --> <com.google.ads.internal.j$a: void <init>(android.app.Activity,com.google.ads.internal.d,android.gesture.GestureStore)>
<com.google.ads.e: boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long)> --> <com.google.ads.e$8: void <init>(com.google.ads.e,com.google.ads.h,android.view.View,com.google.ads.f)>
<com.jadn.cc.services.ExternalReceiver: void onReceive(android.content.Context,android.content.Intent)> --> <com.jadn.cc.services.ExternalReceiver: void abortBroadcast()>
<com.google.ads.mediation.admob.AdMobAdapterExtras: void <init>()> --> <com.google.ads.mediation.admob.AdMobAdapterExtras: com.google.ads.mediation.admob.AdMobAdapterExtras clearExtras()>
<com.jadn.cc.core.AudioFocusHelper: void onAudioFocusChange(int)> --> <com.jadn.cc.core.MusicFocusable: void onGainedAudioFocus()>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: int getCurrentPosition()>
<com.aocate.media.MediaPlayer: int getCurrentPosition()> --> <com.aocate.media.MediaPlayerImpl: int getCurrentPosition()>
<com.aocate.presto.service.IOnCompletionListenerCallback_0_8$Stub: com.aocate.presto.service.IOnCompletionListenerCallback_0_8 asInterface(android.os.IBinder)> --> <com.aocate.presto.service.IOnCompletionListenerCallback_0_8$Stub$Proxy: void <init>(android.os.IBinder)>
<com.google.ads.internal.a$2: com.google.ads.internal.a a()> --> <com.google.ads.internal.a: com.google.ads.internal.a a()>
<com.jadn.cc.core.CarCastApplication$1: void onServiceDisconnected(android.content.ComponentName)> --> <com.jadn.cc.core.CarCastApplication: com.jadn.cc.services.ContentService access$000(com.jadn.cc.core.CarCastApplication)>
<com.jadn.cc.core.CarCastApplication$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.jadn.cc.core.CarCastApplication: com.jadn.cc.services.ContentService access$000(com.jadn.cc.core.CarCastApplication)>
<com.jadn.cc.services.ContentService: void moveTo(double)> --> <com.jadn.cc.services.MetaFile: void setCurrentPos(int)>
<com.jadn.cc.services.ContentService: void next()> --> <com.jadn.cc.services.MetaFile: void setCurrentPos(int)>
<com.jadn.cc.services.ContentService: void setCurrentPaused(int)> --> <com.jadn.cc.services.MetaFile: void setCurrentPos(int)>
<com.jadn.cc.services.ContentService: void pauseNow()> --> <com.jadn.cc.services.MetaFile: void setCurrentPos(int)>
<com.jadn.cc.services.ContentService: void onCompletion(com.aocate.media.MediaPlayer)> --> <com.jadn.cc.services.MetaFile: void setCurrentPos(int)>
<com.google.ads.ae$c: void start()> --> <com.google.ads.ae$c: void run()>
<com.google.ads.e: boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long)> --> <com.google.ads.h: boolean c()>
<com.google.ads.h: boolean d()> --> <com.google.ads.h: boolean c()>
<com.google.ads.k: void onReceivedAd(com.google.ads.mediation.MediationInterstitialAdapter)> --> <com.google.ads.h: boolean c()>
<com.google.ads.j: void onClick(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.h: boolean c()>
<com.google.ads.j: void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.h: boolean c()>
<com.google.ads.j: void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.h: boolean c()>
<com.google.ads.h: android.view.View e()> --> <com.google.ads.h: boolean c()>
<com.google.ads.k: void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.h: boolean c()>
<com.google.ads.AdActivity: void d()> --> <com.google.ads.internal.d: void s()>
<com.google.ads.e$5: void start()> --> <com.google.ads.internal.d: void s()>
<com.google.ads.h: void b()> --> <com.google.ads.h$1: void <init>(com.google.ads.h)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getTextRepresentation(java.lang.String,java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProxy: java.lang.String getCharset(java.awt.datatransfer.DataFlavor)>
<com.jadn.cc.ui.OpmlImport: void importOpml()> --> <org.xmlpull.v1.XmlPullParser: java.lang.String getName()>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnPreparedCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer$7: void <init>(com.aocate.media.ServiceBackedMediaPlayer)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void unregisterOnErrorCallback(long,com.aocate.presto.service.IOnErrorListenerCallback_0_8)>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> --> <com.google.ads.AdView: boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.AdView: boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet)>
<com.jadn.cc.core.Subscription$1: com.jadn.cc.core.Subscription createFromParcel(android.os.Parcel)> --> <com.jadn.cc.core.OrderingPreference: com.jadn.cc.core.OrderingPreference[] values()>
<com.google.ads.i: void a(com.google.ads.mediation.MediationAdapter)> --> <com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)>
<com.google.ads.AdRequest: com.google.ads.mediation.admob.AdMobAdapterExtras a()> --> <com.google.ads.AdRequest: java.lang.Object getNetworkExtras(java.lang.Class)>
<com.google.ads.c: java.util.List a(org.json.JSONObject,java.lang.String)> --> <org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>
<com.jadn.cc.ui.TimePickerPreference: void <init>(android.content.Context,android.util.AttributeSet)> --> <com.jadn.cc.ui.TimePickerPreference: void setPositiveButtonText(java.lang.CharSequence)>
<com.jadn.cc.core.CarCastApplication$1: void onServiceDisconnected(android.content.ComponentName)> --> <com.jadn.cc.core.CarCastApplication: com.jadn.cc.services.ContentService access$002(com.jadn.cc.core.CarCastApplication,com.jadn.cc.services.ContentService)>
<com.jadn.cc.core.CarCastApplication$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.jadn.cc.core.CarCastApplication: com.jadn.cc.services.ContentService access$002(com.jadn.cc.core.CarCastApplication,com.jadn.cc.services.ContentService)>
<com.jadn.cc.services.ContentService: void publishRecordings(android.app.Activity)> --> <com.jadn.cc.services.ContentService$3: void <init>(com.jadn.cc.services.ContentService,android.app.Activity)>
<com.google.ads.c: void <clinit>()> --> <com.google.ads.c$1: void <init>()>
<com.google.ads.ab: void start()> --> <com.google.ads.ab: void run()>
<org.apache.harmony.awt.datatransfer.DataTransferThread: void <init>(org.apache.harmony.awt.datatransfer.DTK)> --> <org.apache.harmony.awt.datatransfer.DataTransferThread: void setDaemon(boolean)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean canSetPitch(long)>
<com.aocate.presto.service.IOnErrorListenerCallback_0_8$Stub: void <init>()> --> <com.aocate.presto.service.IOnErrorListenerCallback_0_8$Stub: void attachInterface(android.os.IInterface,java.lang.String)>
<com.jadn.cc.services.ContentService: void saveState()> --> <com.jadn.cc.core.Config: java.io.File getPodcastRootPath(java.lang.String)>
<com.jadn.cc.services.MetaHolder: void loadMeta(java.io.File)> --> <com.jadn.cc.core.Config: java.io.File getPodcastRootPath(java.lang.String)>
<com.jadn.cc.services.DownloadHistory: void <init>(android.content.Context)> --> <com.jadn.cc.core.Config: java.io.File getPodcastRootPath(java.lang.String)>
<com.jadn.cc.services.MetaHolder: void saveOrder()> --> <com.jadn.cc.core.Config: java.io.File getPodcastRootPath(java.lang.String)>
<com.jadn.cc.services.ContentService: void restoreState()> --> <com.jadn.cc.core.Config: java.io.File getPodcastRootPath(java.lang.String)>
<com.jadn.cc.services.DownloadHistory: void save()> --> <com.jadn.cc.core.Config: java.io.File getPodcastRootPath(java.lang.String)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.core.Config: java.io.File getPodcastRootPath(java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> --> <com.google.ads.internal.d: boolean o()>
<com.google.ads.AdActivity: void a(com.google.ads.internal.AdWebView,boolean,int,boolean)> --> <com.google.ads.AdActivity: void setContentView(android.view.View)>
<com.aocate.presto.service.IOnPreparedListenerCallback_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnPreparedListenerCallback_0_8$Stub: void onPrepared()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.AdSize: boolean isCustomAdSize()>
<com.jadn.cc.services.ContentService: void previous()> --> <com.jadn.cc.services.ContentService: void play()>
<com.jadn.cc.services.ContentService: int onStartCommand(android.content.Intent,int,int)> --> <com.jadn.cc.services.ContentService: void play()>
<com.jadn.cc.services.ContentService: void onGainedAudioFocus()> --> <com.jadn.cc.services.ContentService: void play()>
<com.jadn.cc.services.ContentService: boolean pauseOrPlay()> --> <com.jadn.cc.services.ContentService: void play()>
<com.jadn.cc.services.ContentService: void play(int)> --> <com.jadn.cc.services.ContentService: void play()>
<com.jadn.cc.services.ContentService: void next(boolean)> --> <com.jadn.cc.services.ContentService: void play()>
<com.jadn.cc.ui.SubscriptionEdit: void testUrl()> --> <com.jadn.cc.core.Config: void <init>(android.content.Context)>
<com.jadn.cc.services.MetaHolder: void <init>(android.content.Context,java.io.File)> --> <com.jadn.cc.core.Config: void <init>(android.content.Context)>
<com.jadn.cc.services.DownloadHistory: void <init>(android.content.Context)> --> <com.jadn.cc.core.Config: void <init>(android.content.Context)>
<com.jadn.cc.util.RecordingSet: void <init>(android.content.Context)> --> <com.jadn.cc.core.Config: void <init>(android.content.Context)>
<com.jadn.cc.ui.DownloadProgress: void doDownloads()> --> <com.jadn.cc.core.Config: void <init>(android.content.Context)>
<com.jadn.cc.ui.CarCast: void updateUI()> --> <com.jadn.cc.core.Config: void <init>(android.content.Context)>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.core.Config: void <init>(android.content.Context)>
<com.jadn.cc.services.DownloadHistory: void save()> --> <com.jadn.cc.core.Config: void <init>(android.content.Context)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.core.Config: void <init>(android.content.Context)>
<myjava.awt.datatransfer.MimeTypeProcessor: myjava.awt.datatransfer.MimeTypeProcessor$MimeType parse(java.lang.String)> --> <myjava.awt.datatransfer.MimeTypeProcessor: void <init>()>
<myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor getTextPlainUnicodeFlavor()> --> <myjava.awt.datatransfer.DataFlavor: void <init>(java.lang.String,java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: void <clinit>()> --> <myjava.awt.datatransfer.DataFlavor: void <init>(java.lang.String,java.lang.String)>
<com.jadn.cc.ui.Search$1: void start()> --> <com.jadn.cc.ui.Search$1: void run()>
<com.jadn.cc.core.Subscription: void <clinit>()> --> <com.jadn.cc.core.Subscription$1: void <init>()>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: int getDuration()>
<com.aocate.media.MediaPlayer: int getDuration()> --> <com.aocate.media.MediaPlayerImpl: int getDuration()>
<com.jadn.cc.services.FileSubscriptionHelper: boolean addSubscription(com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: boolean saveSubscriptions(java.util.List)>
<com.jadn.cc.services.FileSubscriptionHelper: boolean toggleSubscription(com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: boolean saveSubscriptions(java.util.List)>
<com.jadn.cc.services.FileSubscriptionHelper: java.util.List resetToDemoSubscriptions()> --> <com.jadn.cc.services.FileSubscriptionHelper: boolean saveSubscriptions(java.util.List)>
<com.jadn.cc.services.FileSubscriptionHelper: boolean removeSubscription(com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: boolean saveSubscriptions(java.util.List)>
<com.jadn.cc.services.FileSubscriptionHelper: java.util.List getSubscriptions()> --> <com.jadn.cc.services.FileSubscriptionHelper: boolean saveSubscriptions(java.util.List)>
<com.jadn.cc.services.FileSubscriptionHelper: void deleteAllSubscriptions()> --> <com.jadn.cc.services.FileSubscriptionHelper: boolean saveSubscriptions(java.util.List)>
<com.jadn.cc.services.FileSubscriptionHelper: boolean editSubscription(com.jadn.cc.core.Subscription,com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: boolean saveSubscriptions(java.util.List)>
<com.google.ads.i: void a(com.google.ads.mediation.MediationAdapter)> --> <com.google.ads.mediation.MediationAdapter: java.lang.Class getAdditionalParametersType()>
<com.jadn.cc.services.DownloadHistory: int eraseHistory(java.lang.String)> --> <com.jadn.cc.services.DownloadHistory: void save()>
<com.jadn.cc.services.DownloadHistory: void add(com.jadn.cc.services.MetaNet)> --> <com.jadn.cc.services.DownloadHistory: void save()>
<com.jadn.cc.services.DownloadHistory: int eraseHistory()> --> <com.jadn.cc.services.DownloadHistory: void save()>
<com.google.ads.c: com.google.ads.c a(java.lang.String)> --> <org.json.JSONObject: int getInt(java.lang.String)>
<com.google.ads.internal.j$a$2: void onClick(android.content.DialogInterface,int)> --> <com.google.ads.internal.j$a: android.app.Activity a(com.google.ads.internal.j$a)>
<com.google.ads.internal.a$1: void <init>()> --> <com.google.ads.internal.a$1: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jadn.cc.util.RecordingSet: void delete(com.jadn.cc.util.Recording)> --> <com.jadn.cc.util.Recording: void delete()>
<com.jadn.cc.util.MailRecordings: void doIt(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.util.Recording: void delete()>
<com.jadn.cc.util.Mailer: boolean send()> --> <javax.mail.internet.MimeMessage: void setSubject(java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestFlavorWOCharset(java.util.List)> --> <myjava.awt.datatransfer.DataFlavor: java.util.List getFlavors(java.util.List,java.lang.Class)>
<myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestFlavorWCharset(java.util.List)> --> <myjava.awt.datatransfer.DataFlavor: java.util.List getFlavors(java.util.List,java.lang.Class)>
<com.jadn.cc.ui.CarCast: void onResume()> --> <com.jadn.cc.ui.CarCast: android.view.View findViewById(int)>
<com.jadn.cc.ui.CarCast: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.CarCast: android.view.View findViewById(int)>
<com.jadn.cc.ui.CarCast: void updatePausePlay()> --> <com.jadn.cc.ui.CarCast: android.view.View findViewById(int)>
<com.jadn.cc.ui.CarCast: void updateUI()> --> <com.jadn.cc.ui.CarCast: android.view.View findViewById(int)>
<com.jadn.cc.ui.OpmlImport: void importOpml()> --> <org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<org.apache.harmony.awt.datatransfer.DTK: org.apache.harmony.awt.datatransfer.NativeClipboard getNativeSelection()> --> <org.apache.harmony.awt.datatransfer.DTK: org.apache.harmony.awt.datatransfer.NativeClipboard newNativeSelection()>
<org.apache.harmony.awt.datatransfer.DataSource: org.apache.harmony.awt.datatransfer.RawBitmap getRawBitmap()> --> <org.apache.harmony.awt.datatransfer.DataSource: org.apache.harmony.awt.datatransfer.RawBitmap getImageBitmap(java.awt.Image)>
<com.google.ads.internal.d: void a(com.google.ads.c)> --> <com.google.ads.e: void a(com.google.ads.c,com.google.ads.AdRequest)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> --> <com.google.ads.e: void a(com.google.ads.c,com.google.ads.AdRequest)>
<com.google.ads.internal.f: void start()> --> <com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode)>
<com.google.ads.t: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode)>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection,int)> --> <com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode)>
<com.jadn.cc.trace.ExceptionHandler: boolean register(android.content.Context)> --> <com.jadn.cc.trace.ExceptionHandler$1: void start()>
<com.jadn.cc.services.ContentService: void applyVariableSpeedProperties()> --> <com.aocate.media.MediaPlayer: void setPlaybackSpeed(float)>
<com.jadn.cc.ui.OpmlImport: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.OpmlImport$1: void <init>(com.jadn.cc.ui.OpmlImport)>
<com.jadn.cc.ui.AudioRecorder: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.AudioRecorder: void showRecordings()>
<com.jadn.cc.ui.AudioRecorder: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.AudioRecorder: void showRecordings()>
<com.jadn.cc.ui.AudioRecorder: void access$000(com.jadn.cc.ui.AudioRecorder)> --> <com.jadn.cc.ui.AudioRecorder: void showRecordings()>
<com.jadn.cc.ui.AudioRecorder: boolean onContextItemSelected(android.view.MenuItem)> --> <com.jadn.cc.ui.AudioRecorder: void showRecordings()>
<com.jadn.cc.services.ContentService: void moveTo(double)> --> <com.aocate.media.MediaPlayer: void seekTo(int)>
<com.jadn.cc.services.ContentService: void tryToRestoreLocation()> --> <com.aocate.media.MediaPlayer: void seekTo(int)>
<com.jadn.cc.services.ContentService: void bumpForwardSeconds(int)> --> <com.aocate.media.MediaPlayer: void seekTo(int)>
<com.jadn.cc.services.ContentService: boolean fullReset()> --> <com.aocate.media.MediaPlayer: void seekTo(int)>
<com.jadn.cc.util.Mailer: void addAttachment(java.lang.String)> --> <javax.activation.DataHandler: void <init>(javax.activation.DataSource)>
<com.jadn.cc.services.FileSubscriptionHelper: java.util.List convertProperties(java.util.Properties)> --> <com.jadn.cc.services.FileSubscriptionHelper: com.jadn.cc.core.Subscription convertProperty(java.lang.String,java.lang.String)>
<com.google.ads.AdActivity: void d()> --> <com.google.ads.internal.AdWebView: void stopLoading()>
<com.google.ads.AdActivity: void onDestroy()> --> <com.google.ads.internal.AdWebView: void stopLoading()>
<com.google.ads.internal.c$a: void start()> --> <com.google.ads.internal.AdWebView: void stopLoading()>
<com.google.ads.internal.d: void z()> --> <com.google.ads.internal.AdWebView: void stopLoading()>
<com.google.ads.util.AdUtil: java.lang.String c(java.lang.String)> --> <javax.crypto.Cipher: byte[] getIV()>
<com.jadn.cc.ui.OpmlImport: void importOpml()> --> <org.xmlpull.v1.XmlPullParser: int next()>
<com.jadn.cc.ui.Subscriptions: void exportOpml()> --> <com.jadn.cc.ui.Subscriptions: void startActivity(android.content.Intent)>
<com.aocate.media.AndroidMediaPlayer: void <init>(com.aocate.media.MediaPlayer,android.content.Context)> --> <com.aocate.media.AndroidMediaPlayer$6: void <init>(com.aocate.media.AndroidMediaPlayer)>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.AdRequest: com.google.ads.AdRequest setBirthday(java.util.Date)>
<com.google.ads.AdRequest: com.google.ads.AdRequest setBirthday(java.util.Calendar)> --> <com.google.ads.AdRequest: com.google.ads.AdRequest setBirthday(java.util.Date)>
<com.google.ads.AdActivity: void a(com.google.ads.internal.AdWebView,boolean,int,boolean)> --> <com.google.ads.AdActivity: android.view.View a(int)>
<com.jadn.cc.services.DownloadHistory: void save()> --> <com.jadn.cc.services.DownloadHistory: void say(java.lang.String)>
<com.jadn.cc.core.Config: java.io.File getPodcastRootPath(java.lang.String)> --> <com.jadn.cc.core.Config: java.io.File getPodcastsRoot()>
<com.jadn.cc.services.MetaHolder: void loadMeta(java.io.File)> --> <com.jadn.cc.core.Config: java.io.File getPodcastsRoot()>
<com.jadn.cc.ui.CarCast: void updateUI()> --> <com.jadn.cc.core.Config: java.io.File getPodcastsRoot()>
<com.jadn.cc.core.Config: void <init>(android.content.Context)> --> <com.jadn.cc.core.Config: java.io.File getPodcastsRoot()>
<com.jadn.cc.services.MetaHolder: void loadMeta(java.io.File)> --> <com.jadn.cc.services.MetaHolder$1: void <init>(com.jadn.cc.services.MetaHolder)>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection,int)> --> <com.google.ads.internal.c: void a(java.lang.String,java.lang.String)>
<com.google.ads.AdActivity: boolean isShowing()> --> <com.google.ads.AdActivity$StaticMethodWrapper: boolean isShowing()>
<com.google.ads.searchads.SearchAdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.searchads.SearchAdRequest: java.lang.Object getNetworkExtras(java.lang.Class)>
<com.google.ads.internal.d: void a(com.google.ads.f,java.lang.Boolean)> --> <com.google.ads.f: java.util.List d()>
<com.aocate.media.ServiceBackedMediaPlayer: void setPlaybackPitch(float)> --> <com.aocate.presto.service.IPlayMedia_0_8: void setPlaybackPitch(long,float)>
<com.google.ads.internal.f: void b()> --> <com.google.ads.internal.f: void a(android.content.Context,java.net.HttpURLConnection)>
<com.google.ads.internal.c: void start()> --> <com.google.ads.internal.c: void run()>
<com.jadn.cc.ui.CarCast$1: void run()> --> <com.jadn.cc.ui.CarCast: void updateUI()>
<com.jadn.cc.ui.CarCast: void onContentService()> --> <com.jadn.cc.ui.CarCast: void updateUI()>
<com.jadn.cc.ui.CarCast: void playStateUpdated(boolean)> --> <com.jadn.cc.ui.CarCast: void updateUI()>
<com.jadn.cc.ui.CarCast: void onActivityResult(int,int,android.content.Intent)> --> <com.jadn.cc.ui.CarCast: void updateUI()>
<com.jadn.cc.ui.Bumper: void onClick(android.view.View)> --> <com.jadn.cc.ui.CarCast: void updateUI()>
<com.jadn.cc.ui.CarCast$3: void onClick(android.view.View)> --> <com.jadn.cc.ui.CarCast: void updateUI()>
<com.jadn.cc.ui.CarCast$2: boolean onTouch(android.view.View,android.view.MotionEvent)> --> <com.jadn.cc.ui.CarCast: void updateUI()>
<com.jadn.cc.ui.BumpCast: void onClick(android.view.View)> --> <com.jadn.cc.ui.CarCast: void updateUI()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: void <init>()> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void attachInterface(android.os.IInterface,java.lang.String)>
<com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8$Stub: void <init>()> --> <com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8$Stub: void attachInterface(android.os.IInterface,java.lang.String)>
<com.jadn.cc.ui.SearchResults: void access$000(com.jadn.cc.ui.SearchResults,int)> --> <com.jadn.cc.ui.SearchResults: void add(int)>
<com.jadn.cc.ui.SearchResults: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.SearchResults: void add(int)>
<com.jadn.cc.ui.SearchResults: boolean onContextItemSelected(android.view.MenuItem)> --> <com.jadn.cc.ui.SearchResults: void add(int)>
<com.google.ads.util.c: byte[] a(byte[],int)> --> <com.google.ads.util.c: byte[] a(byte[],int,int,int)>
<com.google.ads.v: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.v: void a(java.util.HashMap,java.lang.String,com.google.ads.util.i$c)>
<com.aocate.media.ServiceBackedMediaPlayer: void prepare()> --> <com.aocate.presto.service.IPlayMedia_0_8: void prepare(long)>
<com.jadn.cc.services.FileSubscriptionHelper: boolean saveSubscriptions(java.util.List)> --> <com.jadn.cc.core.OrderingPreference: java.lang.String name()>
<com.google.ads.internal.c$e: void start()> --> <com.google.ads.internal.d: void a(java.lang.String)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.MetaFile: void <init>(com.jadn.cc.services.MetaNet,java.io.File)>
<com.jadn.cc.ui.DownloadProgress: void start()> --> <com.jadn.cc.ui.DownloadProgress: void run()>
<com.google.ads.AdView: void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet)> --> <com.google.ads.AdView: int getChildCount()>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnBufferingUpdateCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer$2: void <init>(com.aocate.media.ServiceBackedMediaPlayer)>
<com.jadn.cc.services.MetaHolder: void loadMeta(java.io.File)> --> <com.jadn.cc.services.MetaFile: void <init>(java.io.File)>
<com.google.ads.mediation.admob.AdMobAdapter: void destroy()> --> <com.google.ads.AdView: void stopLoading()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void setAudioStreamType(long,int)>
<com.jadn.cc.util.MailRecordings: void doIt(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.util.Recording: java.io.File getFile()>
<com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)> --> <com.google.ads.AdSize: int a(android.content.Context)>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.AdRequest: com.google.ads.AdRequest setLocation(android.location.Location)>
<com.google.ads.internal.d: void a(com.google.ads.c)> --> <com.google.ads.internal.d: void e()>
<com.google.ads.AdView: void loadAd(com.google.ads.AdRequest)> --> <com.google.ads.internal.d: void e()>
<com.google.ads.internal.f: void h(java.net.HttpURLConnection)> --> <com.google.ads.internal.d: void e()>
<com.jadn.cc.ui.PodcastList: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.PodcastList$1: void <init>(com.jadn.cc.ui.PodcastList)>
<com.jadn.cc.ui.CarCast: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.CarCast: void setContentView(int)>
<com.google.ads.internal.f: void f(java.net.HttpURLConnection)> --> <com.google.ads.internal.d: void b(java.lang.String)>
<com.google.ads.m: void <init>(com.google.ads.l,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h)> --> <com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.core.Util: void findAvailablePodcasts(java.lang.String,com.jadn.cc.services.EnclosureHandler)>
<com.jadn.cc.ui.SubscriptionEdit: void start()> --> <com.jadn.cc.core.Util: void findAvailablePodcasts(java.lang.String,com.jadn.cc.services.EnclosureHandler)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.EmptyNetworkExtras)> --> <com.google.ads.mediation.customevent.CustomEventAdapter$a: void <init>(com.google.ads.mediation.customevent.CustomEventAdapter,com.google.ads.mediation.MediationBannerListener)>
<org.apache.harmony.awt.ContextStorage: java.awt.Toolkit getDefaultToolkit()> --> <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>
<org.apache.harmony.awt.ContextStorage: java.lang.Object getContextLock()> --> <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>
<org.apache.harmony.awt.ContextStorage: void setDefaultToolkit(java.awt.Toolkit)> --> <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>
<org.apache.harmony.awt.ContextStorage: boolean shutdownPending()> --> <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>
<org.apache.harmony.awt.ContextStorage: void setGraphicsEnvironment(java.awt.GraphicsEnvironment)> --> <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>
<org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.datatransfer.DTK getDTK()> --> <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>
<org.apache.harmony.awt.ContextStorage: java.awt.GraphicsEnvironment getGraphicsEnvironment()> --> <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>
<org.apache.harmony.awt.ContextStorage: void setDTK(org.apache.harmony.awt.datatransfer.DTK)> --> <org.apache.harmony.awt.ContextStorage: org.apache.harmony.awt.ContextStorage getCurrentContext()>
<com.aocate.media.ServiceBackedMediaPlayer: void access$100(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void setOnBufferingUpdateCallback(com.aocate.presto.service.IPlayMedia_0_8)>
<com.jadn.cc.services.ContentService: void deleteUpTo(int)> --> <com.jadn.cc.services.ContentService: void pauseNow()>
<com.jadn.cc.services.ContentService: void onLostAudioFocus(boolean)> --> <com.jadn.cc.services.ContentService: void pauseNow()>
<com.jadn.cc.ui.PodcastList$5: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: void pauseNow()>
<com.jadn.cc.services.ContentService: void deletePodcast(int)> --> <com.jadn.cc.services.ContentService: void pauseNow()>
<com.jadn.cc.ui.PodcastList$10: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: void pauseNow()>
<com.jadn.cc.ui.PodcastList$4: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: void pauseNow()>
<com.jadn.cc.ui.PodcastList$1$1: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.services.ContentService: void pauseNow()>
<com.jadn.cc.services.ContentService: int onStartCommand(android.content.Intent,int,int)> --> <com.jadn.cc.services.ContentService: void pauseNow()>
<com.jadn.cc.ui.PodcastList$2: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: void pauseNow()>
<com.jadn.cc.services.ContentService: void deleteCurrentPodcast()> --> <com.jadn.cc.services.ContentService: void pauseNow()>
<com.jadn.cc.ui.PodcastList$3: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: void pauseNow()>
<com.jadn.cc.services.ContentService: boolean pauseOrPlay()> --> <com.jadn.cc.services.ContentService: void pauseNow()>
<com.jadn.cc.ui.PodcastList$11$1: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.services.ContentService: void pauseNow()>
<com.jadn.cc.ui.CarCast$4: boolean onTouch(android.view.View,android.view.MotionEvent)> --> <com.jadn.cc.services.ContentService: void pauseNow()>
<com.jadn.cc.services.ContentService$1: void onCallStateChanged(int,java.lang.String)> --> <com.jadn.cc.services.ContentService: void pauseNow()>
<com.aocate.media.ServiceBackedMediaPlayer$2: void onBufferingUpdate(int)> --> <com.aocate.media.MediaPlayer$OnBufferingUpdateListener: void onBufferingUpdate(com.aocate.media.MediaPlayer,int)>
<com.aocate.media.AndroidMediaPlayer$1: void onBufferingUpdate(android.media.MediaPlayer,int)> --> <com.aocate.media.MediaPlayer$OnBufferingUpdateListener: void onBufferingUpdate(com.aocate.media.MediaPlayer,int)>
<com.google.ads.e: void a(com.google.ads.h,boolean)> --> <com.google.ads.e$2: void <init>(com.google.ads.e,com.google.ads.f,boolean)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)>
<com.google.ads.AdRequest: boolean isTestDevice(android.content.Context)> --> <com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)>
<com.google.ads.internal.d: void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)> --> <com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)>
<com.jadn.cc.ui.OpmlImport: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.OpmlImport$2: void <init>(com.jadn.cc.ui.OpmlImport)>
<com.google.ads.p: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.s: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)>
<com.aocate.media.MediaPlayer: void finalize()> --> <com.aocate.media.MediaPlayer: void release()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.util.AdUtil: android.util.DisplayMetrics a(android.app.Activity)>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.util.AdUtil: android.util.DisplayMetrics a(android.app.Activity)>
<com.jadn.cc.trace.ExceptionHandler$1: void start()> --> <com.jadn.cc.trace.DefaultExceptionHandler: void <init>(java.lang.Thread$UncaughtExceptionHandler)>
<com.aocate.media.MediaPlayer$4$1: void start()> --> <com.aocate.media.MediaPlayer: com.aocate.media.ServiceBackedMediaPlayer access$100(com.aocate.media.MediaPlayer)>
<com.aocate.media.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)> --> <com.aocate.media.MediaPlayer: com.aocate.media.ServiceBackedMediaPlayer access$100(com.aocate.media.MediaPlayer)>
<com.aocate.media.MediaPlayer$4$2: boolean handleMessage(android.os.Message)> --> <com.aocate.media.MediaPlayer: com.aocate.media.ServiceBackedMediaPlayer access$100(com.aocate.media.MediaPlayer)>
<com.google.ads.internal.c$e: void start()> --> <com.google.ads.internal.d: void a(boolean)>
<com.jadn.cc.ui.SubscriptionEdit: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.SubscriptionEdit$2: void <init>(com.jadn.cc.ui.SubscriptionEdit)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.MetaNet: java.lang.String getMimetype()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void registerOnSeekCompleteCallback(long,com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8)>
<com.google.ads.h$1: void run()> --> <com.google.ads.h: boolean k()>
<com.google.ads.AdView: void <init>(android.app.Activity,com.google.ads.AdSize,java.lang.String)> --> <com.google.ads.internal.b: void a(java.lang.String)>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.internal.b: void a(java.lang.String)>
<com.google.ads.AdRequest: void <clinit>()> --> <com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)>
<com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)> --> <com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)>
<com.aocate.media.ServiceBackedMediaPlayer: float getCurrentSpeedMultiplier()> --> <com.aocate.presto.service.IPlayMedia_0_8: float getCurrentSpeedMultiplier(long)>
<com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8$Stub: com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8 asInterface(android.os.IBinder)> --> <com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8$Stub$Proxy: void <init>(android.os.IBinder)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnSeekCompleteCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.presto.service.IPlayMedia_0_8: void registerOnSeekCompleteCallback(long,com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8)>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.admob.AdMobAdapterExtras: com.google.ads.mediation.admob.AdMobAdapterExtras addExtra(java.lang.String,java.lang.Object)>
<com.google.ads.internal.c$e: void run()> --> <com.google.ads.internal.d: void a(java.util.LinkedList)>
<com.google.ads.e: void a(com.google.ads.h,android.view.View)> --> <com.google.ads.e: com.google.ads.h e()>
<com.google.ads.e: boolean c()> --> <com.google.ads.e: com.google.ads.h e()>
<com.google.ads.e: boolean a(com.google.ads.h,java.lang.String)> --> <com.google.ads.e: com.google.ads.h e()>
<org.apache.harmony.awt.datatransfer.DTK: void appendSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap,java.lang.String[],java.lang.String,java.lang.String)> --> <org.apache.harmony.awt.datatransfer.TextFlavor: void addUnicodeClasses(java.awt.datatransfer.SystemFlavorMap,java.lang.String,java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.internal.g: void n()>
<com.jadn.cc.services.ContentService: void startDownloadingNewPodCasts(int)> --> <com.jadn.cc.services.ContentService$2: void <init>(com.jadn.cc.services.ContentService)>
<myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestTextFlavor(myjava.awt.datatransfer.DataFlavor[])> --> <myjava.awt.datatransfer.DataFlavor: java.util.List sortTextFlavorsByType(java.util.List)>
<com.jadn.cc.ui.TimePickerPreference: void onDialogClosed(boolean)> --> <com.jadn.cc.ui.TimePickerPreference: boolean callChangeListener(java.lang.Object)>
<com.google.ads.util.g$b: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)> --> <com.google.ads.util.g$b: android.webkit.WebResourceResponse a(java.lang.String,android.content.Context)>
<myjava.awt.datatransfer.DataFlavor: java.lang.Object clone()> --> <myjava.awt.datatransfer.DataFlavor: void <init>()>
<com.google.ads.mediation.admob.AdMobAdapter$b: void onReceiveAd(com.google.ads.Ad)> --> <com.google.ads.mediation.MediationInterstitialListener: void onReceivedAd(com.google.ads.mediation.MediationInterstitialAdapter)>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: void onReceivedAd()> --> <com.google.ads.mediation.MediationInterstitialListener: void onReceivedAd(com.google.ads.mediation.MediationInterstitialAdapter)>
<com.google.ads.ag$b: void <clinit>()> --> <com.google.ads.ag$b: void <init>(java.lang.String,int,java.lang.String)>
<com.google.ads.internal.d: void b()> --> <com.google.ads.e: void b()>
<com.jadn.cc.ui.AudioRecorder: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.AudioRecorder$4: void <init>(com.jadn.cc.ui.AudioRecorder)>
<com.jadn.cc.ui.TimePickerPreference: void onSetInitialValue(boolean,java.lang.Object)> --> <com.jadn.cc.ui.TimePickerPreference: java.lang.String getPersistedString(java.lang.String)>
<com.google.ads.e: void c(com.google.ads.h)> --> <com.google.ads.e$6: void <init>(com.google.ads.e)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> --> <com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnBufferingUpdateCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.presto.service.IPlayMedia_0_8: void registerOnBufferingUpdateCallback(long,com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8)>
<com.jadn.cc.ui.PodcastList: void <init>()> --> <com.jadn.cc.ui.PodcastList$9: void <init>(com.jadn.cc.ui.PodcastList)>
<com.google.ads.internal.d: void B()> --> <com.google.ads.internal.g: void c()>
<com.jadn.cc.ui.BaseActivity: void onContentServiceChanged(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.ContentService: void setPlayStatusListener(com.jadn.cc.services.PlayStatusListener)>
<com.google.ads.internal.a: void <clinit>()> --> <com.google.ads.internal.a$1: void <init>()>
<com.google.ads.util.d: boolean equals(java.lang.Object)> --> <com.google.ads.util.d: boolean a(java.lang.String,java.lang.String)>
<com.jadn.cc.services.ContentService: int currentProgress()> --> <com.jadn.cc.services.ContentService: int currentPostion()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.g: java.lang.String f()>
<com.jadn.cc.ui.CarCast: void updateUI()> --> <com.jadn.cc.services.ContentService: java.lang.String getWhereString()>
<myjava.awt.datatransfer.MimeTypeProcessor: java.lang.String assemble(myjava.awt.datatransfer.MimeTypeProcessor$MimeType)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.util.Hashtable access$0(myjava.awt.datatransfer.MimeTypeProcessor$MimeType)>
<myjava.awt.datatransfer.MimeTypeProcessor: void retrieveParam(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.util.Hashtable access$0(myjava.awt.datatransfer.MimeTypeProcessor$MimeType)>
<org.apache.harmony.awt.datatransfer.DTK: org.apache.harmony.awt.datatransfer.DTK getDTK()> --> <org.apache.harmony.awt.datatransfer.DTK: org.apache.harmony.awt.datatransfer.DTK createDTK()>
<com.jadn.cc.ui.SearchResults: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.SearchResults: void finish()>
<com.jadn.cc.ui.Subscriptions: boolean onContextItemSelected(android.view.MenuItem)> --> <com.jadn.cc.services.DownloadHistory: int eraseHistory(java.lang.String)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void setEnableSpeedAdjustment(long,boolean)>
<com.google.ads.util.AdUtil: void a(java.net.HttpURLConnection,android.content.Context)> --> <com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)>
<com.google.ads.util.AdUtil: void a(android.webkit.WebView)> --> <com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)>
<com.google.ads.internal.d: void a(com.google.ads.c)> --> <com.google.ads.c: boolean d()>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.d: int m()>
<com.jadn.cc.services.ContentService: void setApplicationContext(android.content.Context)> --> <com.jadn.cc.services.ContentService: boolean fullReset()>
<com.jadn.cc.services.ContentService: void play()> --> <com.jadn.cc.services.ContentService: boolean fullReset()>
<com.jadn.cc.services.ContentService: void deletePodcast(int)> --> <com.jadn.cc.services.ContentService: boolean fullReset()>
<com.jadn.cc.ui.PodcastList: void showPodcasts()> --> <com.jadn.cc.services.MetaHolder: void <init>(android.content.Context)>
<com.jadn.cc.ui.PodcastList$11: boolean onLongClick(android.view.View)> --> <com.jadn.cc.services.MetaHolder: void <init>(android.content.Context)>
<com.jadn.cc.ui.PodcastList$10: void onClick(android.view.View)> --> <com.jadn.cc.services.MetaHolder: void <init>(android.content.Context)>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.services.MetaHolder: void <init>(android.content.Context)>
<com.jadn.cc.ui.PodcastList: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.services.MetaHolder: void <init>(android.content.Context)>
<com.aocate.media.MediaPlayer: float getCurrentSpeedMultiplier()> --> <com.aocate.media.MediaPlayerImpl: float getCurrentSpeedMultiplier()>
<org.apache.harmony.awt.datatransfer.DataProxy: java.awt.image.BufferedImage createBufferedImage(org.apache.harmony.awt.datatransfer.RawBitmap)> --> <org.apache.harmony.awt.datatransfer.DataProxy: boolean isRGB(org.apache.harmony.awt.datatransfer.RawBitmap)>
<com.google.ads.p: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.g: void b(java.lang.String)>
<com.jadn.cc.services.ContentService: void updateRemoteDisplay()> --> <com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat: com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat putLong(int,long)>
<org.apache.harmony.awt.internal.nls.Messages$1: java.lang.Object start()> --> <org.apache.harmony.awt.internal.nls.Messages$1: java.lang.Object run()>
<com.aocate.media.AndroidMediaPlayer: void <init>(com.aocate.media.MediaPlayer,android.content.Context)> --> <com.aocate.media.AndroidMediaPlayer$1: void <init>(com.aocate.media.AndroidMediaPlayer)>
<com.google.ads.i: void <init>(com.google.ads.h,android.app.Activity,java.lang.String,com.google.ads.AdRequest,java.util.HashMap)> --> <com.google.ads.i: boolean a(java.util.Map)>
<com.google.ads.AdActivity: void newAdVideoView(int,int,int,int)> --> <com.google.ads.internal.d: com.google.ads.internal.i k()>
<com.google.ads.internal.c: void e()> --> <com.google.ads.internal.d: com.google.ads.internal.i k()>
<com.google.ads.mediation.MediationServerParameters: void load(java.util.Map)> --> <com.google.ads.mediation.MediationServerParameters: void a()>
<com.google.ads.mediation.admob.AdMobAdapter$b: void onPresentScreen(com.google.ads.Ad)> --> <com.google.ads.mediation.MediationInterstitialListener: void onPresentScreen(com.google.ads.mediation.MediationInterstitialAdapter)>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: void onPresentScreen()> --> <com.google.ads.mediation.MediationInterstitialListener: void onPresentScreen(com.google.ads.mediation.MediationInterstitialAdapter)>
<com.jadn.cc.ui.SubscriptionEdit$3: void handleMessage(android.os.Message)> --> <com.jadn.cc.ui.SubscriptionEdit: java.lang.String access$000(com.jadn.cc.ui.SubscriptionEdit)>
<com.jadn.cc.ui.SubscriptionEdit$1: void onClick(android.view.View)> --> <com.jadn.cc.ui.SubscriptionEdit: java.lang.String access$000(com.jadn.cc.ui.SubscriptionEdit)>
<com.jadn.cc.trace.ExceptionHandler$1: void start()> --> <com.jadn.cc.trace.ExceptionHandler$1: void run()>
<com.jadn.cc.ui.CarCast: void updateUI()> --> <com.jadn.cc.services.ContentService: java.lang.String getCurrentSubscriptionName()>
<com.jadn.cc.ui.CarCast: void updateUI()> --> <com.jadn.cc.ui.CarCast: java.lang.String moreSpaceSuggestions()>
<com.aocate.media.ServiceBackedMediaPlayer: void reset()> --> <com.aocate.presto.service.IPlayMedia_0_8: void reset(long)>
<myjava.awt.datatransfer.MimeTypeProcessor: void retrieveParam(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor: java.lang.String retrieveToken(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)>
<myjava.awt.datatransfer.MimeTypeProcessor: void retrieveType(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor: java.lang.String retrieveToken(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)>
<com.jadn.cc.services.ContentService: boolean isIdle()> --> <com.jadn.cc.services.DownloadHelper: boolean isRunning()>
<com.jadn.cc.services.ContentService: boolean isDownloading()> --> <com.jadn.cc.services.DownloadHelper: boolean isRunning()>
<com.jadn.cc.services.ContentService: void startDownloadingNewPodCasts(int)> --> <com.jadn.cc.services.DownloadHelper: boolean isRunning()>
<com.jadn.cc.services.DownloadHelper: java.lang.String getEncodedStatus()> --> <com.jadn.cc.services.DownloadHelper: boolean isRunning()>
<com.google.ads.e: boolean e(com.google.ads.h)> --> <com.google.ads.e: boolean d()>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.e: boolean d()>
<com.jadn.cc.services.ContentService: void deleteUpTo(int)> --> <com.aocate.media.MediaPlayer: void reset()>
<com.jadn.cc.services.ContentService: void moveTo(double)> --> <com.aocate.media.MediaPlayer: void reset()>
<com.jadn.cc.services.ContentService: void tryToRestoreLocation()> --> <com.aocate.media.MediaPlayer: void reset()>
<com.jadn.cc.services.ContentService: boolean fullReset()> --> <com.aocate.media.MediaPlayer: void reset()>
<com.jadn.cc.services.ContentService: void next(boolean)> --> <com.aocate.media.MediaPlayer: void reset()>
<com.jadn.cc.services.FileSubscriptionHelper: boolean removeSubscription(com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: int indexOfSubscriptionURL(java.util.List,java.lang.String)>
<com.jadn.cc.services.FileSubscriptionHelper: boolean toggleSubscription(com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: int indexOfSubscriptionURL(java.util.List,java.lang.String)>
<com.jadn.cc.services.FileSubscriptionHelper: boolean containsSubscriptionURL(java.util.List,java.lang.String)> --> <com.jadn.cc.services.FileSubscriptionHelper: int indexOfSubscriptionURL(java.util.List,java.lang.String)>
<com.jadn.cc.services.FileSubscriptionHelper: boolean editSubscription(com.jadn.cc.core.Subscription,com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: int indexOfSubscriptionURL(java.util.List,java.lang.String)>
<com.jadn.cc.ui.CarCast: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.CarCast: void setTitle(java.lang.CharSequence)>
<com.jadn.cc.ui.DownloadProgress: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.DownloadProgress: void setContentView(int)>
<com.google.ads.util.g$b: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)> --> <com.google.ads.internal.i: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.core.AudioFocusHelper: void <init>(android.content.Context,com.jadn.cc.core.MusicFocusable)>
<com.google.ads.util.g$a: boolean a(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean)> --> <com.google.ads.util.g$a: void a(android.app.AlertDialog$Builder,java.lang.String,android.webkit.JsResult)>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection)> --> <com.google.ads.internal.f: void h(java.net.HttpURLConnection)>
<myjava.awt.datatransfer.DataFlavor: boolean isFlavorTextType()> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getPrimaryType()>
<myjava.awt.datatransfer.DataFlavor: void init(java.lang.String,java.lang.String,java.lang.ClassLoader)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getPrimaryType()>
<myjava.awt.datatransfer.DataFlavor: java.lang.String getPrimaryType()> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getPrimaryType()>
<myjava.awt.datatransfer.DataFlavor: java.lang.String getKeyInfo()> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getPrimaryType()>
<myjava.awt.datatransfer.DataFlavor: boolean equals(myjava.awt.datatransfer.DataFlavor)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: java.lang.String getPrimaryType()>
<com.jadn.cc.util.Mailer: boolean send()> --> <javax.mail.internet.MimeMessage: void setFrom(javax.mail.Address)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> --> <com.google.ads.ae: boolean a(android.content.Context,long)>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.AdVideoView: void d()>
<com.google.ads.searchads.SearchAdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.searchads.SearchAdRequest: java.lang.String a(int)>
<com.jadn.cc.ui.Subscriptions$2: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.services.ContentService: void resetToDemoSubscriptions()>
<com.jadn.cc.ui.Subscriptions: boolean onContextItemSelected(android.view.MenuItem)> --> <com.jadn.cc.ui.Subscriptions: void startActivityForResult(android.content.Intent,int)>
<com.jadn.cc.ui.Subscriptions: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.Subscriptions: void startActivityForResult(android.content.Intent,int)>
<com.google.ads.internal.d: void a()> --> <com.google.ads.internal.AdWebView: void setWebViewClient(android.webkit.WebViewClient)>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.AdWebView: void setWebViewClient(android.webkit.WebViewClient)>
<com.jadn.cc.services.MetaHolder: void loadMeta(java.io.File)> --> <com.jadn.cc.services.MetaFile: java.lang.String getBaseFilename()>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.MetaFile: java.lang.String getBaseFilename()>
<com.google.ads.util.b: void a(java.lang.String)> --> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.util.b: void c(java.lang.String)> --> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.util.b: void b(java.lang.String)> --> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.util.b: void e(java.lang.String)> --> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.google.ads.util.b: void d(java.lang.String)> --> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)>
<com.jadn.cc.services.ContentService: void deleteAllSubscriptions()> --> <com.jadn.cc.services.FileSubscriptionHelper: void deleteAllSubscriptions()>
<com.google.ads.internal.AdWebView$1: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)> --> <com.google.ads.util.AdUtil: boolean a(android.content.Intent,android.content.Context)>
<com.jadn.cc.ui.Subscriptions: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Subscriptions: void registerForContextMenu(android.view.View)>
<com.jadn.cc.services.AlarmService$1: void start()> --> <com.jadn.cc.services.AlarmService$1$1: void <init>(com.jadn.cc.services.AlarmService$1)>
<com.google.ads.x: void <init>()> --> <com.google.ads.AdActivity$StaticMethodWrapper: void <init>()>
<com.google.ads.AdActivity: void <clinit>()> --> <com.google.ads.AdActivity$StaticMethodWrapper: void <init>()>
<com.google.ads.internal.d: void <init>(com.google.ads.m,boolean)> --> <com.google.ads.e: void <init>(com.google.ads.internal.d)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> --> <com.google.ads.util.AdUtil: org.json.JSONArray a(java.util.Set)>
<com.google.ads.util.AdUtil: org.json.JSONArray a(java.util.Set)> --> <com.google.ads.util.AdUtil: org.json.JSONArray a(java.util.Set)>
<com.google.ads.internal.c: void start()> --> <com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)>
<com.jadn.cc.ui.CarCast: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.BumpCast: void <init>(com.jadn.cc.ui.CarCast,boolean)>
<com.jadn.cc.ui.DownloadProgress: void doDownloads()> --> <com.jadn.cc.ui.DownloadProgress: void reset()>
<com.jadn.cc.ui.DownloadProgress: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.DownloadProgress: void reset()>
<com.jadn.cc.ui.OpmlImport$1: void onClick(android.view.View)> --> <com.jadn.cc.ui.OpmlImport: void importOpml()>
<com.jadn.cc.ui.OpmlImport$2: void onClick(android.view.View)> --> <com.jadn.cc.ui.OpmlImport: void importOpml()>
<com.jadn.cc.util.MailRecordings: void doIt(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.util.Mailer: void setBody(java.lang.String)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.g: java.lang.String j()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.AdRequest$Gender: int ordinal()>
<com.jadn.cc.services.ContentService: void onDestroy()> --> <com.jadn.cc.services.ContentService: java.lang.Object getSystemService(java.lang.String)>
<com.jadn.cc.services.ContentService: void updateNotification(java.lang.String)> --> <com.jadn.cc.services.ContentService: java.lang.Object getSystemService(java.lang.String)>
<com.jadn.cc.util.MailRecordings: void doIt(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.ContentService: java.lang.Object getSystemService(java.lang.String)>
<com.jadn.cc.services.ContentService$2: void start()> --> <com.jadn.cc.services.ContentService: java.lang.Object getSystemService(java.lang.String)>
<com.jadn.cc.services.ContentService: void startDownloadingNewPodCasts(int)> --> <com.jadn.cc.services.ContentService: java.lang.Object getSystemService(java.lang.String)>
<com.jadn.cc.services.ContentService$3: void start()> --> <com.jadn.cc.services.ContentService: java.lang.Object getSystemService(java.lang.String)>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.services.ContentService: java.lang.Object getSystemService(java.lang.String)>
<com.jadn.cc.services.ContentService: void doDownloadCompletedNotification(int)> --> <com.jadn.cc.services.ContentService: java.lang.Object getSystemService(java.lang.String)>
<com.jadn.cc.ui.SubscriptionEdit$1: void onClick(android.view.View)> --> <com.jadn.cc.ui.SubscriptionEdit: void setResult(int)>
<com.jadn.cc.ui.DownloadProgress: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.DownloadProgress$2: void <init>(com.jadn.cc.ui.DownloadProgress)>
<com.jadn.cc.ui.Stats: void onContentService()> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.jadn.cc.ui.Search: void onCreate(android.os.Bundle)> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.jadn.cc.ui.Subscriptions: void onCreate(android.os.Bundle)> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.jadn.cc.services.ContentService: java.lang.String getPodcastEmailSummary()> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.jadn.cc.ui.SearchResults: void onCreate(android.os.Bundle)> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.jadn.cc.ui.Settings: void onCreate(android.os.Bundle)> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.jadn.cc.services.DownloadHelper: java.io.InputStream getInputStream(java.net.URL)> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.jadn.cc.ui.CarCast: void updateUI()> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.jadn.cc.ui.Splash: void onCreate(android.os.Bundle)> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.jadn.cc.ui.PodcastList: void onCreate(android.os.Bundle)> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.jadn.cc.ui.CarCast: void onCreate(android.os.Bundle)> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.jadn.cc.ui.FeedbackHelp: void email(android.view.View)> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.jadn.cc.ui.CarCast: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.jadn.cc.ui.AudioRecorder: void onCreate(android.os.Bundle)> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.jadn.cc.core.CarCastApplication: void <clinit>()> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getAppTitle()>
<com.google.ads.internal.c: void b()> --> <com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)>
<com.google.ads.internal.c: void start()> --> <com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)>
<org.apache.harmony.awt.datatransfer.DataSnapshot: void <init>(org.apache.harmony.awt.datatransfer.DataProvider)> --> <org.apache.harmony.awt.datatransfer.DataProvider: java.lang.String getURL()>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getURL(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProvider: java.lang.String getURL()>
<com.aocate.media.ServiceBackedMediaPlayer: void pause()> --> <com.aocate.presto.service.IPlayMedia_0_8: void pause(long)>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.c: java.util.List f()>
<com.aocate.media.ServiceBackedMediaPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.aocate.media.ServiceBackedMediaPlayer: void access$300(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getPlainText(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProvider: java.lang.String getText()>
<org.apache.harmony.awt.datatransfer.DataSnapshot: void <init>(org.apache.harmony.awt.datatransfer.DataProvider)> --> <org.apache.harmony.awt.datatransfer.DataProvider: java.lang.String getText()>
<myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor getTextPlainUnicodeFlavor()> --> <org.apache.harmony.awt.datatransfer.DTK: org.apache.harmony.awt.datatransfer.DTK getDTK()>
<myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestByCharset(java.util.List)> --> <org.apache.harmony.awt.datatransfer.DTK: org.apache.harmony.awt.datatransfer.DTK getDTK()>
<myjava.awt.datatransfer.DataFlavor: java.lang.String getCharset()> --> <org.apache.harmony.awt.datatransfer.DTK: org.apache.harmony.awt.datatransfer.DTK getDTK()>
<com.jadn.cc.core.Util: void downloadPodcast(java.lang.String,com.jadn.cc.services.EnclosureHandler)> --> <com.jadn.cc.core.Util: java.lang.String getCharset(java.lang.String)>
<com.jadn.cc.core.Util: void findAvailablePodcasts(java.lang.String,com.jadn.cc.services.EnclosureHandler)> --> <com.jadn.cc.core.Util: java.lang.String getCharset(java.lang.String)>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.core.WifiConnectedReceiver: void registerForWifiBroadcasts(android.content.Context)>
<com.jadn.cc.ui.Bumper: void onClick(android.view.View)> --> <com.jadn.cc.ui.CarCast: com.jadn.cc.services.ContentService getContentService()>
<com.jadn.cc.ui.BumpCast: void onClick(android.view.View)> --> <com.jadn.cc.ui.CarCast: com.jadn.cc.services.ContentService getContentService()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: com.aocate.presto.service.IPlayMedia_0_8 asInterface(android.os.IBinder)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void <init>(android.os.IBinder)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.g: boolean k()>
<com.jadn.cc.ui.AudioRecorder$1: void start()> --> <com.jadn.cc.ui.AudioRecorder$1: void run()>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.internal.b: void b(java.lang.String)>
<com.google.ads.internal.d: void u()> --> <com.google.ads.AdListener: void onLeaveApplication(com.google.ads.Ad)>
<com.aocate.media.ServiceBackedMediaPlayer$2: void <init>(com.aocate.media.ServiceBackedMediaPlayer)> --> <com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8$Stub: void <init>()>
<com.google.ads.internal.f: void e(java.net.HttpURLConnection)> --> <com.google.ads.internal.d: void a(long)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void registerOnSpeedAdjustmentAvailableChangedCallback(long,com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8)>
<com.google.ads.AdActivity: void moveAdVideoView(int,int,int,int)> --> <com.google.ads.internal.AdVideoView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.jadn.cc.services.ItunesSearchHelper: void start()> --> <com.jadn.cc.services.ItunesSearchHelper: void run()>
<com.jadn.cc.ui.OpmlLocator: void start()> --> <com.jadn.cc.ui.OpmlLocator: android.content.Context getApplicationContext()>
<com.jadn.cc.ui.OpmlLocator$1: void onClick(android.view.View)> --> <com.jadn.cc.ui.OpmlLocator: android.content.Context getApplicationContext()>
<com.jadn.cc.ui.OpmlLocator: void sorry(java.lang.String)> --> <com.jadn.cc.ui.OpmlLocator: android.content.Context getApplicationContext()>
<com.google.ads.util.i$c: void a(java.lang.Object)> --> <com.google.ads.util.i: java.lang.String toString()>
<com.google.ads.util.i$d: java.lang.String toString()> --> <com.google.ads.util.i: java.lang.String toString()>
<com.google.ads.util.i$a: java.lang.String toString()> --> <com.google.ads.util.i: java.lang.String toString()>
<com.google.ads.util.i: void <init>()> --> <com.google.ads.util.i: java.lang.String toString()>
<com.jadn.cc.core.WifiConnectedReceiver$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.jadn.cc.services.ContentService: void publishRecordings(android.app.Activity)>
<com.jadn.cc.ui.AudioRecorder: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.services.ContentService: void publishRecordings(android.app.Activity)>
<com.google.ads.s: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.s: java.lang.Runnable a(java.lang.String,android.webkit.WebView)>
<com.jadn.cc.services.FileSubscriptionHelper: com.jadn.cc.core.Subscription convertProperty(java.lang.String,java.lang.String)> --> <com.jadn.cc.core.Subscription: void <init>(java.lang.String,java.lang.String)>
<com.jadn.cc.ui.SearchResults: java.util.List getResults()> --> <com.jadn.cc.core.Subscription: void <init>(java.lang.String,java.lang.String)>
<com.jadn.cc.ui.SearchResults: void add(int)> --> <com.jadn.cc.core.Subscription: void <init>(java.lang.String,java.lang.String)>
<com.jadn.cc.services.FileSubscriptionHelper: java.util.List resetToDemoSubscriptions()> --> <com.jadn.cc.core.Subscription: void <init>(java.lang.String,java.lang.String)>
<com.jadn.cc.ui.OpmlImport: void importOpml()> --> <com.jadn.cc.core.Subscription: void <init>(java.lang.String,java.lang.String)>
<com.jadn.cc.services.FileSubscriptionHelper: java.util.List readLegacySites(java.io.InputStream)> --> <com.jadn.cc.core.Subscription: void <init>(java.lang.String,java.lang.String)>
<com.google.ads.util.AdUtil: java.lang.String c(java.lang.String)> --> <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataSource: org.apache.harmony.awt.datatransfer.RawBitmap getImageBitmap32(java.awt.image.BufferedImage)> --> <org.apache.harmony.awt.datatransfer.RawBitmap: void <init>(int,int,int,int,int,int,int,java.lang.Object)>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.a: java.lang.String a()>
<com.google.ads.AdActivity: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)> --> <com.google.ads.AdActivity$StaticMethodWrapper: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)>
<com.google.ads.x: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.AdActivity$StaticMethodWrapper: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)>
<com.aocate.media.MediaPlayer: void setPlaybackPitch(float)> --> <com.aocate.media.MediaPlayerImpl: void setPlaybackPitch(float)>
<com.google.ads.internal.f: void b()> --> <com.google.ads.util.AdUtil: void a(java.net.HttpURLConnection,android.content.Context)>
<com.google.ads.aa: void start()> --> <com.google.ads.util.AdUtil: void a(java.net.HttpURLConnection,android.content.Context)>
<com.google.ads.util.g$b: android.webkit.WebResourceResponse a(java.lang.String,android.content.Context)> --> <com.google.ads.util.AdUtil: void a(java.net.HttpURLConnection,android.content.Context)>
<com.jadn.cc.ui.CarCast: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.CarCast$4: void <init>(com.jadn.cc.ui.CarCast,android.widget.ImageButton)>
<com.google.ads.internal.h: void <clinit>()> --> <com.google.ads.internal.h: void <init>(com.google.ads.AdSize,boolean)>
<com.google.ads.internal.h: com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context)> --> <com.google.ads.internal.h: void <init>(com.google.ads.AdSize,boolean)>
<com.jadn.cc.services.EnclosureHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> --> <org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>
<com.jadn.cc.services.ContentService: void initDirs()> --> <com.jadn.cc.services.FileSubscriptionHelper: void <init>(java.io.File,java.io.File)>
<com.google.ads.m: com.google.ads.m a(com.google.ads.Ad,java.lang.String,android.app.Activity,android.view.ViewGroup,com.google.ads.AdSize)> --> <com.google.ads.internal.h: com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context)>
<com.google.ads.internal.h: com.google.ads.internal.h a(com.google.ads.AdSize)> --> <com.google.ads.internal.h: com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context)>
<myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestTextFlavor(myjava.awt.datatransfer.DataFlavor[])> --> <myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestFlavorWCharset(java.util.List)>
<com.aocate.media.MediaPlayer$4$1: void start()> --> <com.aocate.media.MediaPlayer$4$1: void run()>
<com.jadn.cc.ui.DownloadProgress: void updateFromString(java.lang.String)> --> <com.jadn.cc.ui.DownloadProgress: android.view.View findViewById(int)>
<com.jadn.cc.ui.DownloadProgress: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.DownloadProgress: android.view.View findViewById(int)>
<com.jadn.cc.ui.DownloadProgress: void doDownloads()> --> <com.jadn.cc.ui.DownloadProgress: android.view.View findViewById(int)>
<com.jadn.cc.ui.DownloadProgress: void reset()> --> <com.jadn.cc.ui.DownloadProgress: android.view.View findViewById(int)>
<com.jadn.cc.ui.DownloadProgress: void onContentService()> --> <com.jadn.cc.ui.DownloadProgress: android.view.View findViewById(int)>
<com.jadn.cc.ui.DownloadProgress: void start()> --> <com.jadn.cc.ui.DownloadProgress: android.view.View findViewById(int)>
<myjava.awt.datatransfer.DataFlavor: boolean isFlavorTextType()> --> <myjava.awt.datatransfer.DataFlavor: boolean isByteCodeFlavor()>
<com.google.ads.internal.d: void t()> --> <com.google.ads.AdListener: void onPresentScreen(com.google.ads.Ad)>
<com.google.ads.mediation.admob.AdMobAdapter: void destroy()> --> <com.google.ads.mediation.admob.AdMobAdapter: void a()>
<myjava.awt.datatransfer.DataFlavor: void <init>(java.lang.String,java.lang.String)> --> <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>
<myjava.awt.datatransfer.DataFlavor: void init(java.lang.String,java.lang.String,java.lang.ClassLoader)> --> <org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object)>
<com.aocate.media.ServiceBackedMediaPlayer: void setPitchStepsAdjustment(float)> --> <com.aocate.presto.service.IPlayMedia_0_8: void setPitchStepsAdjustment(long,float)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> --> <com.google.ads.util.AdUtil: boolean a(android.net.Uri)>
<com.jadn.cc.services.MetaFile: void computeDuration()> --> <com.jadn.cc.services.MetaFile: void setDuration(int)>
<com.google.ads.ae$a: void start()> --> <com.google.ads.ae$a: void run()>
<com.aocate.media.MediaPlayer: void setWakeMode(android.content.Context,int)> --> <com.aocate.media.MediaPlayerImpl: void setWakeMode(android.content.Context,int)>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void setWakeMode(android.content.Context,int)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void setDataSourceUri(long,android.net.Uri)>
<myjava.awt.datatransfer.MimeTypeProcessor: java.lang.String retrieveToken(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor: boolean isTSpecialChar(char)>
<com.google.ads.AdActivity: void a(com.google.ads.internal.AdWebView,boolean,int,boolean)> --> <com.google.ads.util.g: void a(android.view.View)>
<com.jadn.cc.services.ContentService: void disableNotification()> --> <com.jadn.cc.services.ContentService: void stopForegroundCompat()>
<com.aocate.media.ServiceBackedMediaPlayer: int getDuration()> --> <com.aocate.presto.service.IPlayMedia_0_8: int getDuration(long)>
<com.google.ads.util.AdUtil: java.lang.String a(android.content.Context)> --> <com.google.ads.util.AdUtil: boolean c()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.util.AdUtil: boolean c()>
<com.google.ads.util.AdUtil: com.google.ads.util.AdUtil$a g(android.content.Context)> --> <com.google.ads.util.AdUtil: boolean c()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.util.AdUtil: boolean c()>
<com.google.ads.util.c: byte[] a(byte[],int,int,int)> --> <com.google.ads.util.c$b: void <init>(int,byte[])>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.AdActivity: void moveAdVideoView(int,int,int,int)>
<com.google.ads.util.AdUtil: java.lang.String a(android.location.Location)> --> <com.google.ads.util.AdUtil: java.lang.String c(java.lang.String)>
<com.jadn.cc.core.CarCastApplication: void <init>()> --> <com.jadn.cc.core.CarCastApplication$1: void <init>(com.jadn.cc.core.CarCastApplication)>
<com.aocate.presto.service.IOnCompletionListenerCallback_0_8$Stub: void <init>()> --> <com.aocate.presto.service.IOnCompletionListenerCallback_0_8$Stub: void attachInterface(android.os.IInterface,java.lang.String)>
<com.jadn.cc.ui.SubscriptionEdit: void testUrl()> --> <com.jadn.cc.services.EnclosureHandler: void setMax(int)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.EnclosureHandler: void setMax(int)>
<com.google.ads.AdActivity: void a(com.google.ads.internal.AdWebView,boolean,int,boolean)> --> <com.google.ads.AdActivity: android.view.Window getWindow()>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnInfoCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.presto.service.IPlayMedia_0_8: void registerOnInfoCallback(long,com.aocate.presto.service.IOnInfoListenerCallback_0_8)>
<com.jadn.cc.services.ContentService: void updateRemoteDisplay()> --> <com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat: void apply()>
<com.google.ads.mediation.MediationAdRequest: java.util.Set getKeywords()> --> <com.google.ads.AdRequest: java.util.Set getKeywords()>
<com.aocate.media.MediaPlayer: void openPrestoMarketIntent()> --> <com.aocate.media.MediaPlayer: void openPrestoMarketIntent(android.content.Context)>
<com.jadn.cc.ui.AudioRecorder$3: void onClick(android.view.View)> --> <com.jadn.cc.ui.AudioRecorder: void access$100(com.jadn.cc.ui.AudioRecorder,boolean)>
<com.jadn.cc.ui.AudioRecorder$2: void onClick(android.view.View)> --> <com.jadn.cc.ui.AudioRecorder: void access$100(com.jadn.cc.ui.AudioRecorder,boolean)>
<com.jadn.cc.ui.AudioRecorder$4: void onClick(android.view.View)> --> <com.jadn.cc.ui.AudioRecorder: void access$100(com.jadn.cc.ui.AudioRecorder,boolean)>
<org.apache.harmony.awt.datatransfer.DataSnapshot: int[] getRawBitmapHeader()> --> <org.apache.harmony.awt.datatransfer.RawBitmap: int[] getHeader()>
<org.apache.harmony.awt.datatransfer.DragSourceEventProxy: void start()> --> <org.apache.harmony.awt.datatransfer.DragSourceEventProxy: void run()>
<myjava.awt.datatransfer.DataFlavor: int hashCode()> --> <myjava.awt.datatransfer.DataFlavor: java.lang.String getKeyInfo()>
<com.google.ads.i: void a(com.google.ads.mediation.MediationAdapter)> --> <com.google.ads.mediation.MediationAdapter: java.lang.Class getServerParametersType()>
<com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8$Stub: void onSpeedAdjustmentAvailableChanged(boolean)>
<com.aocate.media.MediaPlayer: void release()> --> <com.aocate.media.AndroidMediaPlayer: void release()>
<com.aocate.media.MediaPlayer: float getMaxSpeedMultiplier()> --> <com.aocate.media.MediaPlayerImpl: float getMaxSpeedMultiplier()>
<com.jadn.cc.services.DownloadHelper: java.io.InputStream getInputStream(java.net.URL)> --> <com.jadn.cc.services.DownloadHelper: java.io.InputStream getInputStream(java.net.URL)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.DownloadHelper: java.io.InputStream getInputStream(java.net.URL)>
<com.google.ads.internal.c: void start()> --> <com.google.ads.internal.c: void f(java.lang.String)>
<com.jadn.cc.ui.SubscriptionEdit: void testUrl()> --> <com.jadn.cc.ui.SubscriptionEdit: android.view.View findViewById(int)>
<com.jadn.cc.ui.SubscriptionEdit$3: void handleMessage(android.os.Message)> --> <com.jadn.cc.ui.SubscriptionEdit: android.view.View findViewById(int)>
<com.jadn.cc.ui.SubscriptionEdit: void onContentService()> --> <com.jadn.cc.ui.SubscriptionEdit: android.view.View findViewById(int)>
<com.jadn.cc.ui.SubscriptionEdit: java.lang.String getURL()> --> <com.jadn.cc.ui.SubscriptionEdit: android.view.View findViewById(int)>
<com.jadn.cc.ui.SubscriptionEdit: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.SubscriptionEdit: android.view.View findViewById(int)>
<com.jadn.cc.ui.SubscriptionEdit$1: void onClick(android.view.View)> --> <com.jadn.cc.ui.SubscriptionEdit: android.view.View findViewById(int)>
<com.jadn.cc.ui.FeedbackHelp: void email(android.view.View)> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getVersion()>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getVersion()>
<com.jadn.cc.ui.Settings: void onCreate(android.os.Bundle)> --> <com.jadn.cc.core.CarCastApplication: java.lang.String getVersion()>
<com.google.ads.AdActivity: void a(java.lang.String,java.lang.Throwable)> --> <com.google.ads.AdActivity: void finish()>
<com.google.ads.internal.AdWebView: void a()> --> <com.google.ads.AdActivity: void finish()>
<com.google.ads.AdActivity: void onActivityResult(int,int,android.content.Intent)> --> <com.google.ads.AdActivity: void finish()>
<com.google.ads.AdActivity: void a(java.lang.String)> --> <com.google.ads.AdActivity: void finish()>
<com.google.ads.AdActivity: void onWindowFocusChanged(boolean)> --> <com.google.ads.AdActivity: void finish()>
<com.google.ads.AdActivity: void onClick(android.view.View)> --> <com.google.ads.AdActivity: void finish()>
<com.google.ads.m: com.google.ads.m a(com.google.ads.Ad,java.lang.String,android.app.Activity,android.view.ViewGroup,com.google.ads.AdSize)> --> <com.google.ads.m: void <init>(com.google.ads.l,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h)>
<com.jadn.cc.ui.OpmlImport: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.OpmlImport: void setContentView(int)>
<com.aocate.media.ServiceBackedMediaPlayer: void start()> --> <com.aocate.presto.service.IPlayMedia_0_8: void start(long)>
<com.aocate.media.ServiceBackedMediaPlayer: void access$200(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void setOnCompletionCallback(com.aocate.presto.service.IPlayMedia_0_8)>
<com.aocate.media.MediaPlayer: void <init>(android.content.Context,boolean)> --> <com.aocate.media.MediaPlayer$2: void <init>(com.aocate.media.MediaPlayer)>
<com.aocate.media.ServiceBackedMediaPlayer: void setEnableSpeedAdjustment(boolean)> --> <com.aocate.presto.service.IPlayMedia_0_8: void setEnableSpeedAdjustment(long,boolean)>
<com.jadn.cc.services.ContentService: void exportOPML(java.io.FileOutputStream)> --> <com.jadn.cc.util.ExportOpml: void export(java.util.List,java.io.FileOutputStream)>
<com.google.ads.e: void a(com.google.ads.h,android.view.View)> --> <com.google.ads.e$3: void <init>(com.google.ads.e,android.view.View,com.google.ads.f)>
<com.google.ads.internal.c$e: void start()> --> <com.google.ads.internal.d: void a(int)>
<com.google.ads.util.AdUtil: org.json.JSONArray a(java.util.Set)> --> <org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<com.google.ads.internal.f: void <init>(com.google.ads.internal.c,com.google.ads.internal.d)> --> <com.google.ads.internal.f: void <init>(com.google.ads.internal.c,com.google.ads.internal.d,com.google.ads.internal.f$a)>
<com.aocate.media.ServiceBackedMediaPlayer: boolean canSetPitch()> --> <com.aocate.presto.service.IPlayMedia_0_8: boolean canSetPitch(long)>
<com.jadn.cc.ui.Downloader: void run()> --> <com.jadn.cc.services.ContentService: java.lang.String getDownloadProgress()>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getFileList(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProvider: java.lang.String[] getFileList()>
<org.apache.harmony.awt.datatransfer.DataSnapshot: void <init>(org.apache.harmony.awt.datatransfer.DataProvider)> --> <org.apache.harmony.awt.datatransfer.DataProvider: java.lang.String[] getFileList()>
<com.aocate.media.MediaPlayer: void <init>(android.content.Context,boolean)> --> <com.aocate.media.MediaPlayer$1: void <init>(com.aocate.media.MediaPlayer)>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void reset()>
<com.aocate.media.MediaPlayer: void reset()> --> <com.aocate.media.MediaPlayerImpl: void reset()>
<com.google.ads.internal.c: void a()> --> <com.google.ads.internal.f: void a()>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection,int)> --> <com.google.ads.internal.f: void a()>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)> --> <com.google.ads.internal.f: void a()>
<com.google.ads.internal.c$a: void start()> --> <com.google.ads.internal.f: void a()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void registerOnPitchAdjustmentAvailableChangedCallback(long,com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8)> --> <com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8: android.os.IBinder asBinder()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void unregisterOnPitchAdjustmentAvailableChangedCallback(long,com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8)> --> <com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8: android.os.IBinder asBinder()>
<com.google.ads.internal.j$a: void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture)> --> <com.google.ads.internal.d: java.lang.String c()>
<com.google.ads.ae$b: void start()> --> <com.google.ads.ae$c: void <init>(android.webkit.WebView,boolean)>
<com.jadn.cc.ui.AudioRecorder: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.AudioRecorder: void setReadyToRecord(boolean)>
<com.jadn.cc.ui.AudioRecorder: void access$100(com.jadn.cc.ui.AudioRecorder,boolean)> --> <com.jadn.cc.ui.AudioRecorder: void setReadyToRecord(boolean)>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.d: void v()>
<com.google.ads.util.AdUtil: int a(android.content.Context,android.util.DisplayMetrics)> --> <com.google.ads.util.e: int a(android.content.Context,android.util.DisplayMetrics)>
<org.apache.harmony.awt.ContextStorage$ContextLock: void <init>(org.apache.harmony.awt.ContextStorage,org.apache.harmony.awt.ContextStorage$ContextLock)> --> <org.apache.harmony.awt.ContextStorage$ContextLock: void <init>(org.apache.harmony.awt.ContextStorage)>
<com.google.ads.AdActivity: void newAdVideoView(int,int,int,int)> --> <com.google.ads.AdActivity: android.widget.RelativeLayout$LayoutParams a(int,int,int,int)>
<com.google.ads.AdActivity: void moveAdVideoView(int,int,int,int)> --> <com.google.ads.AdActivity: android.widget.RelativeLayout$LayoutParams a(int,int,int,int)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getFileList(java.awt.datatransfer.DataFlavor)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void setPlaybackSpeed(long,float)>
<com.jadn.cc.services.ContentService: int onStartCommand(android.content.Intent,int,int)> --> <com.jadn.cc.services.PlayStatusListener: void playStateUpdated(boolean)>
<myjava.awt.datatransfer.DataFlavor: java.io.Reader getReaderForText(myjava.awt.datatransfer.Transferable)> --> <myjava.awt.datatransfer.Transferable: java.lang.Object getTransferData(myjava.awt.datatransfer.DataFlavor)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.DownloadHistory: void add(com.jadn.cc.services.MetaNet)>
<com.google.ads.AdActivity$StaticMethodWrapper: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)> --> <com.google.ads.internal.e: android.os.Bundle a()>
<com.jadn.cc.ui.Search$1: void start()> --> <com.jadn.cc.ui.Search: void startActivity(android.content.Intent)>
<com.jadn.cc.ui.Search: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Search$3: void <init>(com.jadn.cc.ui.Search,android.widget.Button,android.widget.TextView)>
<com.aocate.media.ServiceBackedMediaPlayer: void finalize()> --> <com.aocate.media.ServiceBackedMediaPlayer: void release()>
<com.aocate.media.MediaPlayer: void release()> --> <com.aocate.media.ServiceBackedMediaPlayer: void release()>
<com.aocate.media.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)> --> <com.aocate.media.ServiceBackedMediaPlayer: void release()>
<org.apache.harmony.awt.datatransfer.DTK: void initSystemFlavorMap(java.awt.datatransfer.SystemFlavorMap)> --> <org.apache.harmony.awt.datatransfer.DTK: java.lang.String[] getCharsets()>
<com.aocate.media.MediaPlayer: void <init>(android.content.Context,boolean)> --> <com.aocate.media.MediaPlayer$3: void <init>(com.aocate.media.MediaPlayer)>
<com.jadn.cc.ui.Search: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Search: void setTitle(java.lang.CharSequence)>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.AdActivity: void a(java.util.HashMap,com.google.ads.internal.d)>
<org.apache.harmony.awt.datatransfer.DragSourceEventProxy: void start()> --> <org.apache.harmony.awt.datatransfer.DragSourceEventProxy: java.awt.dnd.DragSourceDragEvent newDragSourceDragEvent()>
<org.apache.harmony.awt.datatransfer.DragSourceEventProxy: void run()> --> <org.apache.harmony.awt.datatransfer.DragSourceEventProxy: java.awt.dnd.DragSourceDragEvent newDragSourceDragEvent()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void unregisterOnSeekCompleteCallback(long,com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8)> --> <com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8: android.os.IBinder asBinder()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void registerOnSeekCompleteCallback(long,com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8)> --> <com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8: android.os.IBinder asBinder()>
<com.jadn.cc.core.CarCastApplication$1: void onServiceDisconnected(android.content.ComponentName)> --> <com.jadn.cc.core.CarCastApplication: com.jadn.cc.core.ContentServiceListener access$100(com.jadn.cc.core.CarCastApplication)>
<com.jadn.cc.core.CarCastApplication$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.jadn.cc.core.CarCastApplication: com.jadn.cc.core.ContentServiceListener access$100(com.jadn.cc.core.CarCastApplication)>
<com.jadn.cc.ui.Stats: void onContentService()> --> <com.jadn.cc.ui.Stats: android.content.Context getApplicationContext()>
<com.google.ads.internal.c$1: void start()> --> <com.google.ads.internal.c$1: void run()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8$Stub: com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8 asInterface(android.os.IBinder)>
<com.jadn.cc.ui.DownloadProgress$1$1: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.ui.DownloadProgress: void access$000(com.jadn.cc.ui.DownloadProgress)>
<com.jadn.cc.ui.DownloadProgress$1: void onClick(android.view.View)> --> <com.jadn.cc.ui.DownloadProgress: void access$000(com.jadn.cc.ui.DownloadProgress)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> --> <com.google.ads.internal.e: void <init>(java.lang.String,java.util.HashMap)>
<com.google.ads.ag$c: void onClick(android.content.DialogInterface,int)> --> <com.google.ads.internal.e: void <init>(java.lang.String,java.util.HashMap)>
<com.google.ads.ag: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.e: void <init>(java.lang.String,java.util.HashMap)>
<com.google.ads.x: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.e: void <init>(java.lang.String,java.util.HashMap)>
<org.apache.harmony.awt.datatransfer.DataSource: java.util.List getNativeFormatsList()> --> <org.apache.harmony.awt.datatransfer.DataSource: java.util.List getNativesForFlavors(java.awt.datatransfer.DataFlavor[])>
<com.google.ads.j: void onLeaveApplication(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.e: void c(com.google.ads.h)>
<com.google.ads.k: void onLeaveApplication(com.google.ads.mediation.MediationInterstitialAdapter)> --> <com.google.ads.e: void c(com.google.ads.h)>
<com.google.ads.e: void b(com.google.ads.h)> --> <com.google.ads.e$5: void <init>(com.google.ads.e)>
<com.jadn.cc.services.ContentService: void purgeHeard()> --> <com.jadn.cc.services.ContentService: void deleteUpTo(int)>
<com.jadn.cc.services.ContentService: void purgeToCurrent()> --> <com.jadn.cc.services.ContentService: void deleteUpTo(int)>
<com.jadn.cc.services.ContentService: void purgeAll()> --> <com.jadn.cc.services.ContentService: void deleteUpTo(int)>
<com.aocate.media.ServiceBackedMediaPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.aocate.media.ServiceBackedMediaPlayer$1$1: void <init>(com.aocate.media.ServiceBackedMediaPlayer$1)>
<com.google.ads.h: void a(android.app.Activity)> --> <com.google.ads.i: void <init>(com.google.ads.h,android.app.Activity,java.lang.String,com.google.ads.AdRequest,java.util.HashMap)>
<com.jadn.cc.ui.Subscriptions: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.Subscriptions$2: void <init>(com.jadn.cc.ui.Subscriptions)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IDeathCallback_0_8$Stub: com.aocate.presto.service.IDeathCallback_0_8 asInterface(android.os.IBinder)>
<com.google.ads.e$7: void start()> --> <com.google.ads.e$7: void run()>
<com.jadn.cc.services.ContentService: java.util.SortedSet moveUp(java.util.SortedSet)> --> <com.jadn.cc.services.MetaHolder: java.util.SortedSet moveUp(java.util.SortedSet)>
<com.jadn.cc.ui.CarCast: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.CarCast: android.content.Context getApplicationContext()>
<com.jadn.cc.ui.CarCast: java.lang.String moreSpaceSuggestions()> --> <com.jadn.cc.ui.CarCast: android.content.Context getApplicationContext()>
<com.jadn.cc.ui.CarCast: void updateUI()> --> <com.jadn.cc.ui.CarCast: android.content.Context getApplicationContext()>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection)> --> <com.google.ads.internal.f: void i(java.net.HttpURLConnection)>
<com.google.ads.j: void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.mediation.MediationBannerAdapter: android.view.View getBannerView()>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.DownloadHelper: java.lang.String getLocalFileExtFromMimetype(java.lang.String)>
<com.jadn.cc.ui.AudioRecorder: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.AudioRecorder: android.widget.Button fb(int)>
<com.jadn.cc.ui.AudioRecorder: void setReadyToRecord(boolean)> --> <com.jadn.cc.ui.AudioRecorder: android.widget.Button fb(int)>
<com.jadn.cc.services.ContentService: void startDownloadingNewPodCasts(int)> --> <com.jadn.cc.services.DownloadHelper: void <init>(int)>
<com.jadn.cc.ui.SearchResults: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> --> <com.jadn.cc.ui.BaseActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<com.jadn.cc.ui.PodcastList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> --> <com.jadn.cc.ui.BaseActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<com.jadn.cc.ui.AudioRecorder: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> --> <com.jadn.cc.ui.BaseActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<com.jadn.cc.ui.Subscriptions: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> --> <com.jadn.cc.ui.BaseActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<com.jadn.cc.core.ExternalMediaStatus: void <clinit>()> --> <com.jadn.cc.core.ExternalMediaStatus: void <init>(java.lang.String,int)>
<com.google.ads.e: boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long)> --> <com.google.ads.m: boolean b()>
<com.google.ads.m: boolean a()> --> <com.google.ads.m: boolean b()>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.m: boolean b()>
<com.google.ads.e: boolean c()> --> <com.google.ads.m: boolean b()>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.m: boolean b()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.m: boolean b()>
<com.google.ads.e: boolean a(com.google.ads.c,com.google.ads.internal.d)> --> <com.google.ads.m: boolean b()>
<com.google.ads.internal.d: void a()> --> <com.google.ads.m: boolean b()>
<com.google.ads.internal.d: void y()> --> <com.google.ads.m: boolean b()>
<com.google.ads.util.g$b: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)> --> <com.google.ads.m: boolean b()>
<com.jadn.cc.util.Mailer: boolean send()> --> <javax.mail.BodyPart: void setText(java.lang.String)>
<com.jadn.cc.ui.OpmlLocator: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.OpmlLocator$1: void <init>(com.jadn.cc.ui.OpmlLocator,android.widget.Button,android.widget.EditText)>
<com.jadn.cc.ui.AudioRecorder: void onCreate(android.os.Bundle)> --> <com.jadn.cc.util.RecordingSet: void <init>(android.content.Context)>
<com.jadn.cc.ui.CarCast: void onResume()> --> <com.jadn.cc.util.RecordingSet: void <init>(android.content.Context)>
<com.jadn.cc.util.MailRecordings: void doIt(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.util.RecordingSet: void <init>(android.content.Context)>
<com.jadn.cc.core.WifiConnectedReceiver: void onReceive(android.content.Context,android.content.Intent)> --> <com.jadn.cc.util.RecordingSet: void <init>(android.content.Context)>
<com.aocate.media.AndroidMediaPlayer: void <init>(com.aocate.media.MediaPlayer,android.content.Context)> --> <com.aocate.media.AndroidMediaPlayer$3: void <init>(com.aocate.media.AndroidMediaPlayer)>
<com.google.ads.mediation.admob.AdMobAdapter$a: void onDismissScreen(com.google.ads.Ad)> --> <com.google.ads.mediation.MediationBannerListener: void onDismissScreen(com.google.ads.mediation.MediationBannerAdapter)>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onDismissScreen()> --> <com.google.ads.mediation.MediationBannerListener: void onDismissScreen(com.google.ads.mediation.MediationBannerAdapter)>
<com.google.ads.e: void a(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.e: boolean a(com.google.ads.c,com.google.ads.internal.d)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8$Stub: com.aocate.presto.service.IOnSeekCompleteListenerCallback_0_8 asInterface(android.os.IBinder)>
<com.google.ads.internal.a: void <clinit>()> --> <com.google.ads.internal.a$2: void <init>()>
<com.google.ads.util.g$a: boolean a(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean)> --> <com.google.ads.util.g$a: void a(android.app.AlertDialog$Builder,android.content.Context,java.lang.String,java.lang.String,android.webkit.JsPromptResult)>
<com.google.ads.j: void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.h: com.google.ads.mediation.MediationAdapter h()>
<com.google.ads.j: void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.h: com.google.ads.mediation.MediationAdapter h()>
<com.google.ads.k: void onReceivedAd(com.google.ads.mediation.MediationInterstitialAdapter)> --> <com.google.ads.h: com.google.ads.mediation.MediationAdapter h()>
<com.google.ads.k: void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.h: com.google.ads.mediation.MediationAdapter h()>
<com.aocate.media.MediaPlayer: boolean canSetSpeed()> --> <com.aocate.media.MediaPlayerImpl: boolean canSetSpeed()>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: boolean canSetSpeed()>
<com.google.ads.s: java.lang.Runnable a(java.lang.String,android.webkit.WebView)> --> <com.google.ads.aa: void <init>(java.lang.String,android.content.Context)>
<com.google.ads.internal.d: void A()> --> <com.google.ads.aa: void <init>(java.lang.String,android.content.Context)>
<com.google.ads.internal.d: void w()> --> <com.google.ads.aa: void <init>(java.lang.String,android.content.Context)>
<com.google.ads.internal.d: void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)> --> <com.google.ads.aa: void <init>(java.lang.String,android.content.Context)>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection,int)> --> <com.google.ads.internal.f: void a(java.net.HttpURLConnection)>
<com.aocate.media.ServiceBackedMediaPlayer: void setSpeedAdjustmentAlgorithm(int)> --> <com.aocate.presto.service.IPlayMedia_0_8: void setSpeedAdjustmentAlgorithm(long,int)>
<com.google.ads.e: void a(com.google.ads.h,android.view.View)> --> <com.google.ads.h: java.lang.String g()>
<com.google.ads.h$2: void start()> --> <com.google.ads.h: java.lang.String g()>
<com.google.ads.j: void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.h: java.lang.String g()>
<com.google.ads.h$1: void start()> --> <com.google.ads.h: java.lang.String g()>
<com.google.ads.e: boolean a(com.google.ads.h,java.lang.String)> --> <com.google.ads.h: java.lang.String g()>
<com.jadn.cc.services.ContentService: void stopForegroundCompat()> --> <com.jadn.cc.services.ContentService: void invokeMethod(java.lang.reflect.Method,java.lang.Object[])>
<com.jadn.cc.services.ContentService: void startForegroundCompat(int,android.app.Notification)> --> <com.jadn.cc.services.ContentService: void invokeMethod(java.lang.reflect.Method,java.lang.Object[])>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.h: com.google.ads.AdSize b()>
<com.google.ads.i: void a(com.google.ads.mediation.MediationAdapter)> --> <com.google.ads.internal.h: com.google.ads.AdSize b()>
<com.google.ads.e: boolean a(com.google.ads.c,com.google.ads.internal.d)> --> <com.google.ads.internal.h: com.google.ads.AdSize b()>
<com.google.ads.internal.d: void a()> --> <com.google.ads.internal.h: com.google.ads.AdSize b()>
<com.google.ads.AdActivity$StaticMethodWrapper: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)> --> <com.google.ads.AdActivity: com.google.ads.internal.d c()>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProxy: java.awt.Image getImage(java.awt.datatransfer.DataFlavor)>
<com.google.ads.internal.d: void b(com.google.ads.f,java.lang.Boolean)> --> <com.google.ads.f: java.lang.String a()>
<com.google.ads.internal.d: void a(com.google.ads.f,java.lang.Boolean)> --> <com.google.ads.f: java.lang.String a()>
<com.jadn.cc.ui.AudioRecorder: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.util.RecordingSet: void deleteAll()>
<myjava.awt.datatransfer.DataFlavor: boolean isFlavorRemoteObjectType()> --> <myjava.awt.datatransfer.DataFlavor: boolean isMimeTypeEqual(java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: boolean isMimeTypeSerializedObject()> --> <myjava.awt.datatransfer.DataFlavor: boolean isMimeTypeEqual(java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: boolean equals(java.lang.String)> --> <myjava.awt.datatransfer.DataFlavor: boolean isMimeTypeEqual(java.lang.String)>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.AdActivity: android.content.Intent getIntent()>
<com.google.ads.AdActivity: void a(java.util.HashMap,com.google.ads.internal.d)> --> <com.google.ads.AdActivity: android.content.Intent getIntent()>
<myjava.awt.datatransfer.DataFlavor: boolean isFlavorRemoteObjectType()> --> <myjava.awt.datatransfer.DataFlavor: boolean isRepresentationClassRemote()>
<com.jadn.cc.services.MetaHolder: void loadMeta(java.io.File)> --> <com.jadn.cc.services.MetaHolder: boolean alreadyHas(java.io.File)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getPlainText(java.awt.datatransfer.DataFlavor)>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.AdActivity: void d()> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.mediation.MediationServerParameters: void load(java.util.Map)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.internal.c: void <init>(com.google.ads.internal.d)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.internal.c: void start()> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.util.AdUtil: org.json.JSONArray a(java.util.Set)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.t: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.internal.AdVideoView: void setMediaControllerEnabled(boolean)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.internal.f: void j(java.net.HttpURLConnection)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.internal.c: void run()> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.e: boolean a(com.google.ads.c,com.google.ads.internal.d)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.p: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.AdActivity: void newAdVideoView(int,int,int,int)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.internal.d: void A()> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.AdActivity$StaticMethodWrapper: void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.AdActivity: com.google.ads.internal.AdWebView getOpeningAdWebView()> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.internal.AdWebView: void onMeasure(int,int)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.o: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.util.AdUtil: int a(java.lang.String)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.s: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.internal.AdVideoView: boolean onError(android.media.MediaPlayer,int,int)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.util.g$a: boolean onConsoleMessage(android.webkit.ConsoleMessage)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.aa: void start()> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.AdRequest: void <clinit>()> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.internal.d: void w()> --> <com.google.ads.util.b: void e(java.lang.String)>
<com.google.ads.internal.g: void d()> --> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.internal.g: void l()> --> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.AdActivity: void onWindowFocusChanged(boolean)> --> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.internal.g: void n()> --> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.internal.g: void o()> --> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.util.i$c: void a(java.lang.Object)> --> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.internal.AdVideoView$a: void start()> --> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.internal.g: void b(java.lang.String)> --> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.internal.g: void b()> --> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.internal.g: void a(java.lang.String)> --> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.internal.g: void c()> --> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.util.i: void <init>()> --> <com.google.ads.util.b: void d(java.lang.String)>
<com.google.ads.internal.d: void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean)> --> <com.google.ads.AdListener: void onReceiveAd(com.google.ads.Ad)>
<com.google.ads.internal.d: void B()> --> <com.google.ads.AdListener: void onReceiveAd(com.google.ads.Ad)>
<com.aocate.media.ServiceBackedMediaPlayer: void release()> --> <com.aocate.media.ServiceBackedMediaPlayer: void setWakeMode(android.content.Context,int)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.EnclosureHandler: void setFeedName(java.lang.String)>
<com.jadn.cc.util.Mailer: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)> --> <com.jadn.cc.util.Mailer: void <init>()>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: java.lang.String a()> --> <com.google.ads.mediation.customevent.CustomEventAdapter: java.lang.String a(com.google.ads.mediation.customevent.CustomEventAdapter)>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: java.lang.String b()> --> <com.google.ads.mediation.customevent.CustomEventAdapter: java.lang.String a(com.google.ads.mediation.customevent.CustomEventAdapter)>
<myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestTextFlavor(myjava.awt.datatransfer.DataFlavor[])> --> <myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestFlavorWOCharset(java.util.List)>
<myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestByCharset(java.util.List)> --> <myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestFlavorWOCharset(java.util.List)>
<org.apache.harmony.awt.datatransfer.DTK: org.apache.harmony.awt.datatransfer.DTK getDTK()> --> <org.apache.harmony.awt.ContextStorage: boolean shutdownPending()>
<com.jadn.cc.services.ContentService: void moveTo(double)> --> <com.aocate.media.MediaPlayer: int getDuration()>
<com.jadn.cc.services.ContentService: int currentProgress()> --> <com.aocate.media.MediaPlayer: int getDuration()>
<com.jadn.cc.services.ContentService: void bumpForwardSeconds(int)> --> <com.aocate.media.MediaPlayer: int getDuration()>
<com.jadn.cc.trace.ExceptionHandler$1: void start()> --> <com.jadn.cc.trace.ExceptionHandler: boolean access$002(boolean)>
<com.google.ads.h$1: void start()> --> <com.google.ads.h: com.google.ads.mediation.MediationAdapter a(com.google.ads.h)>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void setEnableSpeedAdjustment(boolean)>
<com.aocate.media.MediaPlayer: void setEnableSpeedAdjustment(boolean)> --> <com.aocate.media.MediaPlayerImpl: void setEnableSpeedAdjustment(boolean)>
<com.jadn.cc.services.ContentService: void deleteUpTo(int)> --> <com.jadn.cc.services.MetaHolder: void delete(int)>
<com.jadn.cc.services.ContentService: void deletePodcast(int)> --> <com.jadn.cc.services.MetaHolder: void delete(int)>
<com.jadn.cc.ui.PodcastList: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.PodcastList$3: void <init>(com.jadn.cc.ui.PodcastList)>
<com.jadn.cc.ui.PodcastList$4: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: java.util.SortedSet moveDown(java.util.SortedSet)>
<com.jadn.cc.ui.CarCast: boolean isAudioRecorderOff()> --> <com.jadn.cc.ui.CarCast: boolean isDeviceWithoutMicrophone()>
<com.jadn.cc.services.ContentService: void deleteUpTo(int)> --> <com.jadn.cc.services.MetaHolder: void <init>(android.content.Context,java.io.File)>
<com.jadn.cc.services.MetaHolder: void <init>(android.content.Context)> --> <com.jadn.cc.services.MetaHolder: void <init>(android.content.Context,java.io.File)>
<com.jadn.cc.services.ContentService: void directorySettingsChanged()> --> <com.jadn.cc.services.MetaHolder: void <init>(android.content.Context,java.io.File)>
<com.jadn.cc.services.ContentService: void newContentAdded()> --> <com.jadn.cc.services.MetaHolder: void <init>(android.content.Context,java.io.File)>
<com.jadn.cc.services.ContentService: void deleteCurrentPodcast()> --> <com.jadn.cc.services.MetaHolder: void <init>(android.content.Context,java.io.File)>
<com.jadn.cc.services.ContentService: void doDownloadCompletedNotification(int)> --> <com.jadn.cc.services.MetaHolder: void <init>(android.content.Context,java.io.File)>
<com.jadn.cc.core.Subscription$1: java.lang.Object[] newArray(int)> --> <com.jadn.cc.core.Subscription$1: com.jadn.cc.core.Subscription[] newArray(int)>
<com.google.ads.util.h$a: void <init>(com.google.ads.m)> --> <com.google.ads.util.g$a: void <init>(com.google.ads.m)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.m,com.google.ads.AdSize)> --> <com.google.ads.util.g$a: void <init>(com.google.ads.m)>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void prepare()>
<com.aocate.media.MediaPlayer: void prepare()> --> <com.aocate.media.MediaPlayerImpl: void prepare()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void registerOnCompletionCallback(long,com.aocate.presto.service.IOnCompletionListenerCallback_0_8)>
<com.google.ads.ae: void a(android.webkit.WebView,boolean)> --> <com.google.ads.internal.a: void a(android.webkit.WebView,java.lang.String)>
<com.google.ads.internal.a: void a(android.webkit.WebView,java.lang.String,java.lang.String)> --> <com.google.ads.internal.a: void a(android.webkit.WebView,java.lang.String)>
<com.google.ads.ae: void a(android.webkit.WebView,java.lang.String)> --> <com.google.ads.internal.a: void a(android.webkit.WebView,java.lang.String)>
<com.google.ads.r: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.a: void a(android.webkit.WebView,java.lang.String)>
<com.google.ads.r: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.AdActivity: com.google.ads.internal.AdWebView getOpeningAdWebView()>
<com.google.ads.AdActivity: void onActivityResult(int,int,android.content.Intent)> --> <com.google.ads.AdActivity: com.google.ads.internal.AdWebView getOpeningAdWebView()>
<com.google.ads.internal.i: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)> --> <com.google.ads.internal.g: void a(java.lang.String)>
<com.google.ads.ag: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.ae: void a(android.webkit.WebView,java.lang.String)>
<com.google.ads.h: void a(android.app.Activity)> --> <com.google.ads.util.a: void b(boolean,java.lang.String)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void unregisterOnSpeedAdjustmentAvailableChangedCallback(long,com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8)>
<com.jadn.cc.services.FileSubscriptionHelper: java.util.List readLegacySites(java.io.InputStream)> --> <com.jadn.cc.core.Util: boolean isValidURL(java.lang.String)>
<com.jadn.cc.services.FileSubscriptionHelper: boolean addSubscription(com.jadn.cc.core.Subscription)> --> <com.jadn.cc.core.Util: boolean isValidURL(java.lang.String)>
<com.jadn.cc.ui.SubscriptionEdit$1: void onClick(android.view.View)> --> <com.jadn.cc.core.Util: boolean isValidURL(java.lang.String)>
<com.google.ads.e: void a(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.e: boolean a()>
<com.aocate.media.MediaPlayer: java.lang.String getServiceVersionName()> --> <com.aocate.media.ServiceBackedMediaPlayer: java.lang.String getServiceVersionName()>
<com.jadn.cc.services.ContentService: void tryToGetAudioFocus()> --> <com.jadn.cc.core.AudioFocusHelper: boolean requestFocus()>
<com.google.ads.AdActivity: void d()> --> <com.google.ads.internal.d: com.google.ads.internal.AdWebView j()>
<com.google.ads.AdActivity: com.google.ads.internal.AdWebView getOpeningAdWebView()> --> <com.google.ads.internal.d: com.google.ads.internal.AdWebView j()>
<com.google.ads.internal.c: void e()> --> <com.google.ads.internal.d: com.google.ads.internal.AdWebView j()>
<com.google.ads.internal.c$a: void start()> --> <com.google.ads.internal.d: com.google.ads.internal.AdWebView j()>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.d: com.google.ads.internal.AdWebView j()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: long startSession(com.aocate.presto.service.IDeathCallback_0_8)> --> <com.aocate.presto.service.IDeathCallback_0_8: android.os.IBinder asBinder()>
<com.jadn.cc.ui.SearchResults: java.util.List getResults()> --> <com.jadn.cc.services.ContentService: java.lang.String startSearch(java.lang.String)>
<com.jadn.cc.ui.Search$1: void start()> --> <com.jadn.cc.services.ContentService: java.lang.String startSearch(java.lang.String)>
<com.jadn.cc.ui.Search$2: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)> --> <com.jadn.cc.services.ContentService: java.lang.String startSearch(java.lang.String)>
<com.jadn.cc.ui.Search$3: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: java.lang.String startSearch(java.lang.String)>
<com.jadn.cc.ui.Search$1: void run()> --> <com.jadn.cc.services.ContentService: java.lang.String startSearch(java.lang.String)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.m,com.google.ads.AdSize)> --> <com.google.ads.internal.AdWebView: void setDownloadListener(android.webkit.DownloadListener)>
<com.jadn.cc.ui.SubscriptionEdit$2: void onClick(android.view.View)> --> <com.jadn.cc.ui.SubscriptionEdit: void access$200(com.jadn.cc.ui.SubscriptionEdit)>
<com.aocate.media.ServiceBackedMediaPlayer: void access$300(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer: void setOnErrorCallback(com.aocate.presto.service.IPlayMedia_0_8)>
<com.google.ads.internal.a$3: void <init>()> --> <com.google.ads.v: void <init>()>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.e: void <init>(android.os.Bundle)>
<com.jadn.cc.services.EnclosureHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> --> <com.jadn.cc.services.EnclosureHandler: java.lang.String getMimetype(java.lang.String,java.lang.String)>
<com.google.ads.internal.j: void <clinit>()> --> <com.google.ads.util.c: byte[] a(java.lang.String)>
<com.google.ads.internal.d: void x()> --> <com.google.ads.AdView: boolean isShown()>
<com.jadn.cc.services.ContentService$3: void start()> --> <com.jadn.cc.services.ContentService$3: void run()>
<com.jadn.cc.util.Recording: void play()> --> <com.jadn.cc.util.Recording$1: void <init>(com.jadn.cc.util.Recording,android.media.MediaPlayer)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.awt.image.BufferedImage createBufferedImage(org.apache.harmony.awt.datatransfer.RawBitmap)> --> <org.apache.harmony.awt.datatransfer.DataProxy: boolean isBGR(org.apache.harmony.awt.datatransfer.RawBitmap)>
<com.aocate.media.AndroidMediaPlayer: void <init>(com.aocate.media.MediaPlayer,android.content.Context)> --> <com.aocate.media.AndroidMediaPlayer$5: void <init>(com.aocate.media.AndroidMediaPlayer)>
<com.jadn.cc.services.ContentService: void play()> --> <com.jadn.cc.services.ContentService: void enableNotification()>
<com.jadn.cc.services.ContentService: boolean pauseOrPlay()> --> <com.jadn.cc.services.ContentService: void enableNotification()>
<myjava.awt.datatransfer.DataFlavor: java.util.List fetchTextFlavors(java.util.List,java.lang.String)> --> <myjava.awt.datatransfer.DataFlavor: boolean isFlavorTextType()>
<com.google.ads.AdSize: void <clinit>()> --> <com.google.ads.AdSize: void <init>(int,int,java.lang.String)>
<com.google.ads.AdSize: void <init>(int,int)> --> <com.google.ads.AdSize: void <init>(int,int,java.lang.String)>
<com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)> --> <com.google.ads.AdSize: void <init>(int,int,java.lang.String)>
<com.google.ads.util.d: void <clinit>()> --> <com.google.ads.util.d: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.google.ads.internal.a$1: void <init>()> --> <com.google.ads.y: void <init>()>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.e: boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long)>
<com.google.ads.internal.c: void b()> --> <com.google.ads.internal.c$1: void <init>(com.google.ads.internal.c,com.google.ads.c)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.EmptyNetworkExtras)> --> <com.google.ads.mediation.customevent.CustomEventAdapter: void a(java.lang.String,java.lang.Throwable)>
<com.google.ads.mediation.customevent.CustomEventAdapter: java.lang.Object a(java.lang.String,java.lang.Class,java.lang.String)> --> <com.google.ads.mediation.customevent.CustomEventAdapter: void a(java.lang.String,java.lang.Throwable)>
<com.google.ads.mediation.customevent.CustomEventAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.EmptyNetworkExtras)> --> <com.google.ads.mediation.customevent.CustomEventAdapter: void a(java.lang.String,java.lang.Throwable)>
<com.jadn.cc.core.Util: java.net.HttpURLConnection connectToHttpURL(java.lang.String,int)> --> <com.jadn.cc.core.Util: java.net.HttpURLConnection connectToHttpURL(java.lang.String,int)>
<com.jadn.cc.core.Util: void downloadPodcast(java.lang.String,com.jadn.cc.services.EnclosureHandler)> --> <com.jadn.cc.core.Util: java.net.HttpURLConnection connectToHttpURL(java.lang.String,int)>
<com.jadn.cc.ui.AudioRecorder: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.AudioRecorder: android.view.View findViewById(int)>
<com.jadn.cc.ui.AudioRecorder: void showRecordings()> --> <com.jadn.cc.ui.AudioRecorder: android.view.View findViewById(int)>
<com.jadn.cc.ui.AudioRecorder: void setReadyToRecord(boolean)> --> <com.jadn.cc.ui.AudioRecorder: android.view.View findViewById(int)>
<com.jadn.cc.ui.AudioRecorder: android.widget.Button fb(int)> --> <com.jadn.cc.ui.AudioRecorder: android.view.View findViewById(int)>
<com.jadn.cc.ui.AudioRecorder$1: void run()> --> <com.jadn.cc.ui.AudioRecorder: android.view.View findViewById(int)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.ContentService: void doDownloadCompletedNotification(int)>
<com.google.ads.util.AdUtil$UserActivityReceiver: void onReceive(android.content.Context,android.content.Intent)> --> <com.google.ads.util.AdUtil: void a(boolean)>
<com.jadn.cc.ui.PodcastList: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.PodcastList$7: void <init>(com.jadn.cc.ui.PodcastList)>
<com.jadn.cc.services.FileSubscriptionHelper: java.util.List getSubscriptions()> --> <com.jadn.cc.services.FileSubscriptionHelper: java.util.List getLegacySitesFromFile()>
<com.jadn.cc.ui.Downloader: void start()> --> <com.jadn.cc.ui.Downloader: void run()>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void muteNextOnPrepare()>
<com.jadn.cc.ui.CarCast: boolean onCreateOptionsMenu(android.view.Menu)> --> <com.jadn.cc.ui.CarCast: android.view.MenuInflater getMenuInflater()>
<com.jadn.cc.services.DownloadHelper: java.io.InputStream getInputStream(java.net.URL)> --> <com.jadn.cc.services.DownloadHelper: void say(java.lang.String)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.DownloadHelper: void say(java.lang.String)>
<com.jadn.cc.core.CarCastApplication: void setContentServiceListener(com.jadn.cc.core.ContentServiceListener)> --> <com.jadn.cc.core.ContentServiceListener: void onContentServiceChanged(com.jadn.cc.services.ContentService)>
<com.jadn.cc.core.CarCastApplication$1: void onServiceDisconnected(android.content.ComponentName)> --> <com.jadn.cc.core.ContentServiceListener: void onContentServiceChanged(com.jadn.cc.services.ContentService)>
<com.jadn.cc.core.CarCastApplication$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.jadn.cc.core.ContentServiceListener: void onContentServiceChanged(com.jadn.cc.services.ContentService)>
<com.jadn.cc.trace.ExceptionHandler: void submitStackTraces()> --> <org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>
<com.jadn.cc.ui.AudioRecorder: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.AudioRecorder: void setContentView(int)>
<com.google.ads.h: void <init>(com.google.ads.e,com.google.ads.internal.h,com.google.ads.f,java.lang.String,com.google.ads.AdRequest,java.util.HashMap)> --> <com.google.ads.util.a: void b(boolean)>
<com.google.ads.internal.AdVideoView: void a()> --> <com.google.ads.internal.AdVideoView$a: void <init>(com.google.ads.internal.AdVideoView)>
<com.jadn.cc.ui.SubscriptionEdit$3: void handleMessage(android.os.Message)> --> <com.jadn.cc.core.Util: void toast(android.app.Activity,java.lang.String)>
<com.jadn.cc.ui.Subscriptions: boolean onContextItemSelected(android.view.MenuItem)> --> <com.jadn.cc.core.Util: void toast(android.app.Activity,java.lang.String)>
<com.jadn.cc.ui.SubscriptionEdit$1: void onClick(android.view.View)> --> <com.jadn.cc.core.Util: void toast(android.app.Activity,java.lang.String)>
<com.jadn.cc.ui.Subscriptions: void exportOpml()> --> <com.jadn.cc.core.Util: void toast(android.app.Activity,java.lang.String)>
<com.jadn.cc.ui.PodcastList$7: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.core.Util: void toast(android.app.Activity,java.lang.String)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void setPlaybackPitch(long,float)>
<com.google.ads.h$2: void start()> --> <com.google.ads.h$2: void run()>
<org.apache.harmony.awt.ContextStorage: void <clinit>()> --> <org.apache.harmony.awt.ContextStorage: void <init>()>
<com.google.ads.AdActivity: void b(java.util.HashMap,com.google.ads.internal.d)> --> <com.google.ads.AdActivity: void a(com.google.ads.internal.d)>
<com.google.ads.AdActivity: void a(java.util.HashMap,com.google.ads.internal.d)> --> <com.google.ads.AdActivity: void a(com.google.ads.internal.d)>
<com.google.ads.AdView: java.lang.String a(java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean)> --> <com.google.ads.AdView: android.content.res.Resources getResources()>
<com.aocate.media.ServiceBackedMediaPlayer: int getServiceVersionCode()> --> <com.aocate.presto.service.IPlayMedia_0_8: int getVersionCode()>
<com.jadn.cc.core.CarCastApplication: void directorySettingsChanged()> --> <com.jadn.cc.services.ContentService: void directorySettingsChanged()>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onLeaveApplication()> --> <com.google.ads.mediation.customevent.CustomEventAdapter$a: java.lang.String b()>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onPresentScreen()> --> <com.google.ads.mediation.customevent.CustomEventAdapter$a: java.lang.String b()>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onFailedToReceiveAd()> --> <com.google.ads.mediation.customevent.CustomEventAdapter$a: java.lang.String b()>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onClick()> --> <com.google.ads.mediation.customevent.CustomEventAdapter$a: java.lang.String b()>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onReceivedAd(android.view.View)> --> <com.google.ads.mediation.customevent.CustomEventAdapter$a: java.lang.String b()>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onDismissScreen()> --> <com.google.ads.mediation.customevent.CustomEventAdapter$a: java.lang.String b()>
<com.google.ads.AdActivity: void newAdVideoView(int,int,int,int)> --> <com.google.ads.AdActivity: com.google.ads.internal.AdVideoView a(android.app.Activity)>
<com.google.ads.mediation.admob.AdMobAdapter: void a()> --> <com.google.ads.mediation.admob.AdMobAdapter: boolean b()>
<com.google.ads.mediation.MediationServerParameters: void load(java.util.Map)> --> <com.google.ads.mediation.MediationServerParameters$Parameter: boolean required()>
<com.google.ads.mediation.admob.AdMobAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.AdView: void setAdListener(com.google.ads.AdListener)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnSpeedAdjustmentAvailableChangedCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer$9: void <init>(com.aocate.media.ServiceBackedMediaPlayer)>
<com.google.ads.internal.i: void onPageFinished(android.webkit.WebView,java.lang.String)> --> <com.google.ads.internal.c: void c()>
<com.google.ads.e$6: void start()> --> <com.google.ads.e$6: void run()>
<com.aocate.media.MediaPlayer: void openPrestoMarketIntent(android.content.Context)> --> <com.aocate.media.MediaPlayer: android.content.Intent getPrestoMarketIntent()>
<com.jadn.cc.ui.Splash: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Splash$1: void <init>(com.jadn.cc.ui.Splash)>
<com.jadn.cc.ui.CarCast: void onResume()> --> <com.jadn.cc.ui.CarCast: boolean isAudioRecorderOff()>
<com.jadn.cc.ui.CarCast$4: boolean onTouch(android.view.View,android.view.MotionEvent)> --> <com.jadn.cc.ui.CarCast: boolean isAudioRecorderOff()>
<com.jadn.cc.services.RemoteControlHelper: void registerRemoteControlClient(android.media.AudioManager,com.jadn.cc.services.RemoteControlClientCompat)> --> <com.jadn.cc.services.RemoteControlClientCompat: java.lang.Object getActualRemoteControlClientObject()>
<com.jadn.cc.services.RemoteControlHelper: void unregisterRemoteControlClient(android.media.AudioManager,com.jadn.cc.services.RemoteControlClientCompat)> --> <com.jadn.cc.services.RemoteControlClientCompat: java.lang.Object getActualRemoteControlClientObject()>
<com.jadn.cc.services.MetaHolder: void saveOrder()> --> <com.jadn.cc.services.MetaFile: java.lang.String getFilename()>
<com.jadn.cc.services.MetaFile: java.lang.String getBaseFilename()> --> <com.jadn.cc.services.MetaFile: java.lang.String getFilename()>
<com.jadn.cc.services.MetaHolder: boolean alreadyHas(java.io.File)> --> <com.jadn.cc.services.MetaFile: java.lang.String getFilename()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.util.b: void c(java.lang.String,java.lang.Throwable)>
<com.jadn.cc.services.MetaHolder: java.util.SortedSet moveUp(java.util.SortedSet)> --> <com.jadn.cc.services.MetaHolder: void saveOrder()>
<com.jadn.cc.services.MetaHolder: java.util.SortedSet moveBottom(java.util.SortedSet)> --> <com.jadn.cc.services.MetaHolder: void saveOrder()>
<com.jadn.cc.services.MetaHolder: java.util.SortedSet moveDown(java.util.SortedSet)> --> <com.jadn.cc.services.MetaHolder: void saveOrder()>
<com.jadn.cc.services.MetaHolder: void loadMeta(java.io.File)> --> <com.jadn.cc.services.MetaHolder: void saveOrder()>
<com.jadn.cc.services.MetaHolder: java.util.SortedSet moveTop(java.util.SortedSet)> --> <com.jadn.cc.services.MetaHolder: void saveOrder()>
<com.jadn.cc.services.FileSubscriptionHelper: java.util.List getLegacySitesFromFile()> --> <com.jadn.cc.services.FileSubscriptionHelper: java.util.List readLegacySites(java.io.InputStream)>
<com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8$Stub: void onBufferingUpdate(int)>
<com.jadn.cc.services.MetaHolder: java.util.SortedSet moveDown(java.util.SortedSet)> --> <com.jadn.cc.services.MetaHolder: void swapForward(java.util.SortedSet,int)>
<com.google.ads.AdView: void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet)> --> <com.google.ads.AdView: void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet)>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.AdView: void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: float getCurrentSpeedMultiplier(long)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: float getCurrentPitchStepsAdjustment(long)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnInfoCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.media.ServiceBackedMediaPlayer$5: void <init>(com.aocate.media.ServiceBackedMediaPlayer)>
<com.aocate.media.ServiceBackedMediaPlayer: void setDataSource(android.content.Context,android.net.Uri)> --> <com.aocate.presto.service.IPlayMedia_0_8: void setDataSourceUri(long,android.net.Uri)>
<com.aocate.media.ServiceBackedMediaPlayer$5: boolean onInfo(int,int)> --> <com.aocate.media.MediaPlayer$OnInfoListener: boolean onInfo(com.aocate.media.MediaPlayer,int,int)>
<com.aocate.media.AndroidMediaPlayer$4: boolean onInfo(android.media.MediaPlayer,int,int)> --> <com.aocate.media.MediaPlayer$OnInfoListener: boolean onInfo(com.aocate.media.MediaPlayer,int,int)>
<com.jadn.cc.ui.Settings: void onStop()> --> <com.jadn.cc.ui.Settings: android.content.ComponentName startService(android.content.Intent)>
<com.google.ads.mediation.admob.AdMobAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.AdView: void loadAd(com.google.ads.AdRequest)>
<com.google.ads.AdView: void a(android.content.Context,android.util.AttributeSet)> --> <com.google.ads.AdView: void loadAd(com.google.ads.AdRequest)>
<com.jadn.cc.core.CarCastApplication: void stopContentService()> --> <com.jadn.cc.core.CarCastApplication: boolean stopService(android.content.Intent)>
<com.aocate.media.ServiceBackedMediaPlayer$9: void <init>(com.aocate.media.ServiceBackedMediaPlayer)> --> <com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8$Stub: void <init>()>
<com.jadn.cc.ui.CarCast: void updateUI()> --> <com.jadn.cc.ui.CarCast: void updatePausePlay()>
<com.jadn.cc.ui.CarCast: void onContentService()> --> <com.jadn.cc.ui.CarCast: void updatePausePlay()>
<com.jadn.cc.ui.CarCast: void playStateUpdated(boolean)> --> <com.jadn.cc.ui.CarCast: void updatePausePlay()>
<com.jadn.cc.services.ContentService: void deleteSubscription(com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: boolean removeSubscription(com.jadn.cc.core.Subscription)>
<com.jadn.cc.ui.PodcastList$8: android.view.View getView(int,android.view.View,android.view.ViewGroup)> --> <com.jadn.cc.ui.PodcastList$Tag: void <init>(com.jadn.cc.ui.PodcastList)>
<com.google.ads.util.c: byte[] a(byte[],int,int,int)> --> <com.google.ads.util.c$b: boolean a(byte[],int,int,boolean)>
<com.jadn.cc.ui.PodcastList$8: android.view.View getView(int,android.view.View,android.view.ViewGroup)> --> <com.jadn.cc.ui.PodcastList$8: java.lang.Object getItem(int)>
<com.aocate.media.ServiceBackedMediaPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.aocate.media.ServiceBackedMediaPlayer: void access$400(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)>
<com.google.ads.internal.f: void i(java.net.HttpURLConnection)> --> <com.google.ads.internal.c: void a(int)>
<com.aocate.media.ServiceBackedMediaPlayer: void <init>(com.aocate.media.MediaPlayer,android.content.Context,android.content.ServiceConnection)> --> <com.aocate.media.MediaPlayerImpl: void <init>(com.aocate.media.MediaPlayer,android.content.Context)>
<com.aocate.media.AndroidMediaPlayer: void <init>(com.aocate.media.MediaPlayer,android.content.Context)> --> <com.aocate.media.MediaPlayerImpl: void <init>(com.aocate.media.MediaPlayer,android.content.Context)>
<com.jadn.cc.ui.CarCast: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.CarCast: void setRequestedOrientation(int)>
<com.google.ads.AdActivity: void b(java.util.HashMap,com.google.ads.internal.d)> --> <com.google.ads.AdActivity: void startActivity(android.content.Intent)>
<com.jadn.cc.ui.AudioRecorder: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.BaseActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
<com.jadn.cc.ui.Subscriptions: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.BaseActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
<com.jadn.cc.ui.PodcastList: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.BaseActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
<myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestByCharset(java.util.List)> --> <myjava.awt.datatransfer.DataFlavor: java.util.List getFlavors(java.util.List,java.lang.String[])>
<com.google.ads.l: void <init>()> --> <com.google.ads.util.i: void <init>()>
<com.google.ads.m: void <init>(com.google.ads.l,com.google.ads.Ad,com.google.ads.AdView,com.google.ads.InterstitialAd,java.lang.String,android.app.Activity,android.content.Context,android.view.ViewGroup,com.google.ads.internal.h)> --> <com.google.ads.util.i: void <init>()>
<com.google.ads.l$a: void <init>()> --> <com.google.ads.util.i: void <init>()>
<com.jadn.cc.services.ContentService: boolean addSubscription(com.jadn.cc.core.Subscription)> --> <com.jadn.cc.services.FileSubscriptionHelper: boolean addSubscription(com.jadn.cc.core.Subscription)>
<com.google.ads.internal.AdWebView: void onMeasure(int,int)> --> <com.google.ads.internal.AdWebView: boolean isInEditMode()>
<com.google.ads.f: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)> --> <com.google.ads.util.a: void a(java.lang.String)>
<com.google.ads.c: void <init>(java.lang.String,java.lang.String,java.util.List,java.lang.Integer,java.lang.Integer,java.util.List,java.util.List,java.util.List)> --> <com.google.ads.util.a: void a(java.lang.String)>
<com.google.ads.a: void <init>(java.lang.String,java.lang.String,java.util.List,java.util.HashMap)> --> <com.google.ads.util.a: void a(java.lang.String)>
<com.google.ads.internal.c: void e()> --> <com.google.ads.internal.i: void c(boolean)>
<com.google.ads.mediation.admob.AdMobAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras)> --> <com.google.ads.mediation.admob.AdMobAdapter: void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)>
<com.jadn.cc.util.Mailer: javax.mail.PasswordAuthentication getPasswordAuthentication()> --> <javax.mail.PasswordAuthentication: void <init>(java.lang.String,java.lang.String)>
<com.jadn.cc.ui.DownloadProgress: void start()> --> <com.jadn.cc.ui.DownloadProgress: void updateFromString(java.lang.String)>
<com.google.ads.internal.AdVideoView: void <init>(android.app.Activity,com.google.ads.internal.AdWebView)> --> <com.google.ads.internal.AdVideoView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.jadn.cc.services.MusicIntentReceiver: void onReceive(android.content.Context,android.content.Intent)> --> <com.jadn.cc.services.MusicIntentReceiver: boolean isInitialStickyBroadcast()>
<com.google.ads.internal.d: void v()> --> <com.google.ads.internal.g: void b()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.util.AdUtil$a: int ordinal()>
<org.apache.harmony.awt.datatransfer.DataSource: java.lang.String getText(boolean)> --> <org.apache.harmony.awt.datatransfer.DataSource: java.lang.String getTextFromReader(java.io.Reader)>
<com.aocate.media.ServiceBackedMediaPlayer: void setDataSource(java.lang.String)> --> <com.aocate.presto.service.IPlayMedia_0_8: void setDataSourceString(long,java.lang.String)>
<com.aocate.media.MediaPlayer$4$1: void start()> --> <com.aocate.media.MediaPlayer: com.aocate.media.AndroidMediaPlayer access$000(com.aocate.media.MediaPlayer)>
<com.aocate.media.MediaPlayer$4$2: boolean handleMessage(android.os.Message)> --> <com.aocate.media.MediaPlayer: com.aocate.media.AndroidMediaPlayer access$000(com.aocate.media.MediaPlayer)>
<com.jadn.cc.services.ContentService: void deletePodcast(int)> --> <com.jadn.cc.services.ContentService: void updateRemoteDisplay()>
<com.jadn.cc.services.ContentService: void next(boolean)> --> <com.jadn.cc.services.ContentService: void updateRemoteDisplay()>
<com.jadn.cc.services.ContentService: void previous()> --> <com.jadn.cc.services.ContentService: void updateRemoteDisplay()>
<com.jadn.cc.services.ContentService: void tryToRestoreLocation()> --> <com.jadn.cc.services.ContentService: void updateRemoteDisplay()>
<com.jadn.cc.services.ContentService: void play(int)> --> <com.jadn.cc.services.ContentService: void updateRemoteDisplay()>
<com.jadn.cc.services.ContentService: void deleteCurrentPodcast()> --> <com.jadn.cc.services.ContentService: void updateRemoteDisplay()>
<com.jadn.cc.services.ContentService: void onCreate()> --> <com.jadn.cc.services.ContentService: void updateRemoteDisplay()>
<com.jadn.cc.services.ContentService: void doDownloadCompletedNotification(int)> --> <com.jadn.cc.services.ContentService: void updateRemoteDisplay()>
<com.jadn.cc.core.Util: void downloadPodcast(java.lang.String,com.jadn.cc.services.EnclosureHandler)> --> <org.xml.sax.InputSource: void setEncoding(java.lang.String)>
<com.jadn.cc.core.Util: void findAvailablePodcasts(java.lang.String,com.jadn.cc.services.EnclosureHandler)> --> <org.xml.sax.InputSource: void setEncoding(java.lang.String)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: int getDuration(long)>
<com.google.ads.util.i$a: void <init>(com.google.ads.util.i,java.lang.String,com.google.ads.util.i$1)> --> <com.google.ads.util.i$a: void <init>(com.google.ads.util.i,java.lang.String)>
<com.aocate.media.ServiceBackedMediaPlayer$5: void <init>(com.aocate.media.ServiceBackedMediaPlayer)> --> <com.aocate.presto.service.IOnInfoListenerCallback_0_8$Stub: void <init>()>
<com.google.ads.util.g$a: void a(android.app.AlertDialog$Builder,java.lang.String,android.webkit.JsResult)> --> <com.google.ads.util.g$a$2: void <init>(android.webkit.JsResult)>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)> --> <com.google.ads.internal.c$a: void <init>(com.google.ads.internal.d,android.webkit.WebView,com.google.ads.internal.f,com.google.ads.AdRequest$ErrorCode,boolean)>
<com.google.ads.internal.d: void a(com.google.ads.AdRequest)> --> <com.google.ads.internal.c: void <init>(com.google.ads.internal.d)>
<com.google.ads.internal.c: void b()> --> <com.google.ads.c: com.google.ads.c a(java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: boolean isMimeTypeEqual(java.lang.String)> --> <myjava.awt.datatransfer.MimeTypeProcessor: myjava.awt.datatransfer.MimeTypeProcessor$MimeType parse(java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: void init(java.lang.String,java.lang.String,java.lang.ClassLoader)> --> <myjava.awt.datatransfer.MimeTypeProcessor: myjava.awt.datatransfer.MimeTypeProcessor$MimeType parse(java.lang.String)>
<com.aocate.media.ServiceBackedMediaPlayer: void setOnCompletionCallback(com.aocate.presto.service.IPlayMedia_0_8)> --> <com.aocate.presto.service.IPlayMedia_0_8: void registerOnCompletionCallback(long,com.aocate.presto.service.IOnCompletionListenerCallback_0_8)>
<com.jadn.cc.ui.AudioRecorder: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.AudioRecorder$5: void <init>(com.jadn.cc.ui.AudioRecorder)>
<com.google.ads.internal.f: void <init>(com.google.ads.internal.c,com.google.ads.internal.d)> --> <com.google.ads.internal.f$1: void <init>()>
<com.jadn.cc.ui.SubscriptionEdit: void testUrl()> --> <com.jadn.cc.core.Config: int getMax()>
<com.jadn.cc.ui.DownloadProgress: void doDownloads()> --> <com.jadn.cc.core.Config: int getMax()>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.internal.i: void a(boolean)>
<com.aocate.media.ServiceBackedMediaPlayer: float getMaxSpeedMultiplier()> --> <com.aocate.presto.service.IPlayMedia_0_8: float getMaxSpeedMultiplier(long)>
<com.aocate.media.MediaPlayer: void setupMpi(android.content.Context)> --> <com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)>
<com.aocate.media.MediaPlayer: void access$200(com.aocate.media.MediaPlayer,com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)>
<com.aocate.media.ServiceBackedMediaPlayer$6: void <init>(com.aocate.media.ServiceBackedMediaPlayer)> --> <com.aocate.presto.service.IOnPitchAdjustmentAvailableChangedListenerCallback_0_8$Stub: void <init>()>
<com.aocate.media.ServiceBackedMediaPlayer: void start()> --> <com.aocate.media.ServiceBackedMediaPlayer: void run()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.g: java.lang.String g()>
<com.jadn.cc.ui.Downloader$2: void start()> --> <com.jadn.cc.ui.Downloader: void access$000(com.jadn.cc.ui.Downloader,java.lang.StringBuilder,java.lang.String,java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.awt.Image getImage(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProvider: boolean isNativeFormatAvailable(java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getURL(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProvider: boolean isNativeFormatAvailable(java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getFileList(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProvider: boolean isNativeFormatAvailable(java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getPlainText(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProvider: boolean isNativeFormatAvailable(java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getHTML(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProvider: boolean isNativeFormatAvailable(java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getSerializedObject(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProvider: boolean isNativeFormatAvailable(java.lang.String)>
<com.aocate.media.ServiceBackedMediaPlayer$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.aocate.media.ServiceBackedMediaPlayer: void access$600(com.aocate.media.ServiceBackedMediaPlayer,com.aocate.presto.service.IPlayMedia_0_8)>
<com.google.ads.internal.d: void a(com.google.ads.c)> --> <com.google.ads.internal.d: boolean r()>
<com.google.ads.AdView: boolean isRefreshing()> --> <com.google.ads.internal.d: boolean r()>
<com.google.ads.internal.f: void h(java.net.HttpURLConnection)> --> <com.google.ads.internal.d: boolean r()>
<com.jadn.cc.ui.OpmlLocator: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.OpmlLocator: android.view.View findViewById(int)>
<com.jadn.cc.ui.OpmlLocator: void run()> --> <com.jadn.cc.ui.OpmlLocator: android.view.View findViewById(int)>
<com.jadn.cc.ui.OpmlLocator: void sorry(java.lang.String)> --> <com.jadn.cc.ui.OpmlLocator: android.view.View findViewById(int)>
<com.google.ads.internal.c: void b()> --> <com.google.ads.internal.c: void a(java.lang.String,com.google.ads.c,com.google.ads.d)>
<com.google.ads.AdView: void a(android.app.Activity,com.google.ads.AdSize,java.lang.String)> --> <com.google.ads.AdView: void setGravity(int)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String)> --> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void a(java.lang.String,java.lang.Throwable)> --> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void d(java.lang.String,java.lang.Throwable)> --> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void c(java.lang.String,java.lang.Throwable)> --> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)> --> <com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: void stop(long)>
<com.google.ads.mediation.admob.AdMobAdapter$a: void onReceiveAd(com.google.ads.Ad)> --> <com.google.ads.mediation.MediationBannerListener: void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter)>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onReceivedAd(android.view.View)> --> <com.google.ads.mediation.MediationBannerListener: void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter)>
<com.jadn.cc.ui.CarCast: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.services.ContentService: java.lang.String getPodcastEmailSummary()>
<org.apache.harmony.awt.datatransfer.DTK: void <init>()> --> <org.apache.harmony.awt.datatransfer.DataTransferThread: void start()>
<com.google.ads.c: com.google.ads.a a(org.json.JSONObject)> --> <com.google.ads.a: void <init>(java.lang.String,java.lang.String,java.util.List,java.util.HashMap)>
<com.jadn.cc.ui.Subscriptions: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.ui.Subscriptions: void exportOpml()>
<com.jadn.cc.ui.PodcastList: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.PodcastList$4: void <init>(com.jadn.cc.ui.PodcastList)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.util.AdUtil: int b(android.content.Context,android.util.DisplayMetrics)>
<com.google.ads.util.b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)> --> <com.google.ads.util.b$b: void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable)>
<com.jadn.cc.trace.ExceptionHandler: void submitStackTraces()> --> <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<com.jadn.cc.ui.SearchResults: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.SearchResults: android.view.View findViewById(int)>
<com.jadn.cc.ui.SearchResults: void showResults()> --> <com.jadn.cc.ui.SearchResults: android.view.View findViewById(int)>
<com.jadn.cc.ui.SearchResults: void add(int)> --> <com.jadn.cc.ui.SearchResults: android.view.View findViewById(int)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: float getMaxSpeedMultiplier(long)>
<org.apache.harmony.awt.datatransfer.DataSource: java.lang.String getText()> --> <org.apache.harmony.awt.datatransfer.DataSource: java.lang.String getText(boolean)>
<org.apache.harmony.awt.datatransfer.DataSource: java.lang.String getHTML()> --> <org.apache.harmony.awt.datatransfer.DataSource: java.lang.String getText(boolean)>
<com.jadn.cc.trace.DefaultExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)> --> <com.jadn.cc.trace.TraceUtil: void saveTrace(java.lang.Throwable)>
<com.jadn.cc.trace.TraceUtil: void report(java.lang.Throwable)> --> <com.jadn.cc.trace.TraceUtil: void saveTrace(java.lang.Throwable)>
<com.google.ads.AdRequest$Gender: void <clinit>()> --> <com.google.ads.AdRequest$Gender: void <init>(java.lang.String,int)>
<com.google.ads.mediation.admob.AdMobAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.admob.AdMobAdapter$a: void <init>(com.google.ads.mediation.admob.AdMobAdapter,com.google.ads.mediation.admob.AdMobAdapter$1)>
<com.jadn.cc.services.ContentService: void moveTo(double)> --> <com.jadn.cc.services.ContentService: int currentDuration()>
<com.jadn.cc.services.ContentService: int currentProgress()> --> <com.jadn.cc.services.ContentService: int currentDuration()>
<com.jadn.cc.services.ContentService: java.lang.String getDurationString()> --> <com.jadn.cc.services.ContentService: int currentDuration()>
<com.google.ads.internal.a$2: java.lang.Object b()> --> <com.google.ads.internal.a$2: com.google.ads.internal.a a()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.util.AdUtil: int a(android.content.Context,android.util.DisplayMetrics)>
<com.aocate.media.MediaPlayer: void <init>(android.content.Context,boolean)> --> <com.aocate.media.AndroidMediaPlayer: void <init>(com.aocate.media.MediaPlayer,android.content.Context)>
<com.aocate.media.MediaPlayer: void setupMpi(android.content.Context)> --> <com.aocate.media.AndroidMediaPlayer: void <init>(com.aocate.media.MediaPlayer,android.content.Context)>
<com.aocate.media.MediaPlayer$4$2: boolean handleMessage(android.os.Message)> --> <com.aocate.media.AndroidMediaPlayer: void <init>(com.aocate.media.MediaPlayer,android.content.Context)>
<com.google.ads.ae$a: void start()> --> <com.google.ads.ae$a: android.content.SharedPreferences$Editor a(android.app.Activity)>
<com.jadn.cc.ui.CarCast: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.services.ContentService: void purgeAll()>
<com.jadn.cc.ui.PodcastList$6: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.services.ContentService: void purgeAll()>
<com.jadn.cc.ui.Settings: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Settings: android.content.pm.PackageManager getPackageManager()>
<com.jadn.cc.ui.SearchResults: void showResults()> --> <com.jadn.cc.ui.SearchResults: android.content.Context getApplicationContext()>
<com.jadn.cc.ui.SearchResults: void add(int)> --> <com.jadn.cc.ui.SearchResults: android.content.Context getApplicationContext()>
<com.google.ads.util.AdUtil: void <clinit>()> --> <com.google.ads.util.AdUtil: int a(java.lang.String)>
<com.jadn.cc.ui.DownloadProgress$1: void onClick(android.view.View)> --> <com.jadn.cc.ui.DownloadProgress$1$1: void <init>(com.jadn.cc.ui.DownloadProgress$1)>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.internal.AdVideoView: void setVisibility(int)>
<org.apache.harmony.awt.internal.nls.Messages: java.lang.String getString(java.lang.String,java.lang.Object[])> --> <org.apache.harmony.awt.internal.nls.Messages: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.jadn.cc.services.ContentService: void startDownloadingNewPodCasts(int)> --> <com.jadn.cc.services.ContentService: void updateNotification(java.lang.String)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.ContentService: void updateNotification(java.lang.String)>
<com.jadn.cc.util.Mailer: boolean send()> --> <javax.mail.internet.InternetAddress: void <init>(java.lang.String)>
<com.google.ads.util.b: void a(java.lang.String)> --> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void a(java.lang.String,java.lang.Throwable)> --> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String,java.lang.Throwable)> --> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void b(java.lang.String,java.lang.Throwable)> --> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String,java.lang.Throwable)> --> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void c(java.lang.String)> --> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void b(java.lang.String)> --> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void e(java.lang.String)> --> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.util.b: void d(java.lang.String)> --> <com.google.ads.util.b: boolean a(java.lang.String,int)>
<com.google.ads.i: void a(com.google.ads.mediation.MediationAdapter)> --> <com.google.ads.j: void <init>(com.google.ads.h)>
<com.google.ads.util.AdUtil: org.json.JSONObject b(java.util.Map)> --> <org.json.JSONObject: void <init>()>
<com.jadn.cc.services.ContentService: java.util.SortedSet moveTop(java.util.SortedSet)> --> <com.jadn.cc.services.MetaHolder: java.util.SortedSet moveTop(java.util.SortedSet)>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.a: java.lang.String b()>
<com.aocate.media.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)> --> <com.aocate.media.MediaPlayer: com.aocate.media.ServiceBackedMediaPlayer access$102(com.aocate.media.MediaPlayer,com.aocate.media.ServiceBackedMediaPlayer)>
<com.aocate.media.MediaPlayer: boolean canSetPitch()> --> <com.aocate.media.MediaPlayerImpl: boolean canSetPitch()>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: boolean canSetPitch()>
<com.jadn.cc.services.MetaHolder: void <init>(android.content.Context,java.io.File)> --> <com.jadn.cc.services.MetaHolder: void loadMeta(java.io.File)>
<com.google.ads.internal.d: void <init>(com.google.ads.m,boolean)> --> <com.google.ads.ab: void <init>(com.google.ads.internal.d)>
<com.google.ads.internal.d: void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean)> --> <com.google.ads.e: void d(com.google.ads.h)>
<com.google.ads.e: void b()> --> <com.google.ads.e: void d(com.google.ads.h)>
<com.jadn.cc.ui.PodcastList: boolean onCreateOptionsMenu(android.view.Menu)> --> <com.jadn.cc.ui.PodcastList: android.view.MenuInflater getMenuInflater()>
<com.google.ads.e: boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long)> --> <com.google.ads.h: void a(android.app.Activity)>
<com.google.ads.util.c: byte[] c(byte[],int)> --> <com.google.ads.util.c: byte[] b(byte[],int,int,int)>
<com.google.ads.e: void a(com.google.ads.h)> --> <com.google.ads.e: boolean a(com.google.ads.h,java.lang.String)>
<com.google.ads.e: void c(com.google.ads.h)> --> <com.google.ads.e: boolean a(com.google.ads.h,java.lang.String)>
<com.google.ads.e: void b(com.google.ads.h)> --> <com.google.ads.e: boolean a(com.google.ads.h,java.lang.String)>
<com.google.ads.e: void a(com.google.ads.h,boolean)> --> <com.google.ads.e: boolean a(com.google.ads.h,java.lang.String)>
<org.apache.harmony.awt.datatransfer.DataSnapshot: void <init>(org.apache.harmony.awt.datatransfer.DataProvider)> --> <org.apache.harmony.awt.datatransfer.DataProvider: java.lang.String getHTML()>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getHTML(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProvider: java.lang.String getHTML()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.mediation.admob.AdMobAdapterExtras: java.util.Map getExtras()>
<com.google.ads.AdRequest: com.google.ads.AdRequest addExtra(java.lang.String,java.lang.Object)> --> <com.google.ads.mediation.admob.AdMobAdapterExtras: java.util.Map getExtras()>
<com.google.ads.searchads.SearchAdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.mediation.admob.AdMobAdapterExtras: java.util.Map getExtras()>
<com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat: void <init>(com.jadn.cc.services.RemoteControlClientCompat,java.lang.Object,com.jadn.cc.services.RemoteControlClientCompat$1)> --> <com.jadn.cc.services.RemoteControlClientCompat$MetadataEditorCompat: void <init>(com.jadn.cc.services.RemoteControlClientCompat,java.lang.Object)>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.e$7: void <init>(com.google.ads.e,com.google.ads.c)>
<com.google.ads.internal.AdWebView: void onMeasure(int,int)> --> <com.google.ads.internal.AdWebView: void setVisibility(int)>
<com.google.ads.internal.d: void a()> --> <com.google.ads.internal.AdWebView: void setVisibility(int)>
<com.google.ads.internal.c$a: void start()> --> <com.google.ads.internal.AdWebView: void setVisibility(int)>
<com.google.ads.internal.d: void B()> --> <com.google.ads.internal.AdWebView: void setVisibility(int)>
<com.jadn.cc.ui.SearchResults: java.util.List getResults()> --> <com.jadn.cc.core.CarCastApplication: void esay(java.lang.Throwable)>
<com.jadn.cc.ui.Downloader: void start()> --> <com.jadn.cc.core.CarCastApplication: void esay(java.lang.Throwable)>
<com.jadn.cc.ui.CarCast$4: boolean onTouch(android.view.View,android.view.MotionEvent)> --> <com.jadn.cc.core.CarCastApplication: void esay(java.lang.Throwable)>
<com.jadn.cc.ui.DownloadProgress: void start()> --> <com.jadn.cc.core.CarCastApplication: void esay(java.lang.Throwable)>
<com.aocate.media.MediaPlayer: void seekTo(int)> --> <com.aocate.media.MediaPlayerImpl: void seekTo(int)>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void seekTo(int)>
<com.google.ads.e: void a(com.google.ads.e,com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)>
<com.jadn.cc.ui.AudioRecorder: void showRecordings()> --> <com.jadn.cc.util.RecordingSet: java.util.List getRecordings()>
<com.jadn.cc.util.RecordingSet: void delete(com.jadn.cc.util.Recording)> --> <com.jadn.cc.util.RecordingSet: java.util.List getRecordings()>
<com.jadn.cc.ui.AudioRecorder$1: void start()> --> <com.jadn.cc.util.RecordingSet: java.util.List getRecordings()>
<com.jadn.cc.util.MailRecordings: void doIt(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.util.RecordingSet: java.util.List getRecordings()>
<com.jadn.cc.core.WifiConnectedReceiver: void onReceive(android.content.Context,android.content.Intent)> --> <com.jadn.cc.util.RecordingSet: java.util.List getRecordings()>
<com.jadn.cc.ui.AudioRecorder$5: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> --> <com.jadn.cc.util.RecordingSet: java.util.List getRecordings()>
<com.jadn.cc.util.RecordingSet: void updateNotification()> --> <com.jadn.cc.util.RecordingSet: java.util.List getRecordings()>
<com.jadn.cc.ui.AudioRecorder: boolean onContextItemSelected(android.view.MenuItem)> --> <com.jadn.cc.util.RecordingSet: java.util.List getRecordings()>
<com.google.ads.mediation.admob.AdMobAdapter$b: void onLeaveApplication(com.google.ads.Ad)> --> <com.google.ads.mediation.MediationInterstitialListener: void onLeaveApplication(com.google.ads.mediation.MediationInterstitialAdapter)>
<com.google.ads.mediation.customevent.CustomEventAdapter$b: void onLeaveApplication()> --> <com.google.ads.mediation.MediationInterstitialListener: void onLeaveApplication(com.google.ads.mediation.MediationInterstitialAdapter)>
<com.jadn.cc.ui.Search: void onResume()> --> <com.jadn.cc.ui.Search: android.view.View findViewById(int)>
<com.jadn.cc.ui.Search$1: void start()> --> <com.jadn.cc.ui.Search: android.view.View findViewById(int)>
<com.jadn.cc.ui.Search: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Search: android.view.View findViewById(int)>
<com.aocate.media.ServiceBackedMediaPlayer: boolean canSetSpeed()> --> <com.aocate.presto.service.IPlayMedia_0_8: boolean canSetSpeed(long)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> --> <com.google.ads.internal.a: java.lang.String a(android.net.Uri,java.util.HashMap)>
<com.google.ads.internal.a: void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView)> --> <com.google.ads.n: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)>
<com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8$Stub: com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8 asInterface(android.os.IBinder)> --> <com.aocate.presto.service.IOnBufferingUpdateListenerCallback_0_8$Stub$Proxy: void <init>(android.os.IBinder)>
<myjava.awt.datatransfer.DataFlavor: java.util.List selectBestByAlphabet(java.util.List)> --> <myjava.awt.datatransfer.DataFlavor: java.lang.String getCharset()>
<myjava.awt.datatransfer.DataFlavor: myjava.awt.datatransfer.DataFlavor selectBestTextFlavor(myjava.awt.datatransfer.DataFlavor[])> --> <myjava.awt.datatransfer.DataFlavor: java.lang.String getCharset()>
<myjava.awt.datatransfer.DataFlavor: java.io.Reader getReaderForText(myjava.awt.datatransfer.Transferable)> --> <myjava.awt.datatransfer.DataFlavor: java.lang.String getCharset()>
<myjava.awt.datatransfer.DataFlavor: boolean isFlavorTextType()> --> <myjava.awt.datatransfer.DataFlavor: java.lang.String getCharset()>
<myjava.awt.datatransfer.DataFlavor: java.lang.String getKeyInfo()> --> <myjava.awt.datatransfer.DataFlavor: java.lang.String getCharset()>
<myjava.awt.datatransfer.DataFlavor: boolean equals(myjava.awt.datatransfer.DataFlavor)> --> <myjava.awt.datatransfer.DataFlavor: java.lang.String getCharset()>
<myjava.awt.datatransfer.DataFlavor: java.util.List getFlavors(java.util.List,java.lang.String[])> --> <myjava.awt.datatransfer.DataFlavor: java.lang.String getCharset()>
<com.google.ads.mediation.admob.AdMobAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.AdSize: boolean isAutoHeight()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.AdSize: boolean isAutoHeight()>
<com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)> --> <com.google.ads.AdSize: boolean isAutoHeight()>
<com.google.ads.AdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.af: boolean a(android.content.Context)>
<com.google.ads.ae: boolean a(android.content.Context,long,android.content.SharedPreferences)> --> <com.google.ads.af: boolean a(android.content.Context)>
<org.apache.harmony.awt.datatransfer.DTK: org.apache.harmony.awt.datatransfer.DTK createDTK()> --> <org.apache.harmony.misc.SystemUtils: int getOS()>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.AdRequest: com.google.ads.AdRequest setGender(com.google.ads.AdRequest$Gender)>
<com.jadn.cc.ui.Subscriptions: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Subscriptions: void setTitle(java.lang.CharSequence)>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.util.AdUtil: java.lang.String f(android.content.Context)>
<com.google.ads.util.AdUtil: boolean c(android.content.Context)> --> <com.google.ads.util.AdUtil: boolean a(int,int,java.lang.String)>
<com.jadn.cc.ui.OpmlImport: void importOpml()> --> <com.jadn.cc.ui.OpmlImport: void finish()>
<com.aocate.media.ServiceBackedMediaPlayer: boolean isLooping()> --> <com.aocate.presto.service.IPlayMedia_0_8: boolean isLooping(long)>
<com.google.ads.mediation.admob.AdMobAdapter$a: void onDismissScreen(com.google.ads.Ad)> --> <com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.mediation.MediationBannerListener a(com.google.ads.mediation.admob.AdMobAdapter)>
<com.google.ads.mediation.admob.AdMobAdapter$a: void onLeaveApplication(com.google.ads.Ad)> --> <com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.mediation.MediationBannerListener a(com.google.ads.mediation.admob.AdMobAdapter)>
<com.google.ads.mediation.admob.AdMobAdapter$a: void onPresentScreen(com.google.ads.Ad)> --> <com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.mediation.MediationBannerListener a(com.google.ads.mediation.admob.AdMobAdapter)>
<com.google.ads.mediation.admob.AdMobAdapter$a: void onReceiveAd(com.google.ads.Ad)> --> <com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.mediation.MediationBannerListener a(com.google.ads.mediation.admob.AdMobAdapter)>
<com.google.ads.mediation.admob.AdMobAdapter$a: void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.mediation.MediationBannerListener a(com.google.ads.mediation.admob.AdMobAdapter)>
<com.jadn.cc.util.Mailer: void addAttachment(java.lang.String)> --> <javax.activation.FileDataSource: void <init>(java.lang.String)>
<com.jadn.cc.ui.CarCast: void updateUI()> --> <com.jadn.cc.services.ContentService: java.lang.String getLocationString()>
<org.apache.harmony.awt.datatransfer.DataSnapshot: void <init>(org.apache.harmony.awt.datatransfer.DataProvider)> --> <org.apache.harmony.awt.datatransfer.DataProvider: byte[] getSerializedObject(java.lang.Class)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getSerializedObject(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProvider: byte[] getSerializedObject(java.lang.Class)>
<com.google.ads.mediation.admob.AdMobAdapter$a: void onPresentScreen(com.google.ads.Ad)> --> <com.google.ads.mediation.MediationBannerListener: void onClick(com.google.ads.mediation.MediationBannerAdapter)>
<com.google.ads.mediation.customevent.CustomEventAdapter$a: void onClick()> --> <com.google.ads.mediation.MediationBannerListener: void onClick(com.google.ads.mediation.MediationBannerAdapter)>
<com.jadn.cc.ui.PodcastList: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.BaseActivity: void onCreate(android.os.Bundle)>
<com.jadn.cc.ui.Search: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.BaseActivity: void onCreate(android.os.Bundle)>
<com.jadn.cc.ui.Subscriptions: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.BaseActivity: void onCreate(android.os.Bundle)>
<com.jadn.cc.ui.CarCast: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.BaseActivity: void onCreate(android.os.Bundle)>
<com.jadn.cc.ui.SearchResults: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.BaseActivity: void onCreate(android.os.Bundle)>
<com.jadn.cc.ui.Stats: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.BaseActivity: void onCreate(android.os.Bundle)>
<com.jadn.cc.ui.OpmlImport: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.BaseActivity: void onCreate(android.os.Bundle)>
<com.jadn.cc.ui.AudioRecorder: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.BaseActivity: void onCreate(android.os.Bundle)>
<com.jadn.cc.ui.DownloadProgress: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.BaseActivity: void onCreate(android.os.Bundle)>
<com.jadn.cc.ui.SubscriptionEdit: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.BaseActivity: void onCreate(android.os.Bundle)>
<com.jadn.cc.ui.OpmlLocator: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.BaseActivity: void onCreate(android.os.Bundle)>
<com.jadn.cc.ui.Downloader: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.BaseActivity: void onCreate(android.os.Bundle)>
<com.google.ads.mediation.admob.AdMobAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras)> --> <com.google.ads.mediation.admob.AdMobAdapter: void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)>
<com.jadn.cc.ui.CarCast: void onResume()> --> <com.jadn.cc.util.RecordingSet: void clearNotifications()>
<com.google.ads.AdActivity: com.google.ads.internal.AdVideoView a(android.app.Activity)> --> <com.google.ads.internal.AdVideoView: void <init>(android.app.Activity,com.google.ads.internal.AdWebView)>
<com.jadn.cc.services.ContentService: void initDirs()> --> <com.jadn.cc.core.Config: java.io.File getCarCastPath(java.lang.String)>
<com.jadn.cc.util.RecordingSet: void <init>(android.content.Context)> --> <com.jadn.cc.core.Config: java.io.File getCarCastPath(java.lang.String)>
<com.google.ads.e$3: void start()> --> <com.google.ads.internal.d: void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean)>
<com.google.ads.e$8: void start()> --> <com.google.ads.internal.d: void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean)>
<com.google.ads.e$3: void start()> --> <com.google.ads.e$3: void run()>
<com.aocate.media.MediaPlayer: void start()> --> <com.aocate.media.MediaPlayerImpl: void start()>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void start()>
<com.jadn.cc.util.Mailer: boolean send()> --> <javax.mail.Session: javax.mail.Session getInstance(java.util.Properties,javax.mail.Authenticator)>
<com.google.ads.util.AdUtil: java.lang.String c(java.lang.String)> --> <javax.crypto.Cipher: void init(int,java.security.Key)>
<com.google.ads.e: boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long)> --> <com.google.ads.internal.d: void a(java.lang.Runnable)>
<com.google.ads.e: void a(com.google.ads.h)> --> <com.google.ads.internal.d: void a(java.lang.Runnable)>
<com.google.ads.e: void a(com.google.ads.h,android.view.View)> --> <com.google.ads.internal.d: void a(java.lang.Runnable)>
<com.google.ads.internal.c: void a(com.google.ads.AdRequest$ErrorCode,boolean)> --> <com.google.ads.internal.d: void a(java.lang.Runnable)>
<com.google.ads.e: void b(com.google.ads.h)> --> <com.google.ads.internal.d: void a(java.lang.Runnable)>
<com.google.ads.internal.c: void b()> --> <com.google.ads.internal.d: void a(java.lang.Runnable)>
<com.google.ads.internal.c: void f()> --> <com.google.ads.internal.d: void a(java.lang.Runnable)>
<com.google.ads.internal.c: void f(java.lang.String)> --> <com.google.ads.internal.d: void a(java.lang.Runnable)>
<com.google.ads.internal.c: void e()> --> <com.google.ads.internal.d: void a(java.lang.Runnable)>
<com.google.ads.e: void c(com.google.ads.h)> --> <com.google.ads.internal.d: void a(java.lang.Runnable)>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.internal.d: void a(java.lang.Runnable)>
<com.google.ads.e: void a(com.google.ads.h,boolean)> --> <com.google.ads.internal.d: void a(java.lang.Runnable)>
<com.google.ads.z: void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView)> --> <com.google.ads.AdActivity: com.google.ads.internal.AdVideoView getAdVideoView()>
<com.google.ads.internal.d: void b()> --> <com.google.ads.internal.AdWebView: void destroy()>
<com.google.ads.AdActivity: void onDestroy()> --> <com.google.ads.internal.AdWebView: void destroy()>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void setSpeedAdjustmentAlgorithm(int)>
<com.aocate.media.MediaPlayer: void setSpeedAdjustmentAlgorithm(int)> --> <com.aocate.media.MediaPlayerImpl: void setSpeedAdjustmentAlgorithm(int)>
<com.google.ads.AdView: void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet)> --> <com.google.ads.AdSize: int getHeight()>
<com.google.ads.AdSize: java.lang.String toString()> --> <com.google.ads.AdSize: int getHeight()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.AdSize: int getHeight()>
<com.google.ads.internal.AdWebView: void onMeasure(int,int)> --> <com.google.ads.AdSize: int getHeight()>
<com.google.ads.AdSize: com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context)> --> <com.google.ads.AdSize: int getHeight()>
<com.jadn.cc.ui.TimePickerPreference: void onSetInitialValue(boolean,java.lang.Object)> --> <com.jadn.cc.ui.TimePickerPreference: int getHour(java.lang.String)>
<com.jadn.cc.ui.Downloader$2: void start()> --> <com.jadn.cc.ui.Downloader: void startActivity(android.content.Intent)>
<com.jadn.cc.ui.DownloadProgress: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.DownloadProgress$3: void <init>(com.jadn.cc.ui.DownloadProgress)>
<com.google.ads.AdActivity: void a(com.google.ads.internal.AdWebView,boolean,int,boolean)> --> <com.google.ads.util.g: void a(android.view.Window)>
<com.google.ads.c$1: void <init>()> --> <com.google.ads.c$1: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jadn.cc.ui.PodcastList$5: void onClick(android.view.View)> --> <com.jadn.cc.services.ContentService: java.util.SortedSet moveBottom(java.util.SortedSet)>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void unregisterOnSpeedAdjustmentAvailableChangedCallback(long,com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8)> --> <com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8: android.os.IBinder asBinder()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub$Proxy: void registerOnSpeedAdjustmentAvailableChangedCallback(long,com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8)> --> <com.aocate.presto.service.IOnSpeedAdjustmentAvailableChangedListenerCallback_0_8: android.os.IBinder asBinder()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: int getVersionCode()>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayer$OnSpeedAdjustmentAvailableChangedListener: void onSpeedAdjustmentAvailableChanged(com.aocate.media.MediaPlayer,boolean)>
<com.aocate.media.ServiceBackedMediaPlayer$9: void onSpeedAdjustmentAvailableChanged(boolean)> --> <com.aocate.media.MediaPlayer$OnSpeedAdjustmentAvailableChangedListener: void onSpeedAdjustmentAvailableChanged(com.aocate.media.MediaPlayer,boolean)>
<com.aocate.media.MediaPlayer$3: void onSpeedAdjustmentAvailableChanged(com.aocate.media.MediaPlayer,boolean)> --> <com.aocate.media.MediaPlayer$OnSpeedAdjustmentAvailableChangedListener: void onSpeedAdjustmentAvailableChanged(com.aocate.media.MediaPlayer,boolean)>
<com.aocate.media.ServiceBackedMediaPlayer: java.lang.String getServiceVersionName()> --> <com.aocate.presto.service.IPlayMedia_0_8: java.lang.String getVersionName()>
<com.jadn.cc.ui.Subscriptions: boolean onContextItemSelected(android.view.MenuItem)> --> <com.jadn.cc.ui.Subscriptions: android.content.Context getApplicationContext()>
<com.jadn.cc.ui.Subscriptions: void onCreate(android.os.Bundle)> --> <com.jadn.cc.ui.Subscriptions: android.content.Context getApplicationContext()>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.MediationAdRequest: android.location.Location getLocation()>
<com.google.ads.AdActivity: void a(com.google.ads.internal.AdWebView,boolean,int,boolean)> --> <com.google.ads.AdActivity: void setRequestedOrientation(int)>
<com.google.ads.internal.f: void a(java.net.HttpURLConnection)> --> <com.google.ads.internal.f: void e(java.net.HttpURLConnection)>
<myjava.awt.datatransfer.DataFlavor: void <init>(java.lang.Class,java.lang.String)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: void addParameter(java.lang.String,java.lang.String)>
<myjava.awt.datatransfer.DataFlavor: void init(java.lang.String,java.lang.String,java.lang.ClassLoader)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: void addParameter(java.lang.String,java.lang.String)>
<com.jadn.cc.ui.Splash$1: void onClick(android.view.View)> --> <com.jadn.cc.ui.Splash: void finish()>
<com.google.ads.e: void b(com.google.ads.c,com.google.ads.AdRequest)> --> <com.google.ads.c: java.util.List g()>
<com.google.ads.mediation.MediationServerParameters: void load(java.util.Map)> --> <com.google.ads.mediation.MediationServerParameters$Parameter: java.lang.String name()>
<com.aocate.media.ServiceBackedMediaPlayer$3: void <init>(com.aocate.media.ServiceBackedMediaPlayer)> --> <com.aocate.presto.service.IOnCompletionListenerCallback_0_8$Stub: void <init>()>
<com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> --> <com.aocate.presto.service.IPlayMedia_0_8$Stub: boolean isLooping(long)>
<com.jadn.cc.services.DownloadHelper: void downloadNewPodCasts(com.jadn.cc.services.ContentService)> --> <com.jadn.cc.services.DownloadHistory: int size()>
<com.jadn.cc.ui.Stats: void onContentService()> --> <com.jadn.cc.services.DownloadHistory: int size()>
<com.google.ads.AdActivity: android.view.View a(int)> --> <com.google.ads.AdActivity: android.content.Context getApplicationContext()>
<com.google.ads.AdActivity: void onCreate(android.os.Bundle)> --> <com.google.ads.AdActivity: android.content.Context getApplicationContext()>
<com.google.ads.internal.c: void start()> --> <com.google.ads.internal.d: void d()>
<com.google.ads.ae$a: void <init>(android.app.Activity)> --> <com.google.ads.ae$a: void <init>(android.app.Activity,android.content.SharedPreferences$Editor)>
<myjava.awt.datatransfer.MimeTypeProcessor: void retrieveParams(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor: int getNextMeaningfulIndex(java.lang.String,int)>
<myjava.awt.datatransfer.MimeTypeProcessor: void retrieveType(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor: int getNextMeaningfulIndex(java.lang.String,int)>
<myjava.awt.datatransfer.MimeTypeProcessor: java.lang.String retrieveToken(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor: int getNextMeaningfulIndex(java.lang.String,int)>
<myjava.awt.datatransfer.MimeTypeProcessor: void retrieveParam(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor: int getNextMeaningfulIndex(java.lang.String,int)>
<com.aocate.media.MediaPlayer: void <init>(android.content.Context,boolean)> --> <com.aocate.media.MediaPlayer: void setupMpi(android.content.Context)>
<com.aocate.media.MediaPlayer: void prepareAsync()> --> <com.aocate.media.MediaPlayer: void setupMpi(android.content.Context)>
<com.aocate.media.MediaPlayer: void prepare()> --> <com.aocate.media.MediaPlayer: void setupMpi(android.content.Context)>
<com.aocate.media.MediaPlayer: void setDataSource(java.lang.String)> --> <com.aocate.media.MediaPlayer: void setupMpi(android.content.Context)>
<com.aocate.media.MediaPlayer: void start()> --> <com.aocate.media.MediaPlayer: void setupMpi(android.content.Context)>
<com.aocate.media.MediaPlayer: void setUseService(boolean)> --> <com.aocate.media.MediaPlayer: void setupMpi(android.content.Context)>
<com.aocate.media.MediaPlayer: void stop()> --> <com.aocate.media.MediaPlayer: void setupMpi(android.content.Context)>
<com.aocate.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)> --> <com.aocate.media.MediaPlayer: void setupMpi(android.content.Context)>
<com.aocate.media.MediaPlayer: void pause()> --> <com.aocate.media.MediaPlayer: void setupMpi(android.content.Context)>
<com.google.ads.util.a: void c(boolean,java.lang.String)> --> <com.google.ads.util.a$a: void <init>(java.lang.String)>
<com.google.ads.j: void onClick(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.e: void a(com.google.ads.h,boolean)>
<com.jadn.cc.ui.PodcastList$1$1: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.services.ContentService: void deletePodcast(int)>
<com.jadn.cc.services.ContentService: void startDownloadingNewPodCasts(int)> --> <com.jadn.cc.services.ContentService: void deletePodcast(int)>
<com.jadn.cc.ui.PodcastList$11$1: void onClick(android.content.DialogInterface,int)> --> <com.jadn.cc.services.ContentService: void deletePodcast(int)>
<com.jadn.cc.ui.PodcastList: boolean onMenuItemSelected(int,android.view.MenuItem)> --> <com.jadn.cc.services.ContentService: void deletePodcast(int)>
<com.google.ads.util.i$a: void <init>(com.google.ads.util.i,java.lang.String)> --> <com.google.ads.util.i$a: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<com.google.ads.util.i$a: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object,com.google.ads.util.i$1)> --> <com.google.ads.util.i$a: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)>
<myjava.awt.datatransfer.MimeTypeProcessor: void retrieveType(java.lang.String,myjava.awt.datatransfer.MimeTypeProcessor$MimeType,myjava.awt.datatransfer.MimeTypeProcessor$StringPosition)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: void access$2(myjava.awt.datatransfer.MimeTypeProcessor$MimeType,java.lang.String)>
<com.google.ads.internal.AdVideoView: void <init>(android.app.Activity,com.google.ads.internal.AdWebView)> --> <com.google.ads.internal.AdVideoView: void a()>
<org.apache.harmony.awt.datatransfer.DTK: org.apache.harmony.awt.datatransfer.DTK getDTK()> --> <org.apache.harmony.awt.ContextStorage: java.lang.Object getContextLock()>
<com.aocate.media.MediaPlayer$4: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> --> <com.aocate.media.MediaPlayer$4$1: void <init>(com.aocate.media.MediaPlayer$4)>
<com.google.ads.util.i$b: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)> --> <com.google.ads.util.i$a: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object,com.google.ads.util.i$1)>
<com.google.ads.util.i$d: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)> --> <com.google.ads.util.i$a: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object,com.google.ads.util.i$1)>
<com.google.ads.util.i$c: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object)> --> <com.google.ads.util.i$a: void <init>(com.google.ads.util.i,java.lang.String,java.lang.Object,com.google.ads.util.i$1)>
<com.jadn.cc.ui.SubscriptionEdit: void <init>()> --> <com.jadn.cc.ui.SubscriptionEdit$3: void <init>(com.jadn.cc.ui.SubscriptionEdit)>
<com.jadn.cc.services.ContentService: void pauseNow()> --> <com.aocate.media.MediaPlayer: void pause()>
<com.google.ads.AdView: void stopLoading()> --> <com.google.ads.internal.d: void z()>
<com.google.ads.internal.d: void b()> --> <com.google.ads.internal.d: void z()>
<com.google.ads.InterstitialAd: void stopLoading()> --> <com.google.ads.internal.d: void z()>
<com.google.ads.internal.c: java.lang.String a(java.util.Map,android.app.Activity)> --> <com.google.ads.internal.c$b: void <init>(com.google.ads.internal.c,java.lang.String)>
<com.jadn.cc.ui.Settings: void onStop()> --> <com.jadn.cc.ui.Settings: boolean stopService(android.content.Intent)>
<com.jadn.cc.ui.AudioRecorder: boolean onCreateOptionsMenu(android.view.Menu)> --> <com.jadn.cc.ui.AudioRecorder: android.view.MenuInflater getMenuInflater()>
<com.aocate.media.MediaPlayer$4$2: boolean handleMessage(android.os.Message)> --> <com.aocate.media.MediaPlayer: android.content.Context access$400(com.aocate.media.MediaPlayer)>
<com.google.ads.mediation.admob.AdMobAdapter: com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras)> --> <com.google.ads.mediation.admob.AdMobAdapterExtras: void <init>(com.google.ads.mediation.admob.AdMobAdapterExtras)>
<com.google.ads.util.AdUtil: java.lang.String c(java.lang.String)> --> <javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<com.aocate.media.ServiceBackedMediaPlayer: void setLooping(boolean)> --> <com.aocate.presto.service.IPlayMedia_0_8: void setLooping(long,boolean)>
<com.google.ads.internal.a$1: void <init>()> --> <com.google.ads.w: void <init>()>
<com.jadn.cc.core.MediaMode: void <clinit>()> --> <com.jadn.cc.core.MediaMode: void <init>(java.lang.String,int)>
<com.google.ads.internal.d: void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)> --> <com.google.ads.g: java.lang.String a(java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.jadn.cc.ui.SubscriptionEdit$1: void onClick(android.view.View)> --> <com.jadn.cc.ui.SubscriptionEdit: void finish()>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getPlainText(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getTextRepresentation(java.lang.String,java.awt.datatransfer.DataFlavor)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getURL(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getTextRepresentation(java.lang.String,java.awt.datatransfer.DataFlavor)>
<org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getHTML(java.awt.datatransfer.DataFlavor)> --> <org.apache.harmony.awt.datatransfer.DataProxy: java.lang.Object getTextRepresentation(java.lang.String,java.awt.datatransfer.DataFlavor)>
<com.google.ads.internal.AdWebView: void <init>(com.google.ads.m,com.google.ads.AdSize)> --> <com.google.ads.internal.AdWebView: android.webkit.WebSettings getSettings()>
<com.google.ads.j: void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.h: void a(boolean)>
<com.google.ads.j: void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter)> --> <com.google.ads.h: void a(boolean)>
<com.google.ads.k: void onReceivedAd(com.google.ads.mediation.MediationInterstitialAdapter)> --> <com.google.ads.h: void a(boolean)>
<com.google.ads.i: void a(java.lang.String,java.lang.Throwable)> --> <com.google.ads.h: void a(boolean)>
<com.google.ads.k: void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode)> --> <com.google.ads.h: void a(boolean)>
<com.google.ads.util.g$a: boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)> --> <com.google.ads.util.g$a: boolean a(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean)>
<com.google.ads.util.g$a: boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)> --> <com.google.ads.util.g$a: boolean a(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean)>
<com.google.ads.util.g$a: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)> --> <com.google.ads.util.g$a: boolean a(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean)>
<com.google.ads.util.g$a: boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)> --> <com.google.ads.util.g$a: boolean a(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean)>
<myjava.awt.datatransfer.DataFlavor: boolean isMimeTypeEqual(java.lang.String)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: boolean equals(myjava.awt.datatransfer.MimeTypeProcessor$MimeType)>
<myjava.awt.datatransfer.DataFlavor: boolean isMimeTypeEqual(myjava.awt.datatransfer.DataFlavor)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: boolean equals(myjava.awt.datatransfer.MimeTypeProcessor$MimeType)>
<myjava.awt.datatransfer.DataFlavor: boolean equals(myjava.awt.datatransfer.DataFlavor)> --> <myjava.awt.datatransfer.MimeTypeProcessor$MimeType: boolean equals(myjava.awt.datatransfer.MimeTypeProcessor$MimeType)>
<com.google.ads.searchads.SearchAdRequest: java.util.Map getRequestMap(android.content.Context)> --> <com.google.ads.searchads.SearchAdRequest: com.google.ads.AdRequest setNetworkExtras(com.google.ads.mediation.NetworkExtras)>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void muteNextSeek()>
<com.aocate.media.MediaPlayer: void switchMediaPlayerImpl(com.aocate.media.MediaPlayerImpl,com.aocate.media.MediaPlayerImpl)> --> <com.aocate.media.MediaPlayerImpl: void setAudioStreamType(int)>
<com.aocate.media.MediaPlayer: void setAudioStreamType(int)> --> <com.aocate.media.MediaPlayerImpl: void setAudioStreamType(int)>
